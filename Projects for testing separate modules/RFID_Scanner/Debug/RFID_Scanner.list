
RFID_Scanner.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00007c30  08000190  08000190  00010190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000004d4  08007dc0  08007dc0  00017dc0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08008294  08008294  000201e0  2**0
                  CONTENTS
  4 .ARM          00000008  08008294  08008294  00018294  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800829c  0800829c  000201e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800829c  0800829c  0001829c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080082a0  080082a0  000182a0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001e0  20000000  080082a4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000201e0  2**0
                  CONTENTS
 10 .bss          00000184  200001e0  200001e0  000201e0  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  20000364  20000364  000201e0  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000201e0  2**0
                  CONTENTS, READONLY
 13 .debug_info   000111eb  00000000  00000000  00020210  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000254d  00000000  00000000  000313fb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000fc8  00000000  00000000  00033948  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000ed0  00000000  00000000  00034910  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00022ba2  00000000  00000000  000357e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000121e8  00000000  00000000  00058382  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000cedc7  00000000  00000000  0006a56a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  00139331  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000053cc  00000000  00000000  00139384  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	200001e0 	.word	0x200001e0
 80001ac:	00000000 	.word	0x00000000
 80001b0:	08007da8 	.word	0x08007da8

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	200001e4 	.word	0x200001e4
 80001cc:	08007da8 	.word	0x08007da8

080001d0 <strlen>:
 80001d0:	4603      	mov	r3, r0
 80001d2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001d6:	2a00      	cmp	r2, #0
 80001d8:	d1fb      	bne.n	80001d2 <strlen+0x2>
 80001da:	1a18      	subs	r0, r3, r0
 80001dc:	3801      	subs	r0, #1
 80001de:	4770      	bx	lr

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <__aeabi_drsub>:
 8000280:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000284:	e002      	b.n	800028c <__adddf3>
 8000286:	bf00      	nop

08000288 <__aeabi_dsub>:
 8000288:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800028c <__adddf3>:
 800028c:	b530      	push	{r4, r5, lr}
 800028e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000292:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000296:	ea94 0f05 	teq	r4, r5
 800029a:	bf08      	it	eq
 800029c:	ea90 0f02 	teqeq	r0, r2
 80002a0:	bf1f      	itttt	ne
 80002a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002b2:	f000 80e2 	beq.w	800047a <__adddf3+0x1ee>
 80002b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002be:	bfb8      	it	lt
 80002c0:	426d      	neglt	r5, r5
 80002c2:	dd0c      	ble.n	80002de <__adddf3+0x52>
 80002c4:	442c      	add	r4, r5
 80002c6:	ea80 0202 	eor.w	r2, r0, r2
 80002ca:	ea81 0303 	eor.w	r3, r1, r3
 80002ce:	ea82 0000 	eor.w	r0, r2, r0
 80002d2:	ea83 0101 	eor.w	r1, r3, r1
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	2d36      	cmp	r5, #54	; 0x36
 80002e0:	bf88      	it	hi
 80002e2:	bd30      	pophi	{r4, r5, pc}
 80002e4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002ec:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80002f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002f4:	d002      	beq.n	80002fc <__adddf3+0x70>
 80002f6:	4240      	negs	r0, r0
 80002f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002fc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000300:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000304:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000308:	d002      	beq.n	8000310 <__adddf3+0x84>
 800030a:	4252      	negs	r2, r2
 800030c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000310:	ea94 0f05 	teq	r4, r5
 8000314:	f000 80a7 	beq.w	8000466 <__adddf3+0x1da>
 8000318:	f1a4 0401 	sub.w	r4, r4, #1
 800031c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000320:	db0d      	blt.n	800033e <__adddf3+0xb2>
 8000322:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000326:	fa22 f205 	lsr.w	r2, r2, r5
 800032a:	1880      	adds	r0, r0, r2
 800032c:	f141 0100 	adc.w	r1, r1, #0
 8000330:	fa03 f20e 	lsl.w	r2, r3, lr
 8000334:	1880      	adds	r0, r0, r2
 8000336:	fa43 f305 	asr.w	r3, r3, r5
 800033a:	4159      	adcs	r1, r3
 800033c:	e00e      	b.n	800035c <__adddf3+0xd0>
 800033e:	f1a5 0520 	sub.w	r5, r5, #32
 8000342:	f10e 0e20 	add.w	lr, lr, #32
 8000346:	2a01      	cmp	r2, #1
 8000348:	fa03 fc0e 	lsl.w	ip, r3, lr
 800034c:	bf28      	it	cs
 800034e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000352:	fa43 f305 	asr.w	r3, r3, r5
 8000356:	18c0      	adds	r0, r0, r3
 8000358:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800035c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000360:	d507      	bpl.n	8000372 <__adddf3+0xe6>
 8000362:	f04f 0e00 	mov.w	lr, #0
 8000366:	f1dc 0c00 	rsbs	ip, ip, #0
 800036a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800036e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000372:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000376:	d31b      	bcc.n	80003b0 <__adddf3+0x124>
 8000378:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800037c:	d30c      	bcc.n	8000398 <__adddf3+0x10c>
 800037e:	0849      	lsrs	r1, r1, #1
 8000380:	ea5f 0030 	movs.w	r0, r0, rrx
 8000384:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000388:	f104 0401 	add.w	r4, r4, #1
 800038c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000390:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000394:	f080 809a 	bcs.w	80004cc <__adddf3+0x240>
 8000398:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800039c:	bf08      	it	eq
 800039e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003a2:	f150 0000 	adcs.w	r0, r0, #0
 80003a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003aa:	ea41 0105 	orr.w	r1, r1, r5
 80003ae:	bd30      	pop	{r4, r5, pc}
 80003b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003b4:	4140      	adcs	r0, r0
 80003b6:	eb41 0101 	adc.w	r1, r1, r1
 80003ba:	3c01      	subs	r4, #1
 80003bc:	bf28      	it	cs
 80003be:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003c2:	d2e9      	bcs.n	8000398 <__adddf3+0x10c>
 80003c4:	f091 0f00 	teq	r1, #0
 80003c8:	bf04      	itt	eq
 80003ca:	4601      	moveq	r1, r0
 80003cc:	2000      	moveq	r0, #0
 80003ce:	fab1 f381 	clz	r3, r1
 80003d2:	bf08      	it	eq
 80003d4:	3320      	addeq	r3, #32
 80003d6:	f1a3 030b 	sub.w	r3, r3, #11
 80003da:	f1b3 0220 	subs.w	r2, r3, #32
 80003de:	da0c      	bge.n	80003fa <__adddf3+0x16e>
 80003e0:	320c      	adds	r2, #12
 80003e2:	dd08      	ble.n	80003f6 <__adddf3+0x16a>
 80003e4:	f102 0c14 	add.w	ip, r2, #20
 80003e8:	f1c2 020c 	rsb	r2, r2, #12
 80003ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80003f0:	fa21 f102 	lsr.w	r1, r1, r2
 80003f4:	e00c      	b.n	8000410 <__adddf3+0x184>
 80003f6:	f102 0214 	add.w	r2, r2, #20
 80003fa:	bfd8      	it	le
 80003fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000400:	fa01 f102 	lsl.w	r1, r1, r2
 8000404:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000408:	bfdc      	itt	le
 800040a:	ea41 010c 	orrle.w	r1, r1, ip
 800040e:	4090      	lslle	r0, r2
 8000410:	1ae4      	subs	r4, r4, r3
 8000412:	bfa2      	ittt	ge
 8000414:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000418:	4329      	orrge	r1, r5
 800041a:	bd30      	popge	{r4, r5, pc}
 800041c:	ea6f 0404 	mvn.w	r4, r4
 8000420:	3c1f      	subs	r4, #31
 8000422:	da1c      	bge.n	800045e <__adddf3+0x1d2>
 8000424:	340c      	adds	r4, #12
 8000426:	dc0e      	bgt.n	8000446 <__adddf3+0x1ba>
 8000428:	f104 0414 	add.w	r4, r4, #20
 800042c:	f1c4 0220 	rsb	r2, r4, #32
 8000430:	fa20 f004 	lsr.w	r0, r0, r4
 8000434:	fa01 f302 	lsl.w	r3, r1, r2
 8000438:	ea40 0003 	orr.w	r0, r0, r3
 800043c:	fa21 f304 	lsr.w	r3, r1, r4
 8000440:	ea45 0103 	orr.w	r1, r5, r3
 8000444:	bd30      	pop	{r4, r5, pc}
 8000446:	f1c4 040c 	rsb	r4, r4, #12
 800044a:	f1c4 0220 	rsb	r2, r4, #32
 800044e:	fa20 f002 	lsr.w	r0, r0, r2
 8000452:	fa01 f304 	lsl.w	r3, r1, r4
 8000456:	ea40 0003 	orr.w	r0, r0, r3
 800045a:	4629      	mov	r1, r5
 800045c:	bd30      	pop	{r4, r5, pc}
 800045e:	fa21 f004 	lsr.w	r0, r1, r4
 8000462:	4629      	mov	r1, r5
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f094 0f00 	teq	r4, #0
 800046a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800046e:	bf06      	itte	eq
 8000470:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000474:	3401      	addeq	r4, #1
 8000476:	3d01      	subne	r5, #1
 8000478:	e74e      	b.n	8000318 <__adddf3+0x8c>
 800047a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800047e:	bf18      	it	ne
 8000480:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000484:	d029      	beq.n	80004da <__adddf3+0x24e>
 8000486:	ea94 0f05 	teq	r4, r5
 800048a:	bf08      	it	eq
 800048c:	ea90 0f02 	teqeq	r0, r2
 8000490:	d005      	beq.n	800049e <__adddf3+0x212>
 8000492:	ea54 0c00 	orrs.w	ip, r4, r0
 8000496:	bf04      	itt	eq
 8000498:	4619      	moveq	r1, r3
 800049a:	4610      	moveq	r0, r2
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	ea91 0f03 	teq	r1, r3
 80004a2:	bf1e      	ittt	ne
 80004a4:	2100      	movne	r1, #0
 80004a6:	2000      	movne	r0, #0
 80004a8:	bd30      	popne	{r4, r5, pc}
 80004aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ae:	d105      	bne.n	80004bc <__adddf3+0x230>
 80004b0:	0040      	lsls	r0, r0, #1
 80004b2:	4149      	adcs	r1, r1
 80004b4:	bf28      	it	cs
 80004b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ba:	bd30      	pop	{r4, r5, pc}
 80004bc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004c0:	bf3c      	itt	cc
 80004c2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004c6:	bd30      	popcc	{r4, r5, pc}
 80004c8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004cc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004d0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004d4:	f04f 0000 	mov.w	r0, #0
 80004d8:	bd30      	pop	{r4, r5, pc}
 80004da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004de:	bf1a      	itte	ne
 80004e0:	4619      	movne	r1, r3
 80004e2:	4610      	movne	r0, r2
 80004e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004e8:	bf1c      	itt	ne
 80004ea:	460b      	movne	r3, r1
 80004ec:	4602      	movne	r2, r0
 80004ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004f2:	bf06      	itte	eq
 80004f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004f8:	ea91 0f03 	teqeq	r1, r3
 80004fc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000500:	bd30      	pop	{r4, r5, pc}
 8000502:	bf00      	nop

08000504 <__aeabi_ui2d>:
 8000504:	f090 0f00 	teq	r0, #0
 8000508:	bf04      	itt	eq
 800050a:	2100      	moveq	r1, #0
 800050c:	4770      	bxeq	lr
 800050e:	b530      	push	{r4, r5, lr}
 8000510:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000514:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000518:	f04f 0500 	mov.w	r5, #0
 800051c:	f04f 0100 	mov.w	r1, #0
 8000520:	e750      	b.n	80003c4 <__adddf3+0x138>
 8000522:	bf00      	nop

08000524 <__aeabi_i2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000538:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800053c:	bf48      	it	mi
 800053e:	4240      	negmi	r0, r0
 8000540:	f04f 0100 	mov.w	r1, #0
 8000544:	e73e      	b.n	80003c4 <__adddf3+0x138>
 8000546:	bf00      	nop

08000548 <__aeabi_f2d>:
 8000548:	0042      	lsls	r2, r0, #1
 800054a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800054e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000552:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000556:	bf1f      	itttt	ne
 8000558:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800055c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000560:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000564:	4770      	bxne	lr
 8000566:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800056a:	bf08      	it	eq
 800056c:	4770      	bxeq	lr
 800056e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000572:	bf04      	itt	eq
 8000574:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000578:	4770      	bxeq	lr
 800057a:	b530      	push	{r4, r5, lr}
 800057c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000580:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000584:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000588:	e71c      	b.n	80003c4 <__adddf3+0x138>
 800058a:	bf00      	nop

0800058c <__aeabi_ul2d>:
 800058c:	ea50 0201 	orrs.w	r2, r0, r1
 8000590:	bf08      	it	eq
 8000592:	4770      	bxeq	lr
 8000594:	b530      	push	{r4, r5, lr}
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	e00a      	b.n	80005b2 <__aeabi_l2d+0x16>

0800059c <__aeabi_l2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005aa:	d502      	bpl.n	80005b2 <__aeabi_l2d+0x16>
 80005ac:	4240      	negs	r0, r0
 80005ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005b2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005b6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005be:	f43f aed8 	beq.w	8000372 <__adddf3+0xe6>
 80005c2:	f04f 0203 	mov.w	r2, #3
 80005c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ca:	bf18      	it	ne
 80005cc:	3203      	addne	r2, #3
 80005ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005d2:	bf18      	it	ne
 80005d4:	3203      	addne	r2, #3
 80005d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005da:	f1c2 0320 	rsb	r3, r2, #32
 80005de:	fa00 fc03 	lsl.w	ip, r0, r3
 80005e2:	fa20 f002 	lsr.w	r0, r0, r2
 80005e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005ea:	ea40 000e 	orr.w	r0, r0, lr
 80005ee:	fa21 f102 	lsr.w	r1, r1, r2
 80005f2:	4414      	add	r4, r2
 80005f4:	e6bd      	b.n	8000372 <__adddf3+0xe6>
 80005f6:	bf00      	nop

080005f8 <__aeabi_dmul>:
 80005f8:	b570      	push	{r4, r5, r6, lr}
 80005fa:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80005fe:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000602:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000606:	bf1d      	ittte	ne
 8000608:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800060c:	ea94 0f0c 	teqne	r4, ip
 8000610:	ea95 0f0c 	teqne	r5, ip
 8000614:	f000 f8de 	bleq	80007d4 <__aeabi_dmul+0x1dc>
 8000618:	442c      	add	r4, r5
 800061a:	ea81 0603 	eor.w	r6, r1, r3
 800061e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000622:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000626:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800062a:	bf18      	it	ne
 800062c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000630:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000634:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000638:	d038      	beq.n	80006ac <__aeabi_dmul+0xb4>
 800063a:	fba0 ce02 	umull	ip, lr, r0, r2
 800063e:	f04f 0500 	mov.w	r5, #0
 8000642:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000646:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800064a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800064e:	f04f 0600 	mov.w	r6, #0
 8000652:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000656:	f09c 0f00 	teq	ip, #0
 800065a:	bf18      	it	ne
 800065c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000660:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000664:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000668:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800066c:	d204      	bcs.n	8000678 <__aeabi_dmul+0x80>
 800066e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000672:	416d      	adcs	r5, r5
 8000674:	eb46 0606 	adc.w	r6, r6, r6
 8000678:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800067c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000680:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000684:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000688:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800068c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000690:	bf88      	it	hi
 8000692:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000696:	d81e      	bhi.n	80006d6 <__aeabi_dmul+0xde>
 8000698:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800069c:	bf08      	it	eq
 800069e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006a2:	f150 0000 	adcs.w	r0, r0, #0
 80006a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006aa:	bd70      	pop	{r4, r5, r6, pc}
 80006ac:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006b0:	ea46 0101 	orr.w	r1, r6, r1
 80006b4:	ea40 0002 	orr.w	r0, r0, r2
 80006b8:	ea81 0103 	eor.w	r1, r1, r3
 80006bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006c0:	bfc2      	ittt	gt
 80006c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	popgt	{r4, r5, r6, pc}
 80006cc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006d0:	f04f 0e00 	mov.w	lr, #0
 80006d4:	3c01      	subs	r4, #1
 80006d6:	f300 80ab 	bgt.w	8000830 <__aeabi_dmul+0x238>
 80006da:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006de:	bfde      	ittt	le
 80006e0:	2000      	movle	r0, #0
 80006e2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006e6:	bd70      	pople	{r4, r5, r6, pc}
 80006e8:	f1c4 0400 	rsb	r4, r4, #0
 80006ec:	3c20      	subs	r4, #32
 80006ee:	da35      	bge.n	800075c <__aeabi_dmul+0x164>
 80006f0:	340c      	adds	r4, #12
 80006f2:	dc1b      	bgt.n	800072c <__aeabi_dmul+0x134>
 80006f4:	f104 0414 	add.w	r4, r4, #20
 80006f8:	f1c4 0520 	rsb	r5, r4, #32
 80006fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000700:	fa20 f004 	lsr.w	r0, r0, r4
 8000704:	fa01 f205 	lsl.w	r2, r1, r5
 8000708:	ea40 0002 	orr.w	r0, r0, r2
 800070c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000710:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000714:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000718:	fa21 f604 	lsr.w	r6, r1, r4
 800071c:	eb42 0106 	adc.w	r1, r2, r6
 8000720:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000724:	bf08      	it	eq
 8000726:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800072a:	bd70      	pop	{r4, r5, r6, pc}
 800072c:	f1c4 040c 	rsb	r4, r4, #12
 8000730:	f1c4 0520 	rsb	r5, r4, #32
 8000734:	fa00 f304 	lsl.w	r3, r0, r4
 8000738:	fa20 f005 	lsr.w	r0, r0, r5
 800073c:	fa01 f204 	lsl.w	r2, r1, r4
 8000740:	ea40 0002 	orr.w	r0, r0, r2
 8000744:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000748:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800074c:	f141 0100 	adc.w	r1, r1, #0
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 0520 	rsb	r5, r4, #32
 8000760:	fa00 f205 	lsl.w	r2, r0, r5
 8000764:	ea4e 0e02 	orr.w	lr, lr, r2
 8000768:	fa20 f304 	lsr.w	r3, r0, r4
 800076c:	fa01 f205 	lsl.w	r2, r1, r5
 8000770:	ea43 0302 	orr.w	r3, r3, r2
 8000774:	fa21 f004 	lsr.w	r0, r1, r4
 8000778:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800077c:	fa21 f204 	lsr.w	r2, r1, r4
 8000780:	ea20 0002 	bic.w	r0, r0, r2
 8000784:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000788:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800078c:	bf08      	it	eq
 800078e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000792:	bd70      	pop	{r4, r5, r6, pc}
 8000794:	f094 0f00 	teq	r4, #0
 8000798:	d10f      	bne.n	80007ba <__aeabi_dmul+0x1c2>
 800079a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800079e:	0040      	lsls	r0, r0, #1
 80007a0:	eb41 0101 	adc.w	r1, r1, r1
 80007a4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007a8:	bf08      	it	eq
 80007aa:	3c01      	subeq	r4, #1
 80007ac:	d0f7      	beq.n	800079e <__aeabi_dmul+0x1a6>
 80007ae:	ea41 0106 	orr.w	r1, r1, r6
 80007b2:	f095 0f00 	teq	r5, #0
 80007b6:	bf18      	it	ne
 80007b8:	4770      	bxne	lr
 80007ba:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007be:	0052      	lsls	r2, r2, #1
 80007c0:	eb43 0303 	adc.w	r3, r3, r3
 80007c4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3d01      	subeq	r5, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1c6>
 80007ce:	ea43 0306 	orr.w	r3, r3, r6
 80007d2:	4770      	bx	lr
 80007d4:	ea94 0f0c 	teq	r4, ip
 80007d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007dc:	bf18      	it	ne
 80007de:	ea95 0f0c 	teqne	r5, ip
 80007e2:	d00c      	beq.n	80007fe <__aeabi_dmul+0x206>
 80007e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007e8:	bf18      	it	ne
 80007ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007ee:	d1d1      	bne.n	8000794 <__aeabi_dmul+0x19c>
 80007f0:	ea81 0103 	eor.w	r1, r1, r3
 80007f4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd70      	pop	{r4, r5, r6, pc}
 80007fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000802:	bf06      	itte	eq
 8000804:	4610      	moveq	r0, r2
 8000806:	4619      	moveq	r1, r3
 8000808:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080c:	d019      	beq.n	8000842 <__aeabi_dmul+0x24a>
 800080e:	ea94 0f0c 	teq	r4, ip
 8000812:	d102      	bne.n	800081a <__aeabi_dmul+0x222>
 8000814:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000818:	d113      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800081a:	ea95 0f0c 	teq	r5, ip
 800081e:	d105      	bne.n	800082c <__aeabi_dmul+0x234>
 8000820:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000824:	bf1c      	itt	ne
 8000826:	4610      	movne	r0, r2
 8000828:	4619      	movne	r1, r3
 800082a:	d10a      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800082c:	ea81 0103 	eor.w	r1, r1, r3
 8000830:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000834:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000838:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800083c:	f04f 0000 	mov.w	r0, #0
 8000840:	bd70      	pop	{r4, r5, r6, pc}
 8000842:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000846:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800084a:	bd70      	pop	{r4, r5, r6, pc}

0800084c <__aeabi_ddiv>:
 800084c:	b570      	push	{r4, r5, r6, lr}
 800084e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000852:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000856:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800085a:	bf1d      	ittte	ne
 800085c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000860:	ea94 0f0c 	teqne	r4, ip
 8000864:	ea95 0f0c 	teqne	r5, ip
 8000868:	f000 f8a7 	bleq	80009ba <__aeabi_ddiv+0x16e>
 800086c:	eba4 0405 	sub.w	r4, r4, r5
 8000870:	ea81 0e03 	eor.w	lr, r1, r3
 8000874:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000878:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800087c:	f000 8088 	beq.w	8000990 <__aeabi_ddiv+0x144>
 8000880:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000884:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000888:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800088c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000890:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000894:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000898:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800089c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008a0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008a4:	429d      	cmp	r5, r3
 80008a6:	bf08      	it	eq
 80008a8:	4296      	cmpeq	r6, r2
 80008aa:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ae:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008b2:	d202      	bcs.n	80008ba <__aeabi_ddiv+0x6e>
 80008b4:	085b      	lsrs	r3, r3, #1
 80008b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ba:	1ab6      	subs	r6, r6, r2
 80008bc:	eb65 0503 	sbc.w	r5, r5, r3
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008ca:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80008d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008d6:	bf22      	ittt	cs
 80008d8:	1ab6      	subcs	r6, r6, r2
 80008da:	4675      	movcs	r5, lr
 80008dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ee:	bf22      	ittt	cs
 80008f0:	1ab6      	subcs	r6, r6, r2
 80008f2:	4675      	movcs	r5, lr
 80008f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008f8:	085b      	lsrs	r3, r3, #1
 80008fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000928:	ea55 0e06 	orrs.w	lr, r5, r6
 800092c:	d018      	beq.n	8000960 <__aeabi_ddiv+0x114>
 800092e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000932:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000936:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800093a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800093e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000942:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000946:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800094a:	d1c0      	bne.n	80008ce <__aeabi_ddiv+0x82>
 800094c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000950:	d10b      	bne.n	800096a <__aeabi_ddiv+0x11e>
 8000952:	ea41 0100 	orr.w	r1, r1, r0
 8000956:	f04f 0000 	mov.w	r0, #0
 800095a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800095e:	e7b6      	b.n	80008ce <__aeabi_ddiv+0x82>
 8000960:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000964:	bf04      	itt	eq
 8000966:	4301      	orreq	r1, r0
 8000968:	2000      	moveq	r0, #0
 800096a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800096e:	bf88      	it	hi
 8000970:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000974:	f63f aeaf 	bhi.w	80006d6 <__aeabi_dmul+0xde>
 8000978:	ebb5 0c03 	subs.w	ip, r5, r3
 800097c:	bf04      	itt	eq
 800097e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000982:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000986:	f150 0000 	adcs.w	r0, r0, #0
 800098a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800098e:	bd70      	pop	{r4, r5, r6, pc}
 8000990:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000994:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000998:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800099c:	bfc2      	ittt	gt
 800099e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009a6:	bd70      	popgt	{r4, r5, r6, pc}
 80009a8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ac:	f04f 0e00 	mov.w	lr, #0
 80009b0:	3c01      	subs	r4, #1
 80009b2:	e690      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009b4:	ea45 0e06 	orr.w	lr, r5, r6
 80009b8:	e68d      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009be:	ea94 0f0c 	teq	r4, ip
 80009c2:	bf08      	it	eq
 80009c4:	ea95 0f0c 	teqeq	r5, ip
 80009c8:	f43f af3b 	beq.w	8000842 <__aeabi_dmul+0x24a>
 80009cc:	ea94 0f0c 	teq	r4, ip
 80009d0:	d10a      	bne.n	80009e8 <__aeabi_ddiv+0x19c>
 80009d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009d6:	f47f af34 	bne.w	8000842 <__aeabi_dmul+0x24a>
 80009da:	ea95 0f0c 	teq	r5, ip
 80009de:	f47f af25 	bne.w	800082c <__aeabi_dmul+0x234>
 80009e2:	4610      	mov	r0, r2
 80009e4:	4619      	mov	r1, r3
 80009e6:	e72c      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009e8:	ea95 0f0c 	teq	r5, ip
 80009ec:	d106      	bne.n	80009fc <__aeabi_ddiv+0x1b0>
 80009ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009f2:	f43f aefd 	beq.w	80007f0 <__aeabi_dmul+0x1f8>
 80009f6:	4610      	mov	r0, r2
 80009f8:	4619      	mov	r1, r3
 80009fa:	e722      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a00:	bf18      	it	ne
 8000a02:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a06:	f47f aec5 	bne.w	8000794 <__aeabi_dmul+0x19c>
 8000a0a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a0e:	f47f af0d 	bne.w	800082c <__aeabi_dmul+0x234>
 8000a12:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a16:	f47f aeeb 	bne.w	80007f0 <__aeabi_dmul+0x1f8>
 8000a1a:	e712      	b.n	8000842 <__aeabi_dmul+0x24a>

08000a1c <__gedf2>:
 8000a1c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a20:	e006      	b.n	8000a30 <__cmpdf2+0x4>
 8000a22:	bf00      	nop

08000a24 <__ledf2>:
 8000a24:	f04f 0c01 	mov.w	ip, #1
 8000a28:	e002      	b.n	8000a30 <__cmpdf2+0x4>
 8000a2a:	bf00      	nop

08000a2c <__cmpdf2>:
 8000a2c:	f04f 0c01 	mov.w	ip, #1
 8000a30:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a34:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a38:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a46:	d01b      	beq.n	8000a80 <__cmpdf2+0x54>
 8000a48:	b001      	add	sp, #4
 8000a4a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a4e:	bf0c      	ite	eq
 8000a50:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a54:	ea91 0f03 	teqne	r1, r3
 8000a58:	bf02      	ittt	eq
 8000a5a:	ea90 0f02 	teqeq	r0, r2
 8000a5e:	2000      	moveq	r0, #0
 8000a60:	4770      	bxeq	lr
 8000a62:	f110 0f00 	cmn.w	r0, #0
 8000a66:	ea91 0f03 	teq	r1, r3
 8000a6a:	bf58      	it	pl
 8000a6c:	4299      	cmppl	r1, r3
 8000a6e:	bf08      	it	eq
 8000a70:	4290      	cmpeq	r0, r2
 8000a72:	bf2c      	ite	cs
 8000a74:	17d8      	asrcs	r0, r3, #31
 8000a76:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a7a:	f040 0001 	orr.w	r0, r0, #1
 8000a7e:	4770      	bx	lr
 8000a80:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a84:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a88:	d102      	bne.n	8000a90 <__cmpdf2+0x64>
 8000a8a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a8e:	d107      	bne.n	8000aa0 <__cmpdf2+0x74>
 8000a90:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d1d6      	bne.n	8000a48 <__cmpdf2+0x1c>
 8000a9a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a9e:	d0d3      	beq.n	8000a48 <__cmpdf2+0x1c>
 8000aa0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000aa4:	4770      	bx	lr
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_cdrcmple>:
 8000aa8:	4684      	mov	ip, r0
 8000aaa:	4610      	mov	r0, r2
 8000aac:	4662      	mov	r2, ip
 8000aae:	468c      	mov	ip, r1
 8000ab0:	4619      	mov	r1, r3
 8000ab2:	4663      	mov	r3, ip
 8000ab4:	e000      	b.n	8000ab8 <__aeabi_cdcmpeq>
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdcmpeq>:
 8000ab8:	b501      	push	{r0, lr}
 8000aba:	f7ff ffb7 	bl	8000a2c <__cmpdf2>
 8000abe:	2800      	cmp	r0, #0
 8000ac0:	bf48      	it	mi
 8000ac2:	f110 0f00 	cmnmi.w	r0, #0
 8000ac6:	bd01      	pop	{r0, pc}

08000ac8 <__aeabi_dcmpeq>:
 8000ac8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000acc:	f7ff fff4 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ad0:	bf0c      	ite	eq
 8000ad2:	2001      	moveq	r0, #1
 8000ad4:	2000      	movne	r0, #0
 8000ad6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ada:	bf00      	nop

08000adc <__aeabi_dcmplt>:
 8000adc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ae0:	f7ff ffea 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ae4:	bf34      	ite	cc
 8000ae6:	2001      	movcc	r0, #1
 8000ae8:	2000      	movcs	r0, #0
 8000aea:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aee:	bf00      	nop

08000af0 <__aeabi_dcmple>:
 8000af0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af4:	f7ff ffe0 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000af8:	bf94      	ite	ls
 8000afa:	2001      	movls	r0, #1
 8000afc:	2000      	movhi	r0, #0
 8000afe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b02:	bf00      	nop

08000b04 <__aeabi_dcmpge>:
 8000b04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b08:	f7ff ffce 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b0c:	bf94      	ite	ls
 8000b0e:	2001      	movls	r0, #1
 8000b10:	2000      	movhi	r0, #0
 8000b12:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b16:	bf00      	nop

08000b18 <__aeabi_dcmpgt>:
 8000b18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b1c:	f7ff ffc4 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b20:	bf34      	ite	cc
 8000b22:	2001      	movcc	r0, #1
 8000b24:	2000      	movcs	r0, #0
 8000b26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2a:	bf00      	nop

08000b2c <__aeabi_dcmpun>:
 8000b2c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b34:	d102      	bne.n	8000b3c <__aeabi_dcmpun+0x10>
 8000b36:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b3a:	d10a      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x20>
 8000b46:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b4a:	d102      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b4c:	f04f 0000 	mov.w	r0, #0
 8000b50:	4770      	bx	lr
 8000b52:	f04f 0001 	mov.w	r0, #1
 8000b56:	4770      	bx	lr

08000b58 <__aeabi_d2iz>:
 8000b58:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b5c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b60:	d215      	bcs.n	8000b8e <__aeabi_d2iz+0x36>
 8000b62:	d511      	bpl.n	8000b88 <__aeabi_d2iz+0x30>
 8000b64:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b68:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b6c:	d912      	bls.n	8000b94 <__aeabi_d2iz+0x3c>
 8000b6e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b72:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b76:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b7a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b7e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b82:	bf18      	it	ne
 8000b84:	4240      	negne	r0, r0
 8000b86:	4770      	bx	lr
 8000b88:	f04f 0000 	mov.w	r0, #0
 8000b8c:	4770      	bx	lr
 8000b8e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b92:	d105      	bne.n	8000ba0 <__aeabi_d2iz+0x48>
 8000b94:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000b98:	bf08      	it	eq
 8000b9a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000b9e:	4770      	bx	lr
 8000ba0:	f04f 0000 	mov.w	r0, #0
 8000ba4:	4770      	bx	lr
 8000ba6:	bf00      	nop

08000ba8 <__aeabi_uldivmod>:
 8000ba8:	b953      	cbnz	r3, 8000bc0 <__aeabi_uldivmod+0x18>
 8000baa:	b94a      	cbnz	r2, 8000bc0 <__aeabi_uldivmod+0x18>
 8000bac:	2900      	cmp	r1, #0
 8000bae:	bf08      	it	eq
 8000bb0:	2800      	cmpeq	r0, #0
 8000bb2:	bf1c      	itt	ne
 8000bb4:	f04f 31ff 	movne.w	r1, #4294967295
 8000bb8:	f04f 30ff 	movne.w	r0, #4294967295
 8000bbc:	f000 b974 	b.w	8000ea8 <__aeabi_idiv0>
 8000bc0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000bc4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000bc8:	f000 f806 	bl	8000bd8 <__udivmoddi4>
 8000bcc:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000bd0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000bd4:	b004      	add	sp, #16
 8000bd6:	4770      	bx	lr

08000bd8 <__udivmoddi4>:
 8000bd8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000bdc:	9d08      	ldr	r5, [sp, #32]
 8000bde:	4604      	mov	r4, r0
 8000be0:	468e      	mov	lr, r1
 8000be2:	2b00      	cmp	r3, #0
 8000be4:	d14d      	bne.n	8000c82 <__udivmoddi4+0xaa>
 8000be6:	428a      	cmp	r2, r1
 8000be8:	4694      	mov	ip, r2
 8000bea:	d969      	bls.n	8000cc0 <__udivmoddi4+0xe8>
 8000bec:	fab2 f282 	clz	r2, r2
 8000bf0:	b152      	cbz	r2, 8000c08 <__udivmoddi4+0x30>
 8000bf2:	fa01 f302 	lsl.w	r3, r1, r2
 8000bf6:	f1c2 0120 	rsb	r1, r2, #32
 8000bfa:	fa20 f101 	lsr.w	r1, r0, r1
 8000bfe:	fa0c fc02 	lsl.w	ip, ip, r2
 8000c02:	ea41 0e03 	orr.w	lr, r1, r3
 8000c06:	4094      	lsls	r4, r2
 8000c08:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000c0c:	0c21      	lsrs	r1, r4, #16
 8000c0e:	fbbe f6f8 	udiv	r6, lr, r8
 8000c12:	fa1f f78c 	uxth.w	r7, ip
 8000c16:	fb08 e316 	mls	r3, r8, r6, lr
 8000c1a:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000c1e:	fb06 f107 	mul.w	r1, r6, r7
 8000c22:	4299      	cmp	r1, r3
 8000c24:	d90a      	bls.n	8000c3c <__udivmoddi4+0x64>
 8000c26:	eb1c 0303 	adds.w	r3, ip, r3
 8000c2a:	f106 30ff 	add.w	r0, r6, #4294967295
 8000c2e:	f080 811f 	bcs.w	8000e70 <__udivmoddi4+0x298>
 8000c32:	4299      	cmp	r1, r3
 8000c34:	f240 811c 	bls.w	8000e70 <__udivmoddi4+0x298>
 8000c38:	3e02      	subs	r6, #2
 8000c3a:	4463      	add	r3, ip
 8000c3c:	1a5b      	subs	r3, r3, r1
 8000c3e:	b2a4      	uxth	r4, r4
 8000c40:	fbb3 f0f8 	udiv	r0, r3, r8
 8000c44:	fb08 3310 	mls	r3, r8, r0, r3
 8000c48:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000c4c:	fb00 f707 	mul.w	r7, r0, r7
 8000c50:	42a7      	cmp	r7, r4
 8000c52:	d90a      	bls.n	8000c6a <__udivmoddi4+0x92>
 8000c54:	eb1c 0404 	adds.w	r4, ip, r4
 8000c58:	f100 33ff 	add.w	r3, r0, #4294967295
 8000c5c:	f080 810a 	bcs.w	8000e74 <__udivmoddi4+0x29c>
 8000c60:	42a7      	cmp	r7, r4
 8000c62:	f240 8107 	bls.w	8000e74 <__udivmoddi4+0x29c>
 8000c66:	4464      	add	r4, ip
 8000c68:	3802      	subs	r0, #2
 8000c6a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000c6e:	1be4      	subs	r4, r4, r7
 8000c70:	2600      	movs	r6, #0
 8000c72:	b11d      	cbz	r5, 8000c7c <__udivmoddi4+0xa4>
 8000c74:	40d4      	lsrs	r4, r2
 8000c76:	2300      	movs	r3, #0
 8000c78:	e9c5 4300 	strd	r4, r3, [r5]
 8000c7c:	4631      	mov	r1, r6
 8000c7e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c82:	428b      	cmp	r3, r1
 8000c84:	d909      	bls.n	8000c9a <__udivmoddi4+0xc2>
 8000c86:	2d00      	cmp	r5, #0
 8000c88:	f000 80ef 	beq.w	8000e6a <__udivmoddi4+0x292>
 8000c8c:	2600      	movs	r6, #0
 8000c8e:	e9c5 0100 	strd	r0, r1, [r5]
 8000c92:	4630      	mov	r0, r6
 8000c94:	4631      	mov	r1, r6
 8000c96:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c9a:	fab3 f683 	clz	r6, r3
 8000c9e:	2e00      	cmp	r6, #0
 8000ca0:	d14a      	bne.n	8000d38 <__udivmoddi4+0x160>
 8000ca2:	428b      	cmp	r3, r1
 8000ca4:	d302      	bcc.n	8000cac <__udivmoddi4+0xd4>
 8000ca6:	4282      	cmp	r2, r0
 8000ca8:	f200 80f9 	bhi.w	8000e9e <__udivmoddi4+0x2c6>
 8000cac:	1a84      	subs	r4, r0, r2
 8000cae:	eb61 0303 	sbc.w	r3, r1, r3
 8000cb2:	2001      	movs	r0, #1
 8000cb4:	469e      	mov	lr, r3
 8000cb6:	2d00      	cmp	r5, #0
 8000cb8:	d0e0      	beq.n	8000c7c <__udivmoddi4+0xa4>
 8000cba:	e9c5 4e00 	strd	r4, lr, [r5]
 8000cbe:	e7dd      	b.n	8000c7c <__udivmoddi4+0xa4>
 8000cc0:	b902      	cbnz	r2, 8000cc4 <__udivmoddi4+0xec>
 8000cc2:	deff      	udf	#255	; 0xff
 8000cc4:	fab2 f282 	clz	r2, r2
 8000cc8:	2a00      	cmp	r2, #0
 8000cca:	f040 8092 	bne.w	8000df2 <__udivmoddi4+0x21a>
 8000cce:	eba1 010c 	sub.w	r1, r1, ip
 8000cd2:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000cd6:	fa1f fe8c 	uxth.w	lr, ip
 8000cda:	2601      	movs	r6, #1
 8000cdc:	0c20      	lsrs	r0, r4, #16
 8000cde:	fbb1 f3f7 	udiv	r3, r1, r7
 8000ce2:	fb07 1113 	mls	r1, r7, r3, r1
 8000ce6:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000cea:	fb0e f003 	mul.w	r0, lr, r3
 8000cee:	4288      	cmp	r0, r1
 8000cf0:	d908      	bls.n	8000d04 <__udivmoddi4+0x12c>
 8000cf2:	eb1c 0101 	adds.w	r1, ip, r1
 8000cf6:	f103 38ff 	add.w	r8, r3, #4294967295
 8000cfa:	d202      	bcs.n	8000d02 <__udivmoddi4+0x12a>
 8000cfc:	4288      	cmp	r0, r1
 8000cfe:	f200 80cb 	bhi.w	8000e98 <__udivmoddi4+0x2c0>
 8000d02:	4643      	mov	r3, r8
 8000d04:	1a09      	subs	r1, r1, r0
 8000d06:	b2a4      	uxth	r4, r4
 8000d08:	fbb1 f0f7 	udiv	r0, r1, r7
 8000d0c:	fb07 1110 	mls	r1, r7, r0, r1
 8000d10:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8000d14:	fb0e fe00 	mul.w	lr, lr, r0
 8000d18:	45a6      	cmp	lr, r4
 8000d1a:	d908      	bls.n	8000d2e <__udivmoddi4+0x156>
 8000d1c:	eb1c 0404 	adds.w	r4, ip, r4
 8000d20:	f100 31ff 	add.w	r1, r0, #4294967295
 8000d24:	d202      	bcs.n	8000d2c <__udivmoddi4+0x154>
 8000d26:	45a6      	cmp	lr, r4
 8000d28:	f200 80bb 	bhi.w	8000ea2 <__udivmoddi4+0x2ca>
 8000d2c:	4608      	mov	r0, r1
 8000d2e:	eba4 040e 	sub.w	r4, r4, lr
 8000d32:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8000d36:	e79c      	b.n	8000c72 <__udivmoddi4+0x9a>
 8000d38:	f1c6 0720 	rsb	r7, r6, #32
 8000d3c:	40b3      	lsls	r3, r6
 8000d3e:	fa22 fc07 	lsr.w	ip, r2, r7
 8000d42:	ea4c 0c03 	orr.w	ip, ip, r3
 8000d46:	fa20 f407 	lsr.w	r4, r0, r7
 8000d4a:	fa01 f306 	lsl.w	r3, r1, r6
 8000d4e:	431c      	orrs	r4, r3
 8000d50:	40f9      	lsrs	r1, r7
 8000d52:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000d56:	fa00 f306 	lsl.w	r3, r0, r6
 8000d5a:	fbb1 f8f9 	udiv	r8, r1, r9
 8000d5e:	0c20      	lsrs	r0, r4, #16
 8000d60:	fa1f fe8c 	uxth.w	lr, ip
 8000d64:	fb09 1118 	mls	r1, r9, r8, r1
 8000d68:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000d6c:	fb08 f00e 	mul.w	r0, r8, lr
 8000d70:	4288      	cmp	r0, r1
 8000d72:	fa02 f206 	lsl.w	r2, r2, r6
 8000d76:	d90b      	bls.n	8000d90 <__udivmoddi4+0x1b8>
 8000d78:	eb1c 0101 	adds.w	r1, ip, r1
 8000d7c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000d80:	f080 8088 	bcs.w	8000e94 <__udivmoddi4+0x2bc>
 8000d84:	4288      	cmp	r0, r1
 8000d86:	f240 8085 	bls.w	8000e94 <__udivmoddi4+0x2bc>
 8000d8a:	f1a8 0802 	sub.w	r8, r8, #2
 8000d8e:	4461      	add	r1, ip
 8000d90:	1a09      	subs	r1, r1, r0
 8000d92:	b2a4      	uxth	r4, r4
 8000d94:	fbb1 f0f9 	udiv	r0, r1, r9
 8000d98:	fb09 1110 	mls	r1, r9, r0, r1
 8000d9c:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000da0:	fb00 fe0e 	mul.w	lr, r0, lr
 8000da4:	458e      	cmp	lr, r1
 8000da6:	d908      	bls.n	8000dba <__udivmoddi4+0x1e2>
 8000da8:	eb1c 0101 	adds.w	r1, ip, r1
 8000dac:	f100 34ff 	add.w	r4, r0, #4294967295
 8000db0:	d26c      	bcs.n	8000e8c <__udivmoddi4+0x2b4>
 8000db2:	458e      	cmp	lr, r1
 8000db4:	d96a      	bls.n	8000e8c <__udivmoddi4+0x2b4>
 8000db6:	3802      	subs	r0, #2
 8000db8:	4461      	add	r1, ip
 8000dba:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000dbe:	fba0 9402 	umull	r9, r4, r0, r2
 8000dc2:	eba1 010e 	sub.w	r1, r1, lr
 8000dc6:	42a1      	cmp	r1, r4
 8000dc8:	46c8      	mov	r8, r9
 8000dca:	46a6      	mov	lr, r4
 8000dcc:	d356      	bcc.n	8000e7c <__udivmoddi4+0x2a4>
 8000dce:	d053      	beq.n	8000e78 <__udivmoddi4+0x2a0>
 8000dd0:	b15d      	cbz	r5, 8000dea <__udivmoddi4+0x212>
 8000dd2:	ebb3 0208 	subs.w	r2, r3, r8
 8000dd6:	eb61 010e 	sbc.w	r1, r1, lr
 8000dda:	fa01 f707 	lsl.w	r7, r1, r7
 8000dde:	fa22 f306 	lsr.w	r3, r2, r6
 8000de2:	40f1      	lsrs	r1, r6
 8000de4:	431f      	orrs	r7, r3
 8000de6:	e9c5 7100 	strd	r7, r1, [r5]
 8000dea:	2600      	movs	r6, #0
 8000dec:	4631      	mov	r1, r6
 8000dee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000df2:	f1c2 0320 	rsb	r3, r2, #32
 8000df6:	40d8      	lsrs	r0, r3
 8000df8:	fa0c fc02 	lsl.w	ip, ip, r2
 8000dfc:	fa21 f303 	lsr.w	r3, r1, r3
 8000e00:	4091      	lsls	r1, r2
 8000e02:	4301      	orrs	r1, r0
 8000e04:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000e08:	fa1f fe8c 	uxth.w	lr, ip
 8000e0c:	fbb3 f0f7 	udiv	r0, r3, r7
 8000e10:	fb07 3610 	mls	r6, r7, r0, r3
 8000e14:	0c0b      	lsrs	r3, r1, #16
 8000e16:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000e1a:	fb00 f60e 	mul.w	r6, r0, lr
 8000e1e:	429e      	cmp	r6, r3
 8000e20:	fa04 f402 	lsl.w	r4, r4, r2
 8000e24:	d908      	bls.n	8000e38 <__udivmoddi4+0x260>
 8000e26:	eb1c 0303 	adds.w	r3, ip, r3
 8000e2a:	f100 38ff 	add.w	r8, r0, #4294967295
 8000e2e:	d22f      	bcs.n	8000e90 <__udivmoddi4+0x2b8>
 8000e30:	429e      	cmp	r6, r3
 8000e32:	d92d      	bls.n	8000e90 <__udivmoddi4+0x2b8>
 8000e34:	3802      	subs	r0, #2
 8000e36:	4463      	add	r3, ip
 8000e38:	1b9b      	subs	r3, r3, r6
 8000e3a:	b289      	uxth	r1, r1
 8000e3c:	fbb3 f6f7 	udiv	r6, r3, r7
 8000e40:	fb07 3316 	mls	r3, r7, r6, r3
 8000e44:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000e48:	fb06 f30e 	mul.w	r3, r6, lr
 8000e4c:	428b      	cmp	r3, r1
 8000e4e:	d908      	bls.n	8000e62 <__udivmoddi4+0x28a>
 8000e50:	eb1c 0101 	adds.w	r1, ip, r1
 8000e54:	f106 38ff 	add.w	r8, r6, #4294967295
 8000e58:	d216      	bcs.n	8000e88 <__udivmoddi4+0x2b0>
 8000e5a:	428b      	cmp	r3, r1
 8000e5c:	d914      	bls.n	8000e88 <__udivmoddi4+0x2b0>
 8000e5e:	3e02      	subs	r6, #2
 8000e60:	4461      	add	r1, ip
 8000e62:	1ac9      	subs	r1, r1, r3
 8000e64:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000e68:	e738      	b.n	8000cdc <__udivmoddi4+0x104>
 8000e6a:	462e      	mov	r6, r5
 8000e6c:	4628      	mov	r0, r5
 8000e6e:	e705      	b.n	8000c7c <__udivmoddi4+0xa4>
 8000e70:	4606      	mov	r6, r0
 8000e72:	e6e3      	b.n	8000c3c <__udivmoddi4+0x64>
 8000e74:	4618      	mov	r0, r3
 8000e76:	e6f8      	b.n	8000c6a <__udivmoddi4+0x92>
 8000e78:	454b      	cmp	r3, r9
 8000e7a:	d2a9      	bcs.n	8000dd0 <__udivmoddi4+0x1f8>
 8000e7c:	ebb9 0802 	subs.w	r8, r9, r2
 8000e80:	eb64 0e0c 	sbc.w	lr, r4, ip
 8000e84:	3801      	subs	r0, #1
 8000e86:	e7a3      	b.n	8000dd0 <__udivmoddi4+0x1f8>
 8000e88:	4646      	mov	r6, r8
 8000e8a:	e7ea      	b.n	8000e62 <__udivmoddi4+0x28a>
 8000e8c:	4620      	mov	r0, r4
 8000e8e:	e794      	b.n	8000dba <__udivmoddi4+0x1e2>
 8000e90:	4640      	mov	r0, r8
 8000e92:	e7d1      	b.n	8000e38 <__udivmoddi4+0x260>
 8000e94:	46d0      	mov	r8, sl
 8000e96:	e77b      	b.n	8000d90 <__udivmoddi4+0x1b8>
 8000e98:	3b02      	subs	r3, #2
 8000e9a:	4461      	add	r1, ip
 8000e9c:	e732      	b.n	8000d04 <__udivmoddi4+0x12c>
 8000e9e:	4630      	mov	r0, r6
 8000ea0:	e709      	b.n	8000cb6 <__udivmoddi4+0xde>
 8000ea2:	4464      	add	r4, ip
 8000ea4:	3802      	subs	r0, #2
 8000ea6:	e742      	b.n	8000d2e <__udivmoddi4+0x156>

08000ea8 <__aeabi_idiv0>:
 8000ea8:	4770      	bx	lr
 8000eaa:	bf00      	nop

08000eac <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000eac:	b580      	push	{r7, lr}
 8000eae:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000eb0:	f001 f960 	bl	8002174 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000eb4:	f000 f872 	bl	8000f9c <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000eb8:	f000 f996 	bl	80011e8 <MX_GPIO_Init>
  MX_SPI1_Init();
 8000ebc:	f000 f8e4 	bl	8001088 <MX_SPI1_Init>
  MX_USART2_UART_Init();
 8000ec0:	f000 f968 	bl	8001194 <MX_USART2_UART_Init>
  MX_TIM1_Init();
 8000ec4:	f000 f916 	bl	80010f4 <MX_TIM1_Init>

  /* Initialize interrupts */
  MX_NVIC_Init();
 8000ec8:	f000 f8d2 	bl	8001070 <MX_NVIC_Init>
  /* USER CODE BEGIN 2 */
  HAL_TIM_Base_Start(&htim1);
 8000ecc:	482b      	ldr	r0, [pc, #172]	; (8000f7c <main+0xd0>)
 8000ece:	f002 fe5b 	bl	8003b88 <HAL_TIM_Base_Start>
  LCD1602_Init();
 8000ed2:	f000 fac2 	bl	800145a <LCD1602_Init>
  MFRC522_Init();
 8000ed6:	f000 ff0b 	bl	8001cf0 <MFRC522_Init>


  LCD1602_TransferString("Initializing>>");
 8000eda:	4829      	ldr	r0, [pc, #164]	; (8000f80 <main+0xd4>)
 8000edc:	f000 faf7 	bl	80014ce <LCD1602_TransferString>
  HAL_Delay(2000);
 8000ee0:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
 8000ee4:	f001 f9b8 	bl	8002258 <HAL_Delay>
  LCD1602_Clear();
 8000ee8:	f000 faad 	bl	8001446 <LCD1602_Clear>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	  LCD1602_Clear();
 8000eec:	f000 faab 	bl	8001446 <LCD1602_Clear>
	  if (ReadCardValue() == MI_OK)
 8000ef0:	f000 ff58 	bl	8001da4 <ReadCardValue>
 8000ef4:	4603      	mov	r3, r0
 8000ef6:	2b00      	cmp	r3, #0
 8000ef8:	d134      	bne.n	8000f64 <main+0xb8>
	  {
		  LCD1602_CursorPosition(0, 0);
 8000efa:	2100      	movs	r1, #0
 8000efc:	2000      	movs	r0, #0
 8000efe:	f000 fa83 	bl	8001408 <LCD1602_CursorPosition>
		  LCD1602_TransferString((char*)buffer_Detection);
 8000f02:	4820      	ldr	r0, [pc, #128]	; (8000f84 <main+0xd8>)
 8000f04:	f000 fae3 	bl	80014ce <LCD1602_TransferString>
		  LCD1602_CursorPosition(1, 0);
 8000f08:	2100      	movs	r1, #0
 8000f0a:	2001      	movs	r0, #1
 8000f0c:	f000 fa7c 	bl	8001408 <LCD1602_CursorPosition>
		  LCD1602_TransferString((char*)CardID_Print);
 8000f10:	481d      	ldr	r0, [pc, #116]	; (8000f88 <main+0xdc>)
 8000f12:	f000 fadc 	bl	80014ce <LCD1602_TransferString>
		  HAL_Delay(1000);
 8000f16:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000f1a:	f001 f99d 	bl	8002258 <HAL_Delay>

		  if(MFRC522_Compare(CardID, CompareID) == MI_OK){
 8000f1e:	491b      	ldr	r1, [pc, #108]	; (8000f8c <main+0xe0>)
 8000f20:	481b      	ldr	r0, [pc, #108]	; (8000f90 <main+0xe4>)
 8000f22:	f000 fbf7 	bl	8001714 <MFRC522_Compare>
 8000f26:	4603      	mov	r3, r0
 8000f28:	2b00      	cmp	r3, #0
 8000f2a:	d10d      	bne.n	8000f48 <main+0x9c>
			  LCD1602_Clear();
 8000f2c:	f000 fa8b 	bl	8001446 <LCD1602_Clear>
			  LCD1602_CursorPosition(0, 0);
 8000f30:	2100      	movs	r1, #0
 8000f32:	2000      	movs	r0, #0
 8000f34:	f000 fa68 	bl	8001408 <LCD1602_CursorPosition>
			  LCD1602_TransferString("Is good! :)");
 8000f38:	4816      	ldr	r0, [pc, #88]	; (8000f94 <main+0xe8>)
 8000f3a:	f000 fac8 	bl	80014ce <LCD1602_TransferString>
			  HAL_Delay(1000);
 8000f3e:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000f42:	f001 f989 	bl	8002258 <HAL_Delay>
 8000f46:	e014      	b.n	8000f72 <main+0xc6>
		  }
		  else
		  {
			  LCD1602_Clear();
 8000f48:	f000 fa7d 	bl	8001446 <LCD1602_Clear>
			  LCD1602_CursorPosition(0, 0);
 8000f4c:	2100      	movs	r1, #0
 8000f4e:	2000      	movs	r0, #0
 8000f50:	f000 fa5a 	bl	8001408 <LCD1602_CursorPosition>
			  LCD1602_TransferString("Is no good! :(");
 8000f54:	4810      	ldr	r0, [pc, #64]	; (8000f98 <main+0xec>)
 8000f56:	f000 faba 	bl	80014ce <LCD1602_TransferString>
			  HAL_Delay(1000);
 8000f5a:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000f5e:	f001 f97b 	bl	8002258 <HAL_Delay>
 8000f62:	e006      	b.n	8000f72 <main+0xc6>
	      //HAL_UART_Transmit(&huart2, CardID_Print, sizeof(CardID_Print), 100);

	  }
	  else
	  {
		  LCD1602_CursorPosition(0, 0);
 8000f64:	2100      	movs	r1, #0
 8000f66:	2000      	movs	r0, #0
 8000f68:	f000 fa4e 	bl	8001408 <LCD1602_CursorPosition>
		  //LCD1602_TransferString("buffer");
		  LCD1602_TransferString((char*)buffer_Detection);
 8000f6c:	4805      	ldr	r0, [pc, #20]	; (8000f84 <main+0xd8>)
 8000f6e:	f000 faae 	bl	80014ce <LCD1602_TransferString>
 	      //HAL_UART_Transmit(&huart2, buffer_Detection, sizeof(buffer_Detection), 100);
	  }
	  HAL_Delay(500);
 8000f72:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000f76:	f001 f96f 	bl	8002258 <HAL_Delay>
	  LCD1602_Clear();
 8000f7a:	e7b7      	b.n	8000eec <main+0x40>
 8000f7c:	20000254 	.word	0x20000254
 8000f80:	08007dc0 	.word	0x08007dc0
 8000f84:	20000318 	.word	0x20000318
 8000f88:	200002e4 	.word	0x200002e4
 8000f8c:	20000000 	.word	0x20000000
 8000f90:	200002e0 	.word	0x200002e0
 8000f94:	08007dd0 	.word	0x08007dd0
 8000f98:	08007ddc 	.word	0x08007ddc

08000f9c <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000f9c:	b580      	push	{r7, lr}
 8000f9e:	b094      	sub	sp, #80	; 0x50
 8000fa0:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000fa2:	f107 0320 	add.w	r3, r7, #32
 8000fa6:	2230      	movs	r2, #48	; 0x30
 8000fa8:	2100      	movs	r1, #0
 8000faa:	4618      	mov	r0, r3
 8000fac:	f004 f810 	bl	8004fd0 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000fb0:	f107 030c 	add.w	r3, r7, #12
 8000fb4:	2200      	movs	r2, #0
 8000fb6:	601a      	str	r2, [r3, #0]
 8000fb8:	605a      	str	r2, [r3, #4]
 8000fba:	609a      	str	r2, [r3, #8]
 8000fbc:	60da      	str	r2, [r3, #12]
 8000fbe:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8000fc0:	2300      	movs	r3, #0
 8000fc2:	60bb      	str	r3, [r7, #8]
 8000fc4:	4b28      	ldr	r3, [pc, #160]	; (8001068 <SystemClock_Config+0xcc>)
 8000fc6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000fc8:	4a27      	ldr	r2, [pc, #156]	; (8001068 <SystemClock_Config+0xcc>)
 8000fca:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000fce:	6413      	str	r3, [r2, #64]	; 0x40
 8000fd0:	4b25      	ldr	r3, [pc, #148]	; (8001068 <SystemClock_Config+0xcc>)
 8000fd2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000fd4:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000fd8:	60bb      	str	r3, [r7, #8]
 8000fda:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000fdc:	2300      	movs	r3, #0
 8000fde:	607b      	str	r3, [r7, #4]
 8000fe0:	4b22      	ldr	r3, [pc, #136]	; (800106c <SystemClock_Config+0xd0>)
 8000fe2:	681b      	ldr	r3, [r3, #0]
 8000fe4:	4a21      	ldr	r2, [pc, #132]	; (800106c <SystemClock_Config+0xd0>)
 8000fe6:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000fea:	6013      	str	r3, [r2, #0]
 8000fec:	4b1f      	ldr	r3, [pc, #124]	; (800106c <SystemClock_Config+0xd0>)
 8000fee:	681b      	ldr	r3, [r3, #0]
 8000ff0:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8000ff4:	607b      	str	r3, [r7, #4]
 8000ff6:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8000ff8:	2301      	movs	r3, #1
 8000ffa:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000ffc:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001000:	627b      	str	r3, [r7, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001002:	2302      	movs	r3, #2
 8001004:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001006:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 800100a:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 4;
 800100c:	2304      	movs	r3, #4
 800100e:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 72;
 8001010:	2348      	movs	r3, #72	; 0x48
 8001012:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001014:	2302      	movs	r3, #2
 8001016:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 7;
 8001018:	2307      	movs	r3, #7
 800101a:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800101c:	f107 0320 	add.w	r3, r7, #32
 8001020:	4618      	mov	r0, r3
 8001022:	f001 fc97 	bl	8002954 <HAL_RCC_OscConfig>
 8001026:	4603      	mov	r3, r0
 8001028:	2b00      	cmp	r3, #0
 800102a:	d001      	beq.n	8001030 <SystemClock_Config+0x94>
  {
    Error_Handler();
 800102c:	f000 f964 	bl	80012f8 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001030:	230f      	movs	r3, #15
 8001032:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001034:	2302      	movs	r3, #2
 8001036:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001038:	2300      	movs	r3, #0
 800103a:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 800103c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001040:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001042:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001046:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8001048:	f107 030c 	add.w	r3, r7, #12
 800104c:	2102      	movs	r1, #2
 800104e:	4618      	mov	r0, r3
 8001050:	f001 fef8 	bl	8002e44 <HAL_RCC_ClockConfig>
 8001054:	4603      	mov	r3, r0
 8001056:	2b00      	cmp	r3, #0
 8001058:	d001      	beq.n	800105e <SystemClock_Config+0xc2>
  {
    Error_Handler();
 800105a:	f000 f94d 	bl	80012f8 <Error_Handler>
  }
}
 800105e:	bf00      	nop
 8001060:	3750      	adds	r7, #80	; 0x50
 8001062:	46bd      	mov	sp, r7
 8001064:	bd80      	pop	{r7, pc}
 8001066:	bf00      	nop
 8001068:	40023800 	.word	0x40023800
 800106c:	40007000 	.word	0x40007000

08001070 <MX_NVIC_Init>:
/**
  * @brief NVIC Configuration.
  * @retval None
  */
static void MX_NVIC_Init(void)
{
 8001070:	b580      	push	{r7, lr}
 8001072:	af00      	add	r7, sp, #0
  /* USART2_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);
 8001074:	2200      	movs	r2, #0
 8001076:	2100      	movs	r1, #0
 8001078:	2026      	movs	r0, #38	; 0x26
 800107a:	f001 f9ec 	bl	8002456 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(USART2_IRQn);
 800107e:	2026      	movs	r0, #38	; 0x26
 8001080:	f001 fa05 	bl	800248e <HAL_NVIC_EnableIRQ>
}
 8001084:	bf00      	nop
 8001086:	bd80      	pop	{r7, pc}

08001088 <MX_SPI1_Init>:
  * @brief SPI1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI1_Init(void)
{
 8001088:	b580      	push	{r7, lr}
 800108a:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  /* SPI1 parameter configuration*/
  hspi1.Instance = SPI1;
 800108c:	4b17      	ldr	r3, [pc, #92]	; (80010ec <MX_SPI1_Init+0x64>)
 800108e:	4a18      	ldr	r2, [pc, #96]	; (80010f0 <MX_SPI1_Init+0x68>)
 8001090:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 8001092:	4b16      	ldr	r3, [pc, #88]	; (80010ec <MX_SPI1_Init+0x64>)
 8001094:	f44f 7282 	mov.w	r2, #260	; 0x104
 8001098:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 800109a:	4b14      	ldr	r3, [pc, #80]	; (80010ec <MX_SPI1_Init+0x64>)
 800109c:	2200      	movs	r2, #0
 800109e:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 80010a0:	4b12      	ldr	r3, [pc, #72]	; (80010ec <MX_SPI1_Init+0x64>)
 80010a2:	2200      	movs	r2, #0
 80010a4:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 80010a6:	4b11      	ldr	r3, [pc, #68]	; (80010ec <MX_SPI1_Init+0x64>)
 80010a8:	2200      	movs	r2, #0
 80010aa:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 80010ac:	4b0f      	ldr	r3, [pc, #60]	; (80010ec <MX_SPI1_Init+0x64>)
 80010ae:	2200      	movs	r2, #0
 80010b0:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 80010b2:	4b0e      	ldr	r3, [pc, #56]	; (80010ec <MX_SPI1_Init+0x64>)
 80010b4:	f44f 7200 	mov.w	r2, #512	; 0x200
 80010b8:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_256;
 80010ba:	4b0c      	ldr	r3, [pc, #48]	; (80010ec <MX_SPI1_Init+0x64>)
 80010bc:	2238      	movs	r2, #56	; 0x38
 80010be:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 80010c0:	4b0a      	ldr	r3, [pc, #40]	; (80010ec <MX_SPI1_Init+0x64>)
 80010c2:	2200      	movs	r2, #0
 80010c4:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 80010c6:	4b09      	ldr	r3, [pc, #36]	; (80010ec <MX_SPI1_Init+0x64>)
 80010c8:	2200      	movs	r2, #0
 80010ca:	625a      	str	r2, [r3, #36]	; 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80010cc:	4b07      	ldr	r3, [pc, #28]	; (80010ec <MX_SPI1_Init+0x64>)
 80010ce:	2200      	movs	r2, #0
 80010d0:	629a      	str	r2, [r3, #40]	; 0x28
  hspi1.Init.CRCPolynomial = 10;
 80010d2:	4b06      	ldr	r3, [pc, #24]	; (80010ec <MX_SPI1_Init+0x64>)
 80010d4:	220a      	movs	r2, #10
 80010d6:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 80010d8:	4804      	ldr	r0, [pc, #16]	; (80010ec <MX_SPI1_Init+0x64>)
 80010da:	f002 f8d3 	bl	8003284 <HAL_SPI_Init>
 80010de:	4603      	mov	r3, r0
 80010e0:	2b00      	cmp	r3, #0
 80010e2:	d001      	beq.n	80010e8 <MX_SPI1_Init+0x60>
  {
    Error_Handler();
 80010e4:	f000 f908 	bl	80012f8 <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 80010e8:	bf00      	nop
 80010ea:	bd80      	pop	{r7, pc}
 80010ec:	200001fc 	.word	0x200001fc
 80010f0:	40013000 	.word	0x40013000

080010f4 <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 80010f4:	b580      	push	{r7, lr}
 80010f6:	b086      	sub	sp, #24
 80010f8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80010fa:	f107 0308 	add.w	r3, r7, #8
 80010fe:	2200      	movs	r2, #0
 8001100:	601a      	str	r2, [r3, #0]
 8001102:	605a      	str	r2, [r3, #4]
 8001104:	609a      	str	r2, [r3, #8]
 8001106:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001108:	463b      	mov	r3, r7
 800110a:	2200      	movs	r2, #0
 800110c:	601a      	str	r2, [r3, #0]
 800110e:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 8001110:	4b1e      	ldr	r3, [pc, #120]	; (800118c <MX_TIM1_Init+0x98>)
 8001112:	4a1f      	ldr	r2, [pc, #124]	; (8001190 <MX_TIM1_Init+0x9c>)
 8001114:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 71;
 8001116:	4b1d      	ldr	r3, [pc, #116]	; (800118c <MX_TIM1_Init+0x98>)
 8001118:	2247      	movs	r2, #71	; 0x47
 800111a:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 800111c:	4b1b      	ldr	r3, [pc, #108]	; (800118c <MX_TIM1_Init+0x98>)
 800111e:	2200      	movs	r2, #0
 8001120:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 0xffff-1;
 8001122:	4b1a      	ldr	r3, [pc, #104]	; (800118c <MX_TIM1_Init+0x98>)
 8001124:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8001128:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800112a:	4b18      	ldr	r3, [pc, #96]	; (800118c <MX_TIM1_Init+0x98>)
 800112c:	2200      	movs	r2, #0
 800112e:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 8001130:	4b16      	ldr	r3, [pc, #88]	; (800118c <MX_TIM1_Init+0x98>)
 8001132:	2200      	movs	r2, #0
 8001134:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001136:	4b15      	ldr	r3, [pc, #84]	; (800118c <MX_TIM1_Init+0x98>)
 8001138:	2200      	movs	r2, #0
 800113a:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 800113c:	4813      	ldr	r0, [pc, #76]	; (800118c <MX_TIM1_Init+0x98>)
 800113e:	f002 fcd3 	bl	8003ae8 <HAL_TIM_Base_Init>
 8001142:	4603      	mov	r3, r0
 8001144:	2b00      	cmp	r3, #0
 8001146:	d001      	beq.n	800114c <MX_TIM1_Init+0x58>
  {
    Error_Handler();
 8001148:	f000 f8d6 	bl	80012f8 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800114c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001150:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 8001152:	f107 0308 	add.w	r3, r7, #8
 8001156:	4619      	mov	r1, r3
 8001158:	480c      	ldr	r0, [pc, #48]	; (800118c <MX_TIM1_Init+0x98>)
 800115a:	f002 fd7d 	bl	8003c58 <HAL_TIM_ConfigClockSource>
 800115e:	4603      	mov	r3, r0
 8001160:	2b00      	cmp	r3, #0
 8001162:	d001      	beq.n	8001168 <MX_TIM1_Init+0x74>
  {
    Error_Handler();
 8001164:	f000 f8c8 	bl	80012f8 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001168:	2300      	movs	r3, #0
 800116a:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800116c:	2300      	movs	r3, #0
 800116e:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8001170:	463b      	mov	r3, r7
 8001172:	4619      	mov	r1, r3
 8001174:	4805      	ldr	r0, [pc, #20]	; (800118c <MX_TIM1_Init+0x98>)
 8001176:	f002 ff71 	bl	800405c <HAL_TIMEx_MasterConfigSynchronization>
 800117a:	4603      	mov	r3, r0
 800117c:	2b00      	cmp	r3, #0
 800117e:	d001      	beq.n	8001184 <MX_TIM1_Init+0x90>
  {
    Error_Handler();
 8001180:	f000 f8ba 	bl	80012f8 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */

}
 8001184:	bf00      	nop
 8001186:	3718      	adds	r7, #24
 8001188:	46bd      	mov	sp, r7
 800118a:	bd80      	pop	{r7, pc}
 800118c:	20000254 	.word	0x20000254
 8001190:	40010000 	.word	0x40010000

08001194 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8001194:	b580      	push	{r7, lr}
 8001196:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8001198:	4b11      	ldr	r3, [pc, #68]	; (80011e0 <MX_USART2_UART_Init+0x4c>)
 800119a:	4a12      	ldr	r2, [pc, #72]	; (80011e4 <MX_USART2_UART_Init+0x50>)
 800119c:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 800119e:	4b10      	ldr	r3, [pc, #64]	; (80011e0 <MX_USART2_UART_Init+0x4c>)
 80011a0:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80011a4:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 80011a6:	4b0e      	ldr	r3, [pc, #56]	; (80011e0 <MX_USART2_UART_Init+0x4c>)
 80011a8:	2200      	movs	r2, #0
 80011aa:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 80011ac:	4b0c      	ldr	r3, [pc, #48]	; (80011e0 <MX_USART2_UART_Init+0x4c>)
 80011ae:	2200      	movs	r2, #0
 80011b0:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 80011b2:	4b0b      	ldr	r3, [pc, #44]	; (80011e0 <MX_USART2_UART_Init+0x4c>)
 80011b4:	2200      	movs	r2, #0
 80011b6:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 80011b8:	4b09      	ldr	r3, [pc, #36]	; (80011e0 <MX_USART2_UART_Init+0x4c>)
 80011ba:	220c      	movs	r2, #12
 80011bc:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80011be:	4b08      	ldr	r3, [pc, #32]	; (80011e0 <MX_USART2_UART_Init+0x4c>)
 80011c0:	2200      	movs	r2, #0
 80011c2:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 80011c4:	4b06      	ldr	r3, [pc, #24]	; (80011e0 <MX_USART2_UART_Init+0x4c>)
 80011c6:	2200      	movs	r2, #0
 80011c8:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 80011ca:	4805      	ldr	r0, [pc, #20]	; (80011e0 <MX_USART2_UART_Init+0x4c>)
 80011cc:	f002 ffc2 	bl	8004154 <HAL_UART_Init>
 80011d0:	4603      	mov	r3, r0
 80011d2:	2b00      	cmp	r3, #0
 80011d4:	d001      	beq.n	80011da <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 80011d6:	f000 f88f 	bl	80012f8 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 80011da:	bf00      	nop
 80011dc:	bd80      	pop	{r7, pc}
 80011de:	bf00      	nop
 80011e0:	2000029c 	.word	0x2000029c
 80011e4:	40004400 	.word	0x40004400

080011e8 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80011e8:	b580      	push	{r7, lr}
 80011ea:	b08a      	sub	sp, #40	; 0x28
 80011ec:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80011ee:	f107 0314 	add.w	r3, r7, #20
 80011f2:	2200      	movs	r2, #0
 80011f4:	601a      	str	r2, [r3, #0]
 80011f6:	605a      	str	r2, [r3, #4]
 80011f8:	609a      	str	r2, [r3, #8]
 80011fa:	60da      	str	r2, [r3, #12]
 80011fc:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80011fe:	2300      	movs	r3, #0
 8001200:	613b      	str	r3, [r7, #16]
 8001202:	4b39      	ldr	r3, [pc, #228]	; (80012e8 <MX_GPIO_Init+0x100>)
 8001204:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001206:	4a38      	ldr	r2, [pc, #224]	; (80012e8 <MX_GPIO_Init+0x100>)
 8001208:	f043 0310 	orr.w	r3, r3, #16
 800120c:	6313      	str	r3, [r2, #48]	; 0x30
 800120e:	4b36      	ldr	r3, [pc, #216]	; (80012e8 <MX_GPIO_Init+0x100>)
 8001210:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001212:	f003 0310 	and.w	r3, r3, #16
 8001216:	613b      	str	r3, [r7, #16]
 8001218:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800121a:	2300      	movs	r3, #0
 800121c:	60fb      	str	r3, [r7, #12]
 800121e:	4b32      	ldr	r3, [pc, #200]	; (80012e8 <MX_GPIO_Init+0x100>)
 8001220:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001222:	4a31      	ldr	r2, [pc, #196]	; (80012e8 <MX_GPIO_Init+0x100>)
 8001224:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001228:	6313      	str	r3, [r2, #48]	; 0x30
 800122a:	4b2f      	ldr	r3, [pc, #188]	; (80012e8 <MX_GPIO_Init+0x100>)
 800122c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800122e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001232:	60fb      	str	r3, [r7, #12]
 8001234:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001236:	2300      	movs	r3, #0
 8001238:	60bb      	str	r3, [r7, #8]
 800123a:	4b2b      	ldr	r3, [pc, #172]	; (80012e8 <MX_GPIO_Init+0x100>)
 800123c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800123e:	4a2a      	ldr	r2, [pc, #168]	; (80012e8 <MX_GPIO_Init+0x100>)
 8001240:	f043 0301 	orr.w	r3, r3, #1
 8001244:	6313      	str	r3, [r2, #48]	; 0x30
 8001246:	4b28      	ldr	r3, [pc, #160]	; (80012e8 <MX_GPIO_Init+0x100>)
 8001248:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800124a:	f003 0301 	and.w	r3, r3, #1
 800124e:	60bb      	str	r3, [r7, #8]
 8001250:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001252:	2300      	movs	r3, #0
 8001254:	607b      	str	r3, [r7, #4]
 8001256:	4b24      	ldr	r3, [pc, #144]	; (80012e8 <MX_GPIO_Init+0x100>)
 8001258:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800125a:	4a23      	ldr	r2, [pc, #140]	; (80012e8 <MX_GPIO_Init+0x100>)
 800125c:	f043 0304 	orr.w	r3, r3, #4
 8001260:	6313      	str	r3, [r2, #48]	; 0x30
 8001262:	4b21      	ldr	r3, [pc, #132]	; (80012e8 <MX_GPIO_Init+0x100>)
 8001264:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001266:	f003 0304 	and.w	r3, r3, #4
 800126a:	607b      	str	r3, [r7, #4]
 800126c:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_2|GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5
 800126e:	2200      	movs	r2, #0
 8001270:	217f      	movs	r1, #127	; 0x7f
 8001272:	481e      	ldr	r0, [pc, #120]	; (80012ec <MX_GPIO_Init+0x104>)
 8001274:	f001 fb54 	bl	8002920 <HAL_GPIO_WritePin>
                          |GPIO_PIN_6|GPIO_PIN_0|GPIO_PIN_1, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_4, GPIO_PIN_SET);
 8001278:	2201      	movs	r2, #1
 800127a:	2110      	movs	r1, #16
 800127c:	481c      	ldr	r0, [pc, #112]	; (80012f0 <MX_GPIO_Init+0x108>)
 800127e:	f001 fb4f 	bl	8002920 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_4, GPIO_PIN_SET);
 8001282:	2201      	movs	r2, #1
 8001284:	2110      	movs	r1, #16
 8001286:	481b      	ldr	r0, [pc, #108]	; (80012f4 <MX_GPIO_Init+0x10c>)
 8001288:	f001 fb4a 	bl	8002920 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : PE2 PE3 PE4 PE5
                           PE6 PE0 PE1 */
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5
 800128c:	237f      	movs	r3, #127	; 0x7f
 800128e:	617b      	str	r3, [r7, #20]
                          |GPIO_PIN_6|GPIO_PIN_0|GPIO_PIN_1;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001290:	2301      	movs	r3, #1
 8001292:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001294:	2300      	movs	r3, #0
 8001296:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001298:	2300      	movs	r3, #0
 800129a:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800129c:	f107 0314 	add.w	r3, r7, #20
 80012a0:	4619      	mov	r1, r3
 80012a2:	4812      	ldr	r0, [pc, #72]	; (80012ec <MX_GPIO_Init+0x104>)
 80012a4:	f001 f9a0 	bl	80025e8 <HAL_GPIO_Init>

  /*Configure GPIO pin : PA4 */
  GPIO_InitStruct.Pin = GPIO_PIN_4;
 80012a8:	2310      	movs	r3, #16
 80012aa:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80012ac:	2301      	movs	r3, #1
 80012ae:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80012b0:	2300      	movs	r3, #0
 80012b2:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80012b4:	2300      	movs	r3, #0
 80012b6:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80012b8:	f107 0314 	add.w	r3, r7, #20
 80012bc:	4619      	mov	r1, r3
 80012be:	480c      	ldr	r0, [pc, #48]	; (80012f0 <MX_GPIO_Init+0x108>)
 80012c0:	f001 f992 	bl	80025e8 <HAL_GPIO_Init>

  /*Configure GPIO pin : PC4 */
  GPIO_InitStruct.Pin = GPIO_PIN_4;
 80012c4:	2310      	movs	r3, #16
 80012c6:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80012c8:	2301      	movs	r3, #1
 80012ca:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 80012cc:	2301      	movs	r3, #1
 80012ce:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_MEDIUM;
 80012d0:	2301      	movs	r3, #1
 80012d2:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80012d4:	f107 0314 	add.w	r3, r7, #20
 80012d8:	4619      	mov	r1, r3
 80012da:	4806      	ldr	r0, [pc, #24]	; (80012f4 <MX_GPIO_Init+0x10c>)
 80012dc:	f001 f984 	bl	80025e8 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 80012e0:	bf00      	nop
 80012e2:	3728      	adds	r7, #40	; 0x28
 80012e4:	46bd      	mov	sp, r7
 80012e6:	bd80      	pop	{r7, pc}
 80012e8:	40023800 	.word	0x40023800
 80012ec:	40021000 	.word	0x40021000
 80012f0:	40020000 	.word	0x40020000
 80012f4:	40020800 	.word	0x40020800

080012f8 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80012f8:	b480      	push	{r7}
 80012fa:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80012fc:	b672      	cpsid	i
}
 80012fe:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8001300:	e7fe      	b.n	8001300 <Error_Handler+0x8>
	...

08001304 <LCD1602_TransferToLCD>:

#include "stm32f4xx_LCD1602.h"
#include "stm32f4xx_microDelay.h"

  void LCD1602_TransferToLCD(char data, int rs)
  {
 8001304:	b580      	push	{r7, lr}
 8001306:	b082      	sub	sp, #8
 8001308:	af00      	add	r7, sp, #0
 800130a:	4603      	mov	r3, r0
 800130c:	6039      	str	r1, [r7, #0]
 800130e:	71fb      	strb	r3, [r7, #7]
	  /* rs = 1 for data, rs=0 for command */
      HAL_GPIO_WritePin(RS_PORT, RS_PIN, rs);
 8001310:	683b      	ldr	r3, [r7, #0]
 8001312:	b2db      	uxtb	r3, r3
 8001314:	461a      	mov	r2, r3
 8001316:	2101      	movs	r1, #1
 8001318:	4820      	ldr	r0, [pc, #128]	; (800139c <LCD1602_TransferToLCD+0x98>)
 800131a:	f001 fb01 	bl	8002920 <HAL_GPIO_WritePin>

      /* write the data to the respective pin */
      HAL_GPIO_WritePin(D7_PORT, D7_PIN, ((data>>3)&0x01));
 800131e:	79fb      	ldrb	r3, [r7, #7]
 8001320:	08db      	lsrs	r3, r3, #3
 8001322:	b2db      	uxtb	r3, r3
 8001324:	f003 0301 	and.w	r3, r3, #1
 8001328:	b2db      	uxtb	r3, r3
 800132a:	461a      	mov	r2, r3
 800132c:	2140      	movs	r1, #64	; 0x40
 800132e:	481b      	ldr	r0, [pc, #108]	; (800139c <LCD1602_TransferToLCD+0x98>)
 8001330:	f001 faf6 	bl	8002920 <HAL_GPIO_WritePin>
      HAL_GPIO_WritePin(D6_PORT, D6_PIN, ((data>>2)&0x01));
 8001334:	79fb      	ldrb	r3, [r7, #7]
 8001336:	089b      	lsrs	r3, r3, #2
 8001338:	b2db      	uxtb	r3, r3
 800133a:	f003 0301 	and.w	r3, r3, #1
 800133e:	b2db      	uxtb	r3, r3
 8001340:	461a      	mov	r2, r3
 8001342:	2120      	movs	r1, #32
 8001344:	4815      	ldr	r0, [pc, #84]	; (800139c <LCD1602_TransferToLCD+0x98>)
 8001346:	f001 faeb 	bl	8002920 <HAL_GPIO_WritePin>
      HAL_GPIO_WritePin(D5_PORT, D5_PIN, ((data>>1)&0x01));
 800134a:	79fb      	ldrb	r3, [r7, #7]
 800134c:	085b      	lsrs	r3, r3, #1
 800134e:	b2db      	uxtb	r3, r3
 8001350:	f003 0301 	and.w	r3, r3, #1
 8001354:	b2db      	uxtb	r3, r3
 8001356:	461a      	mov	r2, r3
 8001358:	2110      	movs	r1, #16
 800135a:	4810      	ldr	r0, [pc, #64]	; (800139c <LCD1602_TransferToLCD+0x98>)
 800135c:	f001 fae0 	bl	8002920 <HAL_GPIO_WritePin>
      HAL_GPIO_WritePin(D4_PORT, D4_PIN, ((data>>0)&0x01));
 8001360:	79fb      	ldrb	r3, [r7, #7]
 8001362:	f003 0301 	and.w	r3, r3, #1
 8001366:	b2db      	uxtb	r3, r3
 8001368:	461a      	mov	r2, r3
 800136a:	2108      	movs	r1, #8
 800136c:	480b      	ldr	r0, [pc, #44]	; (800139c <LCD1602_TransferToLCD+0x98>)
 800136e:	f001 fad7 	bl	8002920 <HAL_GPIO_WritePin>

      /* Toggle EN PIN to send the data
       * if the HCLK > 100 MHz, use the  20 us delay.
       * Increase if malfunctioning.
       */
      HAL_GPIO_WritePin(EN_PORT, EN_PIN, 1);
 8001372:	2201      	movs	r2, #1
 8001374:	2104      	movs	r1, #4
 8001376:	4809      	ldr	r0, [pc, #36]	; (800139c <LCD1602_TransferToLCD+0x98>)
 8001378:	f001 fad2 	bl	8002920 <HAL_GPIO_WritePin>
      microDelay(20);
 800137c:	2014      	movs	r0, #20
 800137e:	f000 fddd 	bl	8001f3c <microDelay>
      HAL_GPIO_WritePin(EN_PORT, EN_PIN, 0);
 8001382:	2200      	movs	r2, #0
 8001384:	2104      	movs	r1, #4
 8001386:	4805      	ldr	r0, [pc, #20]	; (800139c <LCD1602_TransferToLCD+0x98>)
 8001388:	f001 faca 	bl	8002920 <HAL_GPIO_WritePin>
      microDelay(20);
 800138c:	2014      	movs	r0, #20
 800138e:	f000 fdd5 	bl	8001f3c <microDelay>
  }
 8001392:	bf00      	nop
 8001394:	3708      	adds	r7, #8
 8001396:	46bd      	mov	sp, r7
 8001398:	bd80      	pop	{r7, pc}
 800139a:	bf00      	nop
 800139c:	40021000 	.word	0x40021000

080013a0 <LCD1602_SendCommand>:

  void LCD1602_SendCommand(char cmd)
  {
 80013a0:	b580      	push	{r7, lr}
 80013a2:	b084      	sub	sp, #16
 80013a4:	af00      	add	r7, sp, #0
 80013a6:	4603      	mov	r3, r0
 80013a8:	71fb      	strb	r3, [r7, #7]
      char command;
      
      /* Send upper bit */
      command = ((cmd>>4)&0x0f);
 80013aa:	79fb      	ldrb	r3, [r7, #7]
 80013ac:	091b      	lsrs	r3, r3, #4
 80013ae:	73fb      	strb	r3, [r7, #15]
      
      /* RS must be 0 while sending a command */
      LCD1602_TransferToLCD(command,0);
 80013b0:	7bfb      	ldrb	r3, [r7, #15]
 80013b2:	2100      	movs	r1, #0
 80013b4:	4618      	mov	r0, r3
 80013b6:	f7ff ffa5 	bl	8001304 <LCD1602_TransferToLCD>
      
      /* Send lower bit */
      command = ((cmd)&0x0f);
 80013ba:	79fb      	ldrb	r3, [r7, #7]
 80013bc:	f003 030f 	and.w	r3, r3, #15
 80013c0:	73fb      	strb	r3, [r7, #15]
      LCD1602_TransferToLCD(command, 0);
 80013c2:	7bfb      	ldrb	r3, [r7, #15]
 80013c4:	2100      	movs	r1, #0
 80013c6:	4618      	mov	r0, r3
 80013c8:	f7ff ff9c 	bl	8001304 <LCD1602_TransferToLCD>
  }
 80013cc:	bf00      	nop
 80013ce:	3710      	adds	r7, #16
 80013d0:	46bd      	mov	sp, r7
 80013d2:	bd80      	pop	{r7, pc}

080013d4 <LCD1602_SendData>:

  void LCD1602_SendData(char data)
  {
 80013d4:	b580      	push	{r7, lr}
 80013d6:	b084      	sub	sp, #16
 80013d8:	af00      	add	r7, sp, #0
 80013da:	4603      	mov	r3, r0
 80013dc:	71fb      	strb	r3, [r7, #7]
      char sendData;

      /* Send upper bit */
      sendData = ((data>>4)&0x0f);
 80013de:	79fb      	ldrb	r3, [r7, #7]
 80013e0:	091b      	lsrs	r3, r3, #4
 80013e2:	73fb      	strb	r3, [r7, #15]

      /* RS must be 1 while sending data */
      LCD1602_TransferToLCD(sendData, 1);
 80013e4:	7bfb      	ldrb	r3, [r7, #15]
 80013e6:	2101      	movs	r1, #1
 80013e8:	4618      	mov	r0, r3
 80013ea:	f7ff ff8b 	bl	8001304 <LCD1602_TransferToLCD>

      /* Send lower bit */
      sendData = ((data)&0x0f);
 80013ee:	79fb      	ldrb	r3, [r7, #7]
 80013f0:	f003 030f 	and.w	r3, r3, #15
 80013f4:	73fb      	strb	r3, [r7, #15]
      LCD1602_TransferToLCD(sendData, 1);
 80013f6:	7bfb      	ldrb	r3, [r7, #15]
 80013f8:	2101      	movs	r1, #1
 80013fa:	4618      	mov	r0, r3
 80013fc:	f7ff ff82 	bl	8001304 <LCD1602_TransferToLCD>
  }
 8001400:	bf00      	nop
 8001402:	3710      	adds	r7, #16
 8001404:	46bd      	mov	sp, r7
 8001406:	bd80      	pop	{r7, pc}

08001408 <LCD1602_CursorPosition>:

  void LCD1602_CursorPosition(int row, int col)
  {
 8001408:	b580      	push	{r7, lr}
 800140a:	b082      	sub	sp, #8
 800140c:	af00      	add	r7, sp, #0
 800140e:	6078      	str	r0, [r7, #4]
 8001410:	6039      	str	r1, [r7, #0]
      switch (row)
 8001412:	687b      	ldr	r3, [r7, #4]
 8001414:	2b00      	cmp	r3, #0
 8001416:	d003      	beq.n	8001420 <LCD1602_CursorPosition+0x18>
 8001418:	687b      	ldr	r3, [r7, #4]
 800141a:	2b01      	cmp	r3, #1
 800141c:	d005      	beq.n	800142a <LCD1602_CursorPosition+0x22>
 800141e:	e009      	b.n	8001434 <LCD1602_CursorPosition+0x2c>
      {
          case 0:
              col |= 0x80;
 8001420:	683b      	ldr	r3, [r7, #0]
 8001422:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001426:	603b      	str	r3, [r7, #0]
              break;
 8001428:	e004      	b.n	8001434 <LCD1602_CursorPosition+0x2c>
          case 1:
              col |= 0xC0;
 800142a:	683b      	ldr	r3, [r7, #0]
 800142c:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8001430:	603b      	str	r3, [r7, #0]
              break;
 8001432:	bf00      	nop
      }
      LCD1602_SendCommand(col);
 8001434:	683b      	ldr	r3, [r7, #0]
 8001436:	b2db      	uxtb	r3, r3
 8001438:	4618      	mov	r0, r3
 800143a:	f7ff ffb1 	bl	80013a0 <LCD1602_SendCommand>
  }
 800143e:	bf00      	nop
 8001440:	3708      	adds	r7, #8
 8001442:	46bd      	mov	sp, r7
 8001444:	bd80      	pop	{r7, pc}

08001446 <LCD1602_Clear>:

  void LCD1602_Clear(void)
  {
 8001446:	b580      	push	{r7, lr}
 8001448:	af00      	add	r7, sp, #0
	  LCD1602_SendCommand(0x01);
 800144a:	2001      	movs	r0, #1
 800144c:	f7ff ffa8 	bl	80013a0 <LCD1602_SendCommand>
	  HAL_Delay(2);
 8001450:	2002      	movs	r0, #2
 8001452:	f000 ff01 	bl	8002258 <HAL_Delay>
  }
 8001456:	bf00      	nop
 8001458:	bd80      	pop	{r7, pc}

0800145a <LCD1602_Init>:

  void LCD1602_Init(void)
  {
 800145a:	b580      	push	{r7, lr}
 800145c:	af00      	add	r7, sp, #0
      // 4 bit initialization
      HAL_Delay(50);  // wait for >40ms
 800145e:	2032      	movs	r0, #50	; 0x32
 8001460:	f000 fefa 	bl	8002258 <HAL_Delay>
      LCD1602_SendCommand (0x30);
 8001464:	2030      	movs	r0, #48	; 0x30
 8001466:	f7ff ff9b 	bl	80013a0 <LCD1602_SendCommand>
      HAL_Delay(5);  // wait for >4.1ms
 800146a:	2005      	movs	r0, #5
 800146c:	f000 fef4 	bl	8002258 <HAL_Delay>
      LCD1602_SendCommand (0x30);
 8001470:	2030      	movs	r0, #48	; 0x30
 8001472:	f7ff ff95 	bl	80013a0 <LCD1602_SendCommand>
      HAL_Delay(1);  // wait for >100us
 8001476:	2001      	movs	r0, #1
 8001478:	f000 feee 	bl	8002258 <HAL_Delay>
      LCD1602_SendCommand (0x30);
 800147c:	2030      	movs	r0, #48	; 0x30
 800147e:	f7ff ff8f 	bl	80013a0 <LCD1602_SendCommand>
      HAL_Delay(10);
 8001482:	200a      	movs	r0, #10
 8001484:	f000 fee8 	bl	8002258 <HAL_Delay>
      LCD1602_SendCommand (0x20);  // 4bit mode
 8001488:	2020      	movs	r0, #32
 800148a:	f7ff ff89 	bl	80013a0 <LCD1602_SendCommand>
      HAL_Delay(10);
 800148e:	200a      	movs	r0, #10
 8001490:	f000 fee2 	bl	8002258 <HAL_Delay>

    // Display initialization
      LCD1602_SendCommand (0x28); // Function set --> DL=0 (4 bit mode), N = 1 (2 line display) F = 0 (5x8 characters)
 8001494:	2028      	movs	r0, #40	; 0x28
 8001496:	f7ff ff83 	bl	80013a0 <LCD1602_SendCommand>
      HAL_Delay(1);
 800149a:	2001      	movs	r0, #1
 800149c:	f000 fedc 	bl	8002258 <HAL_Delay>
      LCD1602_SendCommand (0x08); //Display on/off control --> D=0,C=0, B=0  ---> display off
 80014a0:	2008      	movs	r0, #8
 80014a2:	f7ff ff7d 	bl	80013a0 <LCD1602_SendCommand>
      HAL_Delay(1);
 80014a6:	2001      	movs	r0, #1
 80014a8:	f000 fed6 	bl	8002258 <HAL_Delay>
      LCD1602_SendCommand (0x01);  // clear display
 80014ac:	2001      	movs	r0, #1
 80014ae:	f7ff ff77 	bl	80013a0 <LCD1602_SendCommand>
      HAL_Delay(1);
 80014b2:	2001      	movs	r0, #1
 80014b4:	f000 fed0 	bl	8002258 <HAL_Delay>
      LCD1602_SendCommand (0x06); //Entry mode set --> I/D = 1 (increment cursor) & S = 0 (no shift)
 80014b8:	2006      	movs	r0, #6
 80014ba:	f7ff ff71 	bl	80013a0 <LCD1602_SendCommand>
      HAL_Delay(1);
 80014be:	2001      	movs	r0, #1
 80014c0:	f000 feca 	bl	8002258 <HAL_Delay>
      LCD1602_SendCommand (0x0C); //Display on/off control --> D = 1, C and B = 0. (Cursor and blink, last two bits)
 80014c4:	200c      	movs	r0, #12
 80014c6:	f7ff ff6b 	bl	80013a0 <LCD1602_SendCommand>
  }
 80014ca:	bf00      	nop
 80014cc:	bd80      	pop	{r7, pc}

080014ce <LCD1602_TransferString>:

  void LCD1602_TransferString(char *str)
  {
 80014ce:	b580      	push	{r7, lr}
 80014d0:	b082      	sub	sp, #8
 80014d2:	af00      	add	r7, sp, #0
 80014d4:	6078      	str	r0, [r7, #4]
	  while(*str)
 80014d6:	e006      	b.n	80014e6 <LCD1602_TransferString+0x18>
		  LCD1602_SendData(*str++);
 80014d8:	687b      	ldr	r3, [r7, #4]
 80014da:	1c5a      	adds	r2, r3, #1
 80014dc:	607a      	str	r2, [r7, #4]
 80014de:	781b      	ldrb	r3, [r3, #0]
 80014e0:	4618      	mov	r0, r3
 80014e2:	f7ff ff77 	bl	80013d4 <LCD1602_SendData>
	  while(*str)
 80014e6:	687b      	ldr	r3, [r7, #4]
 80014e8:	781b      	ldrb	r3, [r3, #0]
 80014ea:	2b00      	cmp	r3, #0
 80014ec:	d1f4      	bne.n	80014d8 <LCD1602_TransferString+0xa>
  }
 80014ee:	bf00      	nop
 80014f0:	bf00      	nop
 80014f2:	3708      	adds	r7, #8
 80014f4:	46bd      	mov	sp, r7
 80014f6:	bd80      	pop	{r7, pc}

080014f8 <HAL_MspInit>:
 80014f8:	b580      	push	{r7, lr}
 80014fa:	b082      	sub	sp, #8
 80014fc:	af00      	add	r7, sp, #0
 80014fe:	2300      	movs	r3, #0
 8001500:	607b      	str	r3, [r7, #4]
 8001502:	4b10      	ldr	r3, [pc, #64]	; (8001544 <HAL_MspInit+0x4c>)
 8001504:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001506:	4a0f      	ldr	r2, [pc, #60]	; (8001544 <HAL_MspInit+0x4c>)
 8001508:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800150c:	6453      	str	r3, [r2, #68]	; 0x44
 800150e:	4b0d      	ldr	r3, [pc, #52]	; (8001544 <HAL_MspInit+0x4c>)
 8001510:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001512:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001516:	607b      	str	r3, [r7, #4]
 8001518:	687b      	ldr	r3, [r7, #4]
 800151a:	2300      	movs	r3, #0
 800151c:	603b      	str	r3, [r7, #0]
 800151e:	4b09      	ldr	r3, [pc, #36]	; (8001544 <HAL_MspInit+0x4c>)
 8001520:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001522:	4a08      	ldr	r2, [pc, #32]	; (8001544 <HAL_MspInit+0x4c>)
 8001524:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001528:	6413      	str	r3, [r2, #64]	; 0x40
 800152a:	4b06      	ldr	r3, [pc, #24]	; (8001544 <HAL_MspInit+0x4c>)
 800152c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800152e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001532:	603b      	str	r3, [r7, #0]
 8001534:	683b      	ldr	r3, [r7, #0]
 8001536:	2007      	movs	r0, #7
 8001538:	f000 ff82 	bl	8002440 <HAL_NVIC_SetPriorityGrouping>
 800153c:	bf00      	nop
 800153e:	3708      	adds	r7, #8
 8001540:	46bd      	mov	sp, r7
 8001542:	bd80      	pop	{r7, pc}
 8001544:	40023800 	.word	0x40023800

08001548 <HAL_SPI_MspInit>:
 8001548:	b580      	push	{r7, lr}
 800154a:	b08a      	sub	sp, #40	; 0x28
 800154c:	af00      	add	r7, sp, #0
 800154e:	6078      	str	r0, [r7, #4]
 8001550:	f107 0314 	add.w	r3, r7, #20
 8001554:	2200      	movs	r2, #0
 8001556:	601a      	str	r2, [r3, #0]
 8001558:	605a      	str	r2, [r3, #4]
 800155a:	609a      	str	r2, [r3, #8]
 800155c:	60da      	str	r2, [r3, #12]
 800155e:	611a      	str	r2, [r3, #16]
 8001560:	687b      	ldr	r3, [r7, #4]
 8001562:	681b      	ldr	r3, [r3, #0]
 8001564:	4a19      	ldr	r2, [pc, #100]	; (80015cc <HAL_SPI_MspInit+0x84>)
 8001566:	4293      	cmp	r3, r2
 8001568:	d12b      	bne.n	80015c2 <HAL_SPI_MspInit+0x7a>
 800156a:	2300      	movs	r3, #0
 800156c:	613b      	str	r3, [r7, #16]
 800156e:	4b18      	ldr	r3, [pc, #96]	; (80015d0 <HAL_SPI_MspInit+0x88>)
 8001570:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001572:	4a17      	ldr	r2, [pc, #92]	; (80015d0 <HAL_SPI_MspInit+0x88>)
 8001574:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8001578:	6453      	str	r3, [r2, #68]	; 0x44
 800157a:	4b15      	ldr	r3, [pc, #84]	; (80015d0 <HAL_SPI_MspInit+0x88>)
 800157c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800157e:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001582:	613b      	str	r3, [r7, #16]
 8001584:	693b      	ldr	r3, [r7, #16]
 8001586:	2300      	movs	r3, #0
 8001588:	60fb      	str	r3, [r7, #12]
 800158a:	4b11      	ldr	r3, [pc, #68]	; (80015d0 <HAL_SPI_MspInit+0x88>)
 800158c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800158e:	4a10      	ldr	r2, [pc, #64]	; (80015d0 <HAL_SPI_MspInit+0x88>)
 8001590:	f043 0301 	orr.w	r3, r3, #1
 8001594:	6313      	str	r3, [r2, #48]	; 0x30
 8001596:	4b0e      	ldr	r3, [pc, #56]	; (80015d0 <HAL_SPI_MspInit+0x88>)
 8001598:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800159a:	f003 0301 	and.w	r3, r3, #1
 800159e:	60fb      	str	r3, [r7, #12]
 80015a0:	68fb      	ldr	r3, [r7, #12]
 80015a2:	23e0      	movs	r3, #224	; 0xe0
 80015a4:	617b      	str	r3, [r7, #20]
 80015a6:	2302      	movs	r3, #2
 80015a8:	61bb      	str	r3, [r7, #24]
 80015aa:	2300      	movs	r3, #0
 80015ac:	61fb      	str	r3, [r7, #28]
 80015ae:	2303      	movs	r3, #3
 80015b0:	623b      	str	r3, [r7, #32]
 80015b2:	2305      	movs	r3, #5
 80015b4:	627b      	str	r3, [r7, #36]	; 0x24
 80015b6:	f107 0314 	add.w	r3, r7, #20
 80015ba:	4619      	mov	r1, r3
 80015bc:	4805      	ldr	r0, [pc, #20]	; (80015d4 <HAL_SPI_MspInit+0x8c>)
 80015be:	f001 f813 	bl	80025e8 <HAL_GPIO_Init>
 80015c2:	bf00      	nop
 80015c4:	3728      	adds	r7, #40	; 0x28
 80015c6:	46bd      	mov	sp, r7
 80015c8:	bd80      	pop	{r7, pc}
 80015ca:	bf00      	nop
 80015cc:	40013000 	.word	0x40013000
 80015d0:	40023800 	.word	0x40023800
 80015d4:	40020000 	.word	0x40020000

080015d8 <HAL_TIM_Base_MspInit>:
 80015d8:	b480      	push	{r7}
 80015da:	b085      	sub	sp, #20
 80015dc:	af00      	add	r7, sp, #0
 80015de:	6078      	str	r0, [r7, #4]
 80015e0:	687b      	ldr	r3, [r7, #4]
 80015e2:	681b      	ldr	r3, [r3, #0]
 80015e4:	4a0b      	ldr	r2, [pc, #44]	; (8001614 <HAL_TIM_Base_MspInit+0x3c>)
 80015e6:	4293      	cmp	r3, r2
 80015e8:	d10d      	bne.n	8001606 <HAL_TIM_Base_MspInit+0x2e>
 80015ea:	2300      	movs	r3, #0
 80015ec:	60fb      	str	r3, [r7, #12]
 80015ee:	4b0a      	ldr	r3, [pc, #40]	; (8001618 <HAL_TIM_Base_MspInit+0x40>)
 80015f0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80015f2:	4a09      	ldr	r2, [pc, #36]	; (8001618 <HAL_TIM_Base_MspInit+0x40>)
 80015f4:	f043 0301 	orr.w	r3, r3, #1
 80015f8:	6453      	str	r3, [r2, #68]	; 0x44
 80015fa:	4b07      	ldr	r3, [pc, #28]	; (8001618 <HAL_TIM_Base_MspInit+0x40>)
 80015fc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80015fe:	f003 0301 	and.w	r3, r3, #1
 8001602:	60fb      	str	r3, [r7, #12]
 8001604:	68fb      	ldr	r3, [r7, #12]
 8001606:	bf00      	nop
 8001608:	3714      	adds	r7, #20
 800160a:	46bd      	mov	sp, r7
 800160c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001610:	4770      	bx	lr
 8001612:	bf00      	nop
 8001614:	40010000 	.word	0x40010000
 8001618:	40023800 	.word	0x40023800

0800161c <HAL_UART_MspInit>:
 800161c:	b580      	push	{r7, lr}
 800161e:	b08a      	sub	sp, #40	; 0x28
 8001620:	af00      	add	r7, sp, #0
 8001622:	6078      	str	r0, [r7, #4]
 8001624:	f107 0314 	add.w	r3, r7, #20
 8001628:	2200      	movs	r2, #0
 800162a:	601a      	str	r2, [r3, #0]
 800162c:	605a      	str	r2, [r3, #4]
 800162e:	609a      	str	r2, [r3, #8]
 8001630:	60da      	str	r2, [r3, #12]
 8001632:	611a      	str	r2, [r3, #16]
 8001634:	687b      	ldr	r3, [r7, #4]
 8001636:	681b      	ldr	r3, [r3, #0]
 8001638:	4a19      	ldr	r2, [pc, #100]	; (80016a0 <HAL_UART_MspInit+0x84>)
 800163a:	4293      	cmp	r3, r2
 800163c:	d12b      	bne.n	8001696 <HAL_UART_MspInit+0x7a>
 800163e:	2300      	movs	r3, #0
 8001640:	613b      	str	r3, [r7, #16]
 8001642:	4b18      	ldr	r3, [pc, #96]	; (80016a4 <HAL_UART_MspInit+0x88>)
 8001644:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001646:	4a17      	ldr	r2, [pc, #92]	; (80016a4 <HAL_UART_MspInit+0x88>)
 8001648:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800164c:	6413      	str	r3, [r2, #64]	; 0x40
 800164e:	4b15      	ldr	r3, [pc, #84]	; (80016a4 <HAL_UART_MspInit+0x88>)
 8001650:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001652:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001656:	613b      	str	r3, [r7, #16]
 8001658:	693b      	ldr	r3, [r7, #16]
 800165a:	2300      	movs	r3, #0
 800165c:	60fb      	str	r3, [r7, #12]
 800165e:	4b11      	ldr	r3, [pc, #68]	; (80016a4 <HAL_UART_MspInit+0x88>)
 8001660:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001662:	4a10      	ldr	r2, [pc, #64]	; (80016a4 <HAL_UART_MspInit+0x88>)
 8001664:	f043 0301 	orr.w	r3, r3, #1
 8001668:	6313      	str	r3, [r2, #48]	; 0x30
 800166a:	4b0e      	ldr	r3, [pc, #56]	; (80016a4 <HAL_UART_MspInit+0x88>)
 800166c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800166e:	f003 0301 	and.w	r3, r3, #1
 8001672:	60fb      	str	r3, [r7, #12]
 8001674:	68fb      	ldr	r3, [r7, #12]
 8001676:	230c      	movs	r3, #12
 8001678:	617b      	str	r3, [r7, #20]
 800167a:	2302      	movs	r3, #2
 800167c:	61bb      	str	r3, [r7, #24]
 800167e:	2300      	movs	r3, #0
 8001680:	61fb      	str	r3, [r7, #28]
 8001682:	2303      	movs	r3, #3
 8001684:	623b      	str	r3, [r7, #32]
 8001686:	2307      	movs	r3, #7
 8001688:	627b      	str	r3, [r7, #36]	; 0x24
 800168a:	f107 0314 	add.w	r3, r7, #20
 800168e:	4619      	mov	r1, r3
 8001690:	4805      	ldr	r0, [pc, #20]	; (80016a8 <HAL_UART_MspInit+0x8c>)
 8001692:	f000 ffa9 	bl	80025e8 <HAL_GPIO_Init>
 8001696:	bf00      	nop
 8001698:	3728      	adds	r7, #40	; 0x28
 800169a:	46bd      	mov	sp, r7
 800169c:	bd80      	pop	{r7, pc}
 800169e:	bf00      	nop
 80016a0:	40004400 	.word	0x40004400
 80016a4:	40023800 	.word	0x40023800
 80016a8:	40020000 	.word	0x40020000

080016ac <NMI_Handler>:
 80016ac:	b480      	push	{r7}
 80016ae:	af00      	add	r7, sp, #0
 80016b0:	e7fe      	b.n	80016b0 <NMI_Handler+0x4>

080016b2 <HardFault_Handler>:
 80016b2:	b480      	push	{r7}
 80016b4:	af00      	add	r7, sp, #0
 80016b6:	e7fe      	b.n	80016b6 <HardFault_Handler+0x4>

080016b8 <MemManage_Handler>:
 80016b8:	b480      	push	{r7}
 80016ba:	af00      	add	r7, sp, #0
 80016bc:	e7fe      	b.n	80016bc <MemManage_Handler+0x4>

080016be <BusFault_Handler>:
 80016be:	b480      	push	{r7}
 80016c0:	af00      	add	r7, sp, #0
 80016c2:	e7fe      	b.n	80016c2 <BusFault_Handler+0x4>

080016c4 <UsageFault_Handler>:
 80016c4:	b480      	push	{r7}
 80016c6:	af00      	add	r7, sp, #0
 80016c8:	e7fe      	b.n	80016c8 <UsageFault_Handler+0x4>

080016ca <SVC_Handler>:
 80016ca:	b480      	push	{r7}
 80016cc:	af00      	add	r7, sp, #0
 80016ce:	bf00      	nop
 80016d0:	46bd      	mov	sp, r7
 80016d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016d6:	4770      	bx	lr

080016d8 <DebugMon_Handler>:
 80016d8:	b480      	push	{r7}
 80016da:	af00      	add	r7, sp, #0
 80016dc:	bf00      	nop
 80016de:	46bd      	mov	sp, r7
 80016e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016e4:	4770      	bx	lr

080016e6 <PendSV_Handler>:
 80016e6:	b480      	push	{r7}
 80016e8:	af00      	add	r7, sp, #0
 80016ea:	bf00      	nop
 80016ec:	46bd      	mov	sp, r7
 80016ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016f2:	4770      	bx	lr

080016f4 <SysTick_Handler>:
 80016f4:	b580      	push	{r7, lr}
 80016f6:	af00      	add	r7, sp, #0
 80016f8:	f000 fd8e 	bl	8002218 <HAL_IncTick>
 80016fc:	bf00      	nop
 80016fe:	bd80      	pop	{r7, pc}

08001700 <USART2_IRQHandler>:
 8001700:	b580      	push	{r7, lr}
 8001702:	af00      	add	r7, sp, #0
 8001704:	4802      	ldr	r0, [pc, #8]	; (8001710 <USART2_IRQHandler+0x10>)
 8001706:	f002 fd73 	bl	80041f0 <HAL_UART_IRQHandler>
 800170a:	bf00      	nop
 800170c:	bd80      	pop	{r7, pc}
 800170e:	bf00      	nop
 8001710:	2000029c 	.word	0x2000029c

08001714 <MFRC522_Compare>:
uint8_t CardID_Print[50] = {'\0'};
uint8_t buffer_Detection[50] = {'\0'};


  MFRC522_Status_t MFRC522_Compare(uint8_t* CardID, uint8_t* CompareID)
  {
 8001714:	b480      	push	{r7}
 8001716:	b085      	sub	sp, #20
 8001718:	af00      	add	r7, sp, #0
 800171a:	6078      	str	r0, [r7, #4]
 800171c:	6039      	str	r1, [r7, #0]
  	uint8_t i;

  	for (i = 0; i < 4; i++)
 800171e:	2300      	movs	r3, #0
 8001720:	73fb      	strb	r3, [r7, #15]
 8001722:	e00e      	b.n	8001742 <MFRC522_Compare+0x2e>
  		if (CardID[i] != CompareID[i])
 8001724:	7bfb      	ldrb	r3, [r7, #15]
 8001726:	687a      	ldr	r2, [r7, #4]
 8001728:	4413      	add	r3, r2
 800172a:	781a      	ldrb	r2, [r3, #0]
 800172c:	7bfb      	ldrb	r3, [r7, #15]
 800172e:	6839      	ldr	r1, [r7, #0]
 8001730:	440b      	add	r3, r1
 8001732:	781b      	ldrb	r3, [r3, #0]
 8001734:	429a      	cmp	r2, r3
 8001736:	d001      	beq.n	800173c <MFRC522_Compare+0x28>
  			return MI_ERR;
 8001738:	2302      	movs	r3, #2
 800173a:	e006      	b.n	800174a <MFRC522_Compare+0x36>
  	for (i = 0; i < 4; i++)
 800173c:	7bfb      	ldrb	r3, [r7, #15]
 800173e:	3301      	adds	r3, #1
 8001740:	73fb      	strb	r3, [r7, #15]
 8001742:	7bfb      	ldrb	r3, [r7, #15]
 8001744:	2b03      	cmp	r3, #3
 8001746:	d9ed      	bls.n	8001724 <MFRC522_Compare+0x10>

  	return MI_OK;
 8001748:	2300      	movs	r3, #0
  }
 800174a:	4618      	mov	r0, r3
 800174c:	3714      	adds	r7, #20
 800174e:	46bd      	mov	sp, r7
 8001750:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001754:	4770      	bx	lr
	...

08001758 <MFRC522_WriteRegister>:

  void MFRC522_WriteRegister(uint8_t addr, uint8_t val)
  {
 8001758:	b580      	push	{r7, lr}
 800175a:	b084      	sub	sp, #16
 800175c:	af00      	add	r7, sp, #0
 800175e:	4603      	mov	r3, r0
 8001760:	460a      	mov	r2, r1
 8001762:	71fb      	strb	r3, [r7, #7]
 8001764:	4613      	mov	r3, r2
 8001766:	71bb      	strb	r3, [r7, #6]
      uint8_t data[2];

      data[0] = (addr << 1) & 0x7E;  // Set address and clear write bit
 8001768:	79fb      	ldrb	r3, [r7, #7]
 800176a:	005b      	lsls	r3, r3, #1
 800176c:	b2db      	uxtb	r3, r3
 800176e:	f003 037e 	and.w	r3, r3, #126	; 0x7e
 8001772:	b2db      	uxtb	r3, r3
 8001774:	733b      	strb	r3, [r7, #12]
      data[1] = val;
 8001776:	79bb      	ldrb	r3, [r7, #6]
 8001778:	737b      	strb	r3, [r7, #13]

      HAL_GPIO_WritePin(MFRC522_CS_PORT, MFRC522_CS_PIN, GPIO_PIN_RESET);
 800177a:	2200      	movs	r2, #0
 800177c:	2110      	movs	r1, #16
 800177e:	480a      	ldr	r0, [pc, #40]	; (80017a8 <MFRC522_WriteRegister+0x50>)
 8001780:	f001 f8ce 	bl	8002920 <HAL_GPIO_WritePin>
      HAL_SPI_Transmit(&hspi1, data, 2, HAL_MAX_DELAY);
 8001784:	f107 010c 	add.w	r1, r7, #12
 8001788:	f04f 33ff 	mov.w	r3, #4294967295
 800178c:	2202      	movs	r2, #2
 800178e:	4807      	ldr	r0, [pc, #28]	; (80017ac <MFRC522_WriteRegister+0x54>)
 8001790:	f001 fe01 	bl	8003396 <HAL_SPI_Transmit>
      HAL_GPIO_WritePin(MFRC522_CS_PORT, MFRC522_CS_PIN, GPIO_PIN_SET);
 8001794:	2201      	movs	r2, #1
 8001796:	2110      	movs	r1, #16
 8001798:	4803      	ldr	r0, [pc, #12]	; (80017a8 <MFRC522_WriteRegister+0x50>)
 800179a:	f001 f8c1 	bl	8002920 <HAL_GPIO_WritePin>
  }
 800179e:	bf00      	nop
 80017a0:	3710      	adds	r7, #16
 80017a2:	46bd      	mov	sp, r7
 80017a4:	bd80      	pop	{r7, pc}
 80017a6:	bf00      	nop
 80017a8:	40020000 	.word	0x40020000
 80017ac:	200001fc 	.word	0x200001fc

080017b0 <MFRC522_ReadRegister>:

  uint8_t MFRC522_ReadRegister(uint8_t reg)
  {
 80017b0:	b580      	push	{r7, lr}
 80017b2:	b086      	sub	sp, #24
 80017b4:	af02      	add	r7, sp, #8
 80017b6:	4603      	mov	r3, r0
 80017b8:	71fb      	strb	r3, [r7, #7]
      // Create the command byte by setting the MSB to 0 for a read operation
      uint8_t command = ((reg << 1) & 0x7E) | 0x80;
 80017ba:	79fb      	ldrb	r3, [r7, #7]
 80017bc:	005b      	lsls	r3, r3, #1
 80017be:	b25b      	sxtb	r3, r3
 80017c0:	f003 037e 	and.w	r3, r3, #126	; 0x7e
 80017c4:	b25b      	sxtb	r3, r3
 80017c6:	f063 037f 	orn	r3, r3, #127	; 0x7f
 80017ca:	b25b      	sxtb	r3, r3
 80017cc:	73fb      	strb	r3, [r7, #15]
      uint8_t buf[2] = {command, 0};
 80017ce:	7bfb      	ldrb	r3, [r7, #15]
 80017d0:	733b      	strb	r3, [r7, #12]
 80017d2:	2300      	movs	r3, #0
 80017d4:	737b      	strb	r3, [r7, #13]

      // Transmit the command byte to read the register value
      HAL_GPIO_WritePin(MFRC522_CS_PORT, MFRC522_CS_PIN, GPIO_PIN_RESET);
 80017d6:	2200      	movs	r2, #0
 80017d8:	2110      	movs	r1, #16
 80017da:	480c      	ldr	r0, [pc, #48]	; (800180c <MFRC522_ReadRegister+0x5c>)
 80017dc:	f001 f8a0 	bl	8002920 <HAL_GPIO_WritePin>
      HAL_SPI_TransmitReceive(&hspi1, buf, buf, 2, HAL_MAX_DELAY);
 80017e0:	f107 020c 	add.w	r2, r7, #12
 80017e4:	f107 010c 	add.w	r1, r7, #12
 80017e8:	f04f 33ff 	mov.w	r3, #4294967295
 80017ec:	9300      	str	r3, [sp, #0]
 80017ee:	2302      	movs	r3, #2
 80017f0:	4807      	ldr	r0, [pc, #28]	; (8001810 <MFRC522_ReadRegister+0x60>)
 80017f2:	f001 ff0c 	bl	800360e <HAL_SPI_TransmitReceive>
      HAL_GPIO_WritePin(MFRC522_CS_PORT, MFRC522_CS_PIN, GPIO_PIN_SET);
 80017f6:	2201      	movs	r2, #1
 80017f8:	2110      	movs	r1, #16
 80017fa:	4804      	ldr	r0, [pc, #16]	; (800180c <MFRC522_ReadRegister+0x5c>)
 80017fc:	f001 f890 	bl	8002920 <HAL_GPIO_WritePin>

      return buf[1];
 8001800:	7b7b      	ldrb	r3, [r7, #13]
  }
 8001802:	4618      	mov	r0, r3
 8001804:	3710      	adds	r7, #16
 8001806:	46bd      	mov	sp, r7
 8001808:	bd80      	pop	{r7, pc}
 800180a:	bf00      	nop
 800180c:	40020000 	.word	0x40020000
 8001810:	200001fc 	.word	0x200001fc

08001814 <MFRC522_SetBitMask>:

  void MFRC522_SetBitMask(uint8_t reg, uint8_t mask)
  {
 8001814:	b580      	push	{r7, lr}
 8001816:	b082      	sub	sp, #8
 8001818:	af00      	add	r7, sp, #0
 800181a:	4603      	mov	r3, r0
 800181c:	460a      	mov	r2, r1
 800181e:	71fb      	strb	r3, [r7, #7]
 8001820:	4613      	mov	r3, r2
 8001822:	71bb      	strb	r3, [r7, #6]
  	MFRC522_WriteRegister(reg, MFRC522_ReadRegister(reg) | mask);
 8001824:	79fb      	ldrb	r3, [r7, #7]
 8001826:	4618      	mov	r0, r3
 8001828:	f7ff ffc2 	bl	80017b0 <MFRC522_ReadRegister>
 800182c:	4603      	mov	r3, r0
 800182e:	461a      	mov	r2, r3
 8001830:	79bb      	ldrb	r3, [r7, #6]
 8001832:	4313      	orrs	r3, r2
 8001834:	b2da      	uxtb	r2, r3
 8001836:	79fb      	ldrb	r3, [r7, #7]
 8001838:	4611      	mov	r1, r2
 800183a:	4618      	mov	r0, r3
 800183c:	f7ff ff8c 	bl	8001758 <MFRC522_WriteRegister>
  }
 8001840:	bf00      	nop
 8001842:	3708      	adds	r7, #8
 8001844:	46bd      	mov	sp, r7
 8001846:	bd80      	pop	{r7, pc}

08001848 <MFRC522_ClearBitMask>:

  void MFRC522_ClearBitMask(uint8_t reg, uint8_t mask)
  {
 8001848:	b580      	push	{r7, lr}
 800184a:	b082      	sub	sp, #8
 800184c:	af00      	add	r7, sp, #0
 800184e:	4603      	mov	r3, r0
 8001850:	460a      	mov	r2, r1
 8001852:	71fb      	strb	r3, [r7, #7]
 8001854:	4613      	mov	r3, r2
 8001856:	71bb      	strb	r3, [r7, #6]
  	MFRC522_WriteRegister(reg, MFRC522_ReadRegister(reg) & (~mask));
 8001858:	79fb      	ldrb	r3, [r7, #7]
 800185a:	4618      	mov	r0, r3
 800185c:	f7ff ffa8 	bl	80017b0 <MFRC522_ReadRegister>
 8001860:	4603      	mov	r3, r0
 8001862:	b25a      	sxtb	r2, r3
 8001864:	f997 3006 	ldrsb.w	r3, [r7, #6]
 8001868:	43db      	mvns	r3, r3
 800186a:	b25b      	sxtb	r3, r3
 800186c:	4013      	ands	r3, r2
 800186e:	b25b      	sxtb	r3, r3
 8001870:	b2da      	uxtb	r2, r3
 8001872:	79fb      	ldrb	r3, [r7, #7]
 8001874:	4611      	mov	r1, r2
 8001876:	4618      	mov	r0, r3
 8001878:	f7ff ff6e 	bl	8001758 <MFRC522_WriteRegister>
  }
 800187c:	bf00      	nop
 800187e:	3708      	adds	r7, #8
 8001880:	46bd      	mov	sp, r7
 8001882:	bd80      	pop	{r7, pc}

08001884 <MFRC522_AntennaOn>:

  void MFRC522_AntennaOn(void)
  {
 8001884:	b580      	push	{r7, lr}
 8001886:	b082      	sub	sp, #8
 8001888:	af00      	add	r7, sp, #0
  	uint8_t temp;

  	temp = MFRC522_ReadRegister(MFRC522_REG_TX_CONTROL);
 800188a:	2014      	movs	r0, #20
 800188c:	f7ff ff90 	bl	80017b0 <MFRC522_ReadRegister>
 8001890:	4603      	mov	r3, r0
 8001892:	71fb      	strb	r3, [r7, #7]

  	if (!(temp & 0x03))
 8001894:	79fb      	ldrb	r3, [r7, #7]
 8001896:	f003 0303 	and.w	r3, r3, #3
 800189a:	2b00      	cmp	r3, #0
 800189c:	d107      	bne.n	80018ae <MFRC522_AntennaOn+0x2a>
  		MFRC522_WriteRegister(MFRC522_REG_TX_CONTROL, temp | 0x03);
 800189e:	79fb      	ldrb	r3, [r7, #7]
 80018a0:	f043 0303 	orr.w	r3, r3, #3
 80018a4:	b2db      	uxtb	r3, r3
 80018a6:	4619      	mov	r1, r3
 80018a8:	2014      	movs	r0, #20
 80018aa:	f7ff ff55 	bl	8001758 <MFRC522_WriteRegister>

  }
 80018ae:	bf00      	nop
 80018b0:	3708      	adds	r7, #8
 80018b2:	46bd      	mov	sp, r7
 80018b4:	bd80      	pop	{r7, pc}

080018b6 <MFRC522_Reset>:
  {
  	MFRC522_ClearBitMask(MFRC522_REG_TX_CONTROL, 0x03);
  }

  void MFRC522_Reset(void)
  {
 80018b6:	b580      	push	{r7, lr}
 80018b8:	af00      	add	r7, sp, #0
  	MFRC522_WriteRegister(MFRC522_REG_COMMAND, PCD_RESETPHASE);
 80018ba:	210f      	movs	r1, #15
 80018bc:	2001      	movs	r0, #1
 80018be:	f7ff ff4b 	bl	8001758 <MFRC522_WriteRegister>
  }
 80018c2:	bf00      	nop
 80018c4:	bd80      	pop	{r7, pc}

080018c6 <MFRC522_ToCard>:


  MFRC522_Status_t MFRC522_ToCard(uint8_t command, uint8_t* sendData, uint8_t sendLen, uint8_t* backData, uint16_t* backLen)
  {
 80018c6:	b590      	push	{r4, r7, lr}
 80018c8:	b087      	sub	sp, #28
 80018ca:	af00      	add	r7, sp, #0
 80018cc:	60b9      	str	r1, [r7, #8]
 80018ce:	607b      	str	r3, [r7, #4]
 80018d0:	4603      	mov	r3, r0
 80018d2:	73fb      	strb	r3, [r7, #15]
 80018d4:	4613      	mov	r3, r2
 80018d6:	73bb      	strb	r3, [r7, #14]
  	MFRC522_Status_t status = MI_ERR;
 80018d8:	2302      	movs	r3, #2
 80018da:	75fb      	strb	r3, [r7, #23]
  	uint8_t irqEn = 0x00;
 80018dc:	2300      	movs	r3, #0
 80018de:	75bb      	strb	r3, [r7, #22]
  	uint8_t waitIRq = 0x00;
 80018e0:	2300      	movs	r3, #0
 80018e2:	757b      	strb	r3, [r7, #21]
  	uint8_t lastBits;
  	uint8_t n;
  	uint16_t i;

  	switch (command)
 80018e4:	7bfb      	ldrb	r3, [r7, #15]
 80018e6:	2b0c      	cmp	r3, #12
 80018e8:	d006      	beq.n	80018f8 <MFRC522_ToCard+0x32>
 80018ea:	2b0e      	cmp	r3, #14
 80018ec:	d109      	bne.n	8001902 <MFRC522_ToCard+0x3c>
  	{
  		case PCD_AUTHENT:
  		{
  			irqEn = 0x12;
 80018ee:	2312      	movs	r3, #18
 80018f0:	75bb      	strb	r3, [r7, #22]
  			waitIRq = 0x10;
 80018f2:	2310      	movs	r3, #16
 80018f4:	757b      	strb	r3, [r7, #21]
  			break;
 80018f6:	e005      	b.n	8001904 <MFRC522_ToCard+0x3e>
  		}
  		case PCD_TRANSCEIVE:
  		{
  			irqEn = 0x77;
 80018f8:	2377      	movs	r3, #119	; 0x77
 80018fa:	75bb      	strb	r3, [r7, #22]
  			waitIRq = 0x30;
 80018fc:	2330      	movs	r3, #48	; 0x30
 80018fe:	757b      	strb	r3, [r7, #21]
  			break;
 8001900:	e000      	b.n	8001904 <MFRC522_ToCard+0x3e>
  		}
  		default:
  			break;
 8001902:	bf00      	nop
  	}

  	MFRC522_WriteRegister(MFRC522_REG_COMM_IE_N, irqEn | 0x80);
 8001904:	7dbb      	ldrb	r3, [r7, #22]
 8001906:	f063 037f 	orn	r3, r3, #127	; 0x7f
 800190a:	b2db      	uxtb	r3, r3
 800190c:	4619      	mov	r1, r3
 800190e:	2002      	movs	r0, #2
 8001910:	f7ff ff22 	bl	8001758 <MFRC522_WriteRegister>
  	MFRC522_ClearBitMask(MFRC522_REG_COMM_IRQ, 0x80);
 8001914:	2180      	movs	r1, #128	; 0x80
 8001916:	2004      	movs	r0, #4
 8001918:	f7ff ff96 	bl	8001848 <MFRC522_ClearBitMask>
  	MFRC522_SetBitMask(MFRC522_REG_FIFO_LEVEL, 0x80);
 800191c:	2180      	movs	r1, #128	; 0x80
 800191e:	200a      	movs	r0, #10
 8001920:	f7ff ff78 	bl	8001814 <MFRC522_SetBitMask>

  	MFRC522_WriteRegister(MFRC522_REG_COMMAND, PCD_IDLE);
 8001924:	2100      	movs	r1, #0
 8001926:	2001      	movs	r0, #1
 8001928:	f7ff ff16 	bl	8001758 <MFRC522_WriteRegister>

  	//Writing data to the FIFO
  	for (i = 0; i < sendLen; i++)
 800192c:	2300      	movs	r3, #0
 800192e:	827b      	strh	r3, [r7, #18]
 8001930:	e00a      	b.n	8001948 <MFRC522_ToCard+0x82>
  		MFRC522_WriteRegister(MFRC522_REG_FIFO_DATA, sendData[i]);
 8001932:	8a7b      	ldrh	r3, [r7, #18]
 8001934:	68ba      	ldr	r2, [r7, #8]
 8001936:	4413      	add	r3, r2
 8001938:	781b      	ldrb	r3, [r3, #0]
 800193a:	4619      	mov	r1, r3
 800193c:	2009      	movs	r0, #9
 800193e:	f7ff ff0b 	bl	8001758 <MFRC522_WriteRegister>
  	for (i = 0; i < sendLen; i++)
 8001942:	8a7b      	ldrh	r3, [r7, #18]
 8001944:	3301      	adds	r3, #1
 8001946:	827b      	strh	r3, [r7, #18]
 8001948:	7bbb      	ldrb	r3, [r7, #14]
 800194a:	b29b      	uxth	r3, r3
 800194c:	8a7a      	ldrh	r2, [r7, #18]
 800194e:	429a      	cmp	r2, r3
 8001950:	d3ef      	bcc.n	8001932 <MFRC522_ToCard+0x6c>

  	//Execute the command
  	MFRC522_WriteRegister(MFRC522_REG_COMMAND, command);
 8001952:	7bfb      	ldrb	r3, [r7, #15]
 8001954:	4619      	mov	r1, r3
 8001956:	2001      	movs	r0, #1
 8001958:	f7ff fefe 	bl	8001758 <MFRC522_WriteRegister>

  	if (command == PCD_TRANSCEIVE)
 800195c:	7bfb      	ldrb	r3, [r7, #15]
 800195e:	2b0c      	cmp	r3, #12
 8001960:	d103      	bne.n	800196a <MFRC522_ToCard+0xa4>
  		MFRC522_SetBitMask(MFRC522_REG_BIT_FRAMING, 0x80);		//StartSend=1,transmission of data starts
 8001962:	2180      	movs	r1, #128	; 0x80
 8001964:	200d      	movs	r0, #13
 8001966:	f7ff ff55 	bl	8001814 <MFRC522_SetBitMask>

  	//Waiting to receive data to complete
  	i = 2000;	//i according to the clock frequency adjustment, the operator M1 card maximum waiting time 25ms???
 800196a:	f44f 63fa 	mov.w	r3, #2000	; 0x7d0
 800196e:	827b      	strh	r3, [r7, #18]
  	do {
  		//CommIrqReg[7..0]
  		//Set1 TxIRq RxIRq IdleIRq HiAlerIRq LoAlertIRq ErrIRq TimerIRq
  		n = MFRC522_ReadRegister(MFRC522_REG_COMM_IRQ);
 8001970:	2004      	movs	r0, #4
 8001972:	f7ff ff1d 	bl	80017b0 <MFRC522_ReadRegister>
 8001976:	4603      	mov	r3, r0
 8001978:	753b      	strb	r3, [r7, #20]
  		i--;
 800197a:	8a7b      	ldrh	r3, [r7, #18]
 800197c:	3b01      	subs	r3, #1
 800197e:	827b      	strh	r3, [r7, #18]
  	} while ((i!=0) && !(n&0x01) && !(n&waitIRq));
 8001980:	8a7b      	ldrh	r3, [r7, #18]
 8001982:	2b00      	cmp	r3, #0
 8001984:	d00a      	beq.n	800199c <MFRC522_ToCard+0xd6>
 8001986:	7d3b      	ldrb	r3, [r7, #20]
 8001988:	f003 0301 	and.w	r3, r3, #1
 800198c:	2b00      	cmp	r3, #0
 800198e:	d105      	bne.n	800199c <MFRC522_ToCard+0xd6>
 8001990:	7d3a      	ldrb	r2, [r7, #20]
 8001992:	7d7b      	ldrb	r3, [r7, #21]
 8001994:	4013      	ands	r3, r2
 8001996:	b2db      	uxtb	r3, r3
 8001998:	2b00      	cmp	r3, #0
 800199a:	d0e9      	beq.n	8001970 <MFRC522_ToCard+0xaa>

  	MFRC522_ClearBitMask(MFRC522_REG_BIT_FRAMING, 0x80);			//StartSend=0
 800199c:	2180      	movs	r1, #128	; 0x80
 800199e:	200d      	movs	r0, #13
 80019a0:	f7ff ff52 	bl	8001848 <MFRC522_ClearBitMask>

  	if (i != 0)  {
 80019a4:	8a7b      	ldrh	r3, [r7, #18]
 80019a6:	2b00      	cmp	r3, #0
 80019a8:	d057      	beq.n	8001a5a <MFRC522_ToCard+0x194>
  		if (!(MFRC522_ReadRegister(MFRC522_REG_ERROR) & 0x1B)) {
 80019aa:	2006      	movs	r0, #6
 80019ac:	f7ff ff00 	bl	80017b0 <MFRC522_ReadRegister>
 80019b0:	4603      	mov	r3, r0
 80019b2:	f003 031b 	and.w	r3, r3, #27
 80019b6:	2b00      	cmp	r3, #0
 80019b8:	d14d      	bne.n	8001a56 <MFRC522_ToCard+0x190>

  			status = MI_OK;
 80019ba:	2300      	movs	r3, #0
 80019bc:	75fb      	strb	r3, [r7, #23]

  			if (n & irqEn & 0x01)
 80019be:	7d3a      	ldrb	r2, [r7, #20]
 80019c0:	7dbb      	ldrb	r3, [r7, #22]
 80019c2:	4013      	ands	r3, r2
 80019c4:	b2db      	uxtb	r3, r3
 80019c6:	f003 0301 	and.w	r3, r3, #1
 80019ca:	2b00      	cmp	r3, #0
 80019cc:	d001      	beq.n	80019d2 <MFRC522_ToCard+0x10c>
  				status = MI_NOTAGERR;
 80019ce:	2301      	movs	r3, #1
 80019d0:	75fb      	strb	r3, [r7, #23]

  			if (command == PCD_TRANSCEIVE) {
 80019d2:	7bfb      	ldrb	r3, [r7, #15]
 80019d4:	2b0c      	cmp	r3, #12
 80019d6:	d140      	bne.n	8001a5a <MFRC522_ToCard+0x194>
  				n = MFRC522_ReadRegister(MFRC522_REG_FIFO_LEVEL);
 80019d8:	200a      	movs	r0, #10
 80019da:	f7ff fee9 	bl	80017b0 <MFRC522_ReadRegister>
 80019de:	4603      	mov	r3, r0
 80019e0:	753b      	strb	r3, [r7, #20]
  				lastBits = MFRC522_ReadRegister(MFRC522_REG_CONTROL) & 0x07;
 80019e2:	200c      	movs	r0, #12
 80019e4:	f7ff fee4 	bl	80017b0 <MFRC522_ReadRegister>
 80019e8:	4603      	mov	r3, r0
 80019ea:	f003 0307 	and.w	r3, r3, #7
 80019ee:	747b      	strb	r3, [r7, #17]

  				if (lastBits)
 80019f0:	7c7b      	ldrb	r3, [r7, #17]
 80019f2:	2b00      	cmp	r3, #0
 80019f4:	d00b      	beq.n	8001a0e <MFRC522_ToCard+0x148>
  					*backLen = (n - 1) * 8 + lastBits;
 80019f6:	7d3b      	ldrb	r3, [r7, #20]
 80019f8:	3b01      	subs	r3, #1
 80019fa:	b29b      	uxth	r3, r3
 80019fc:	00db      	lsls	r3, r3, #3
 80019fe:	b29a      	uxth	r2, r3
 8001a00:	7c7b      	ldrb	r3, [r7, #17]
 8001a02:	b29b      	uxth	r3, r3
 8001a04:	4413      	add	r3, r2
 8001a06:	b29a      	uxth	r2, r3
 8001a08:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8001a0a:	801a      	strh	r2, [r3, #0]
 8001a0c:	e005      	b.n	8001a1a <MFRC522_ToCard+0x154>
  				else
  					*backLen = n * 8;
 8001a0e:	7d3b      	ldrb	r3, [r7, #20]
 8001a10:	b29b      	uxth	r3, r3
 8001a12:	00db      	lsls	r3, r3, #3
 8001a14:	b29a      	uxth	r2, r3
 8001a16:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8001a18:	801a      	strh	r2, [r3, #0]


  				if (n == 0)
 8001a1a:	7d3b      	ldrb	r3, [r7, #20]
 8001a1c:	2b00      	cmp	r3, #0
 8001a1e:	d101      	bne.n	8001a24 <MFRC522_ToCard+0x15e>
  					n = 1;
 8001a20:	2301      	movs	r3, #1
 8001a22:	753b      	strb	r3, [r7, #20]

  				if (n > MFRC522_MAX_LEN)
 8001a24:	7d3b      	ldrb	r3, [r7, #20]
 8001a26:	2b10      	cmp	r3, #16
 8001a28:	d901      	bls.n	8001a2e <MFRC522_ToCard+0x168>
  					n = MFRC522_MAX_LEN;
 8001a2a:	2310      	movs	r3, #16
 8001a2c:	753b      	strb	r3, [r7, #20]

  				//Reading the received data in FIFO
  				for (i = 0; i < n; i++)
 8001a2e:	2300      	movs	r3, #0
 8001a30:	827b      	strh	r3, [r7, #18]
 8001a32:	e00a      	b.n	8001a4a <MFRC522_ToCard+0x184>
  					backData[i] = MFRC522_ReadRegister(MFRC522_REG_FIFO_DATA);
 8001a34:	8a7b      	ldrh	r3, [r7, #18]
 8001a36:	687a      	ldr	r2, [r7, #4]
 8001a38:	18d4      	adds	r4, r2, r3
 8001a3a:	2009      	movs	r0, #9
 8001a3c:	f7ff feb8 	bl	80017b0 <MFRC522_ReadRegister>
 8001a40:	4603      	mov	r3, r0
 8001a42:	7023      	strb	r3, [r4, #0]
  				for (i = 0; i < n; i++)
 8001a44:	8a7b      	ldrh	r3, [r7, #18]
 8001a46:	3301      	adds	r3, #1
 8001a48:	827b      	strh	r3, [r7, #18]
 8001a4a:	7d3b      	ldrb	r3, [r7, #20]
 8001a4c:	b29b      	uxth	r3, r3
 8001a4e:	8a7a      	ldrh	r2, [r7, #18]
 8001a50:	429a      	cmp	r2, r3
 8001a52:	d3ef      	bcc.n	8001a34 <MFRC522_ToCard+0x16e>
 8001a54:	e001      	b.n	8001a5a <MFRC522_ToCard+0x194>
  			}
  		}
  		else
  			status = MI_ERR;
 8001a56:	2302      	movs	r3, #2
 8001a58:	75fb      	strb	r3, [r7, #23]

  	}

  	return status;
 8001a5a:	7dfb      	ldrb	r3, [r7, #23]
  }
 8001a5c:	4618      	mov	r0, r3
 8001a5e:	371c      	adds	r7, #28
 8001a60:	46bd      	mov	sp, r7
 8001a62:	bd90      	pop	{r4, r7, pc}

08001a64 <MFRC522_Anticoll>:

  MFRC522_Status_t MFRC522_Anticoll(uint8_t *serNum)
  {
 8001a64:	b580      	push	{r7, lr}
 8001a66:	b086      	sub	sp, #24
 8001a68:	af02      	add	r7, sp, #8
 8001a6a:	6078      	str	r0, [r7, #4]
      MFRC522_Status_t status;
      uint8_t i, check = 0x00;
 8001a6c:	2300      	movs	r3, #0
 8001a6e:	737b      	strb	r3, [r7, #13]
      uint8_t size = sizeof(serNum);
 8001a70:	2304      	movs	r3, #4
 8001a72:	733b      	strb	r3, [r7, #12]

      //Clear interrupts
      MFRC522_WriteRegister(MFRC522_REG_BIT_FRAMING, 0x00);
 8001a74:	2100      	movs	r1, #0
 8001a76:	200d      	movs	r0, #13
 8001a78:	f7ff fe6e 	bl	8001758 <MFRC522_WriteRegister>

      //Send Request command
      serNum[0] = PICC_ANTICOLL;
 8001a7c:	687b      	ldr	r3, [r7, #4]
 8001a7e:	2293      	movs	r2, #147	; 0x93
 8001a80:	701a      	strb	r2, [r3, #0]
      serNum[1] = 0x20;
 8001a82:	687b      	ldr	r3, [r7, #4]
 8001a84:	3301      	adds	r3, #1
 8001a86:	2220      	movs	r2, #32
 8001a88:	701a      	strb	r2, [r3, #0]
      status = MFRC522_ToCard(PCD_TRANSCEIVE, serNum, 2, serNum, &size);
 8001a8a:	f107 030c 	add.w	r3, r7, #12
 8001a8e:	9300      	str	r3, [sp, #0]
 8001a90:	687b      	ldr	r3, [r7, #4]
 8001a92:	2202      	movs	r2, #2
 8001a94:	6879      	ldr	r1, [r7, #4]
 8001a96:	200c      	movs	r0, #12
 8001a98:	f7ff ff15 	bl	80018c6 <MFRC522_ToCard>
 8001a9c:	4603      	mov	r3, r0
 8001a9e:	73fb      	strb	r3, [r7, #15]

      //If status is OK
      if (status == MI_OK) {
 8001aa0:	7bfb      	ldrb	r3, [r7, #15]
 8001aa2:	2b00      	cmp	r3, #0
 8001aa4:	d118      	bne.n	8001ad8 <MFRC522_Anticoll+0x74>
          //Check received data with check byte
          for (i = 0; i < 4; i++)
 8001aa6:	2300      	movs	r3, #0
 8001aa8:	73bb      	strb	r3, [r7, #14]
 8001aaa:	e009      	b.n	8001ac0 <MFRC522_Anticoll+0x5c>
              check ^= serNum[i];
 8001aac:	7bbb      	ldrb	r3, [r7, #14]
 8001aae:	687a      	ldr	r2, [r7, #4]
 8001ab0:	4413      	add	r3, r2
 8001ab2:	781a      	ldrb	r2, [r3, #0]
 8001ab4:	7b7b      	ldrb	r3, [r7, #13]
 8001ab6:	4053      	eors	r3, r2
 8001ab8:	737b      	strb	r3, [r7, #13]
          for (i = 0; i < 4; i++)
 8001aba:	7bbb      	ldrb	r3, [r7, #14]
 8001abc:	3301      	adds	r3, #1
 8001abe:	73bb      	strb	r3, [r7, #14]
 8001ac0:	7bbb      	ldrb	r3, [r7, #14]
 8001ac2:	2b03      	cmp	r3, #3
 8001ac4:	d9f2      	bls.n	8001aac <MFRC522_Anticoll+0x48>

          if (check != serNum[i])
 8001ac6:	7bbb      	ldrb	r3, [r7, #14]
 8001ac8:	687a      	ldr	r2, [r7, #4]
 8001aca:	4413      	add	r3, r2
 8001acc:	781b      	ldrb	r3, [r3, #0]
 8001ace:	7b7a      	ldrb	r2, [r7, #13]
 8001ad0:	429a      	cmp	r2, r3
 8001ad2:	d001      	beq.n	8001ad8 <MFRC522_Anticoll+0x74>
              status = MI_ERR;
 8001ad4:	2302      	movs	r3, #2
 8001ad6:	73fb      	strb	r3, [r7, #15]

      }

      return status;
 8001ad8:	7bfb      	ldrb	r3, [r7, #15]
  }
 8001ada:	4618      	mov	r0, r3
 8001adc:	3710      	adds	r7, #16
 8001ade:	46bd      	mov	sp, r7
 8001ae0:	bd80      	pop	{r7, pc}

08001ae2 <MFRC522_CalculateCRC>:

  void MFRC522_CalculateCRC(uint8_t *data, uint8_t length, uint8_t *result)
  {
 8001ae2:	b590      	push	{r4, r7, lr}
 8001ae4:	b087      	sub	sp, #28
 8001ae6:	af00      	add	r7, sp, #0
 8001ae8:	60f8      	str	r0, [r7, #12]
 8001aea:	460b      	mov	r3, r1
 8001aec:	607a      	str	r2, [r7, #4]
 8001aee:	72fb      	strb	r3, [r7, #11]
	  uint8_t i, n;

	  	MFRC522_ClearBitMask(MFRC522_REG_DIV_IRQ, 0x04);			//CRCIrq = 0
 8001af0:	2104      	movs	r1, #4
 8001af2:	2005      	movs	r0, #5
 8001af4:	f7ff fea8 	bl	8001848 <MFRC522_ClearBitMask>
	  	MFRC522_SetBitMask(MFRC522_REG_FIFO_LEVEL, 0x80);			//Clear the FIFO pointer
 8001af8:	2180      	movs	r1, #128	; 0x80
 8001afa:	200a      	movs	r0, #10
 8001afc:	f7ff fe8a 	bl	8001814 <MFRC522_SetBitMask>
	  	//Write_MFRC522(CommandReg, PCD_IDLE);

	  	//Writing data to the FIFO
	  	for (i = 0; i < length; i++)
 8001b00:	2300      	movs	r3, #0
 8001b02:	75fb      	strb	r3, [r7, #23]
 8001b04:	e00a      	b.n	8001b1c <MFRC522_CalculateCRC+0x3a>
	  		MFRC522_WriteRegister(MFRC522_REG_FIFO_DATA, *(data+i));
 8001b06:	7dfb      	ldrb	r3, [r7, #23]
 8001b08:	68fa      	ldr	r2, [r7, #12]
 8001b0a:	4413      	add	r3, r2
 8001b0c:	781b      	ldrb	r3, [r3, #0]
 8001b0e:	4619      	mov	r1, r3
 8001b10:	2009      	movs	r0, #9
 8001b12:	f7ff fe21 	bl	8001758 <MFRC522_WriteRegister>
	  	for (i = 0; i < length; i++)
 8001b16:	7dfb      	ldrb	r3, [r7, #23]
 8001b18:	3301      	adds	r3, #1
 8001b1a:	75fb      	strb	r3, [r7, #23]
 8001b1c:	7dfa      	ldrb	r2, [r7, #23]
 8001b1e:	7afb      	ldrb	r3, [r7, #11]
 8001b20:	429a      	cmp	r2, r3
 8001b22:	d3f0      	bcc.n	8001b06 <MFRC522_CalculateCRC+0x24>

	  	MFRC522_WriteRegister(MFRC522_REG_COMMAND, PCD_CALCCRC);
 8001b24:	2103      	movs	r1, #3
 8001b26:	2001      	movs	r0, #1
 8001b28:	f7ff fe16 	bl	8001758 <MFRC522_WriteRegister>

	  	//Wait CRC calculation is complete
	  	i = 0xFF;
 8001b2c:	23ff      	movs	r3, #255	; 0xff
 8001b2e:	75fb      	strb	r3, [r7, #23]

	  	do
	  	{
	  		n = MFRC522_ReadRegister(MFRC522_REG_DIV_IRQ);
 8001b30:	2005      	movs	r0, #5
 8001b32:	f7ff fe3d 	bl	80017b0 <MFRC522_ReadRegister>
 8001b36:	4603      	mov	r3, r0
 8001b38:	75bb      	strb	r3, [r7, #22]
	  		i--;
 8001b3a:	7dfb      	ldrb	r3, [r7, #23]
 8001b3c:	3b01      	subs	r3, #1
 8001b3e:	75fb      	strb	r3, [r7, #23]
	  	} while ((i!=0) && !(n&0x04));			//CRCIrq = 1
 8001b40:	7dfb      	ldrb	r3, [r7, #23]
 8001b42:	2b00      	cmp	r3, #0
 8001b44:	d004      	beq.n	8001b50 <MFRC522_CalculateCRC+0x6e>
 8001b46:	7dbb      	ldrb	r3, [r7, #22]
 8001b48:	f003 0304 	and.w	r3, r3, #4
 8001b4c:	2b00      	cmp	r3, #0
 8001b4e:	d0ef      	beq.n	8001b30 <MFRC522_CalculateCRC+0x4e>

	  	//Read CRC calculation result
	  	result[0] = MFRC522_ReadRegister(MFRC522_REG_CRC_RESULT_L);
 8001b50:	2022      	movs	r0, #34	; 0x22
 8001b52:	f7ff fe2d 	bl	80017b0 <MFRC522_ReadRegister>
 8001b56:	4603      	mov	r3, r0
 8001b58:	461a      	mov	r2, r3
 8001b5a:	687b      	ldr	r3, [r7, #4]
 8001b5c:	701a      	strb	r2, [r3, #0]
	  	result[1] = MFRC522_ReadRegister(MFRC522_REG_CRC_RESULT_M);
 8001b5e:	687b      	ldr	r3, [r7, #4]
 8001b60:	1c5c      	adds	r4, r3, #1
 8001b62:	2021      	movs	r0, #33	; 0x21
 8001b64:	f7ff fe24 	bl	80017b0 <MFRC522_ReadRegister>
 8001b68:	4603      	mov	r3, r0
 8001b6a:	7023      	strb	r3, [r4, #0]
  }
 8001b6c:	bf00      	nop
 8001b6e:	371c      	adds	r7, #28
 8001b70:	46bd      	mov	sp, r7
 8001b72:	bd90      	pop	{r4, r7, pc}

08001b74 <MFRC522_SelectTag>:

  MFRC522_Status_t MFRC522_SelectTag(uint8_t *uid)
  {
 8001b74:	b580      	push	{r7, lr}
 8001b76:	b088      	sub	sp, #32
 8001b78:	af02      	add	r7, sp, #8
 8001b7a:	6078      	str	r0, [r7, #4]
      uint8_t status, i;
      uint8_t buffer[9];
      uint8_t size;

      buffer[0] = PICC_SELECTTAG;
 8001b7c:	2393      	movs	r3, #147	; 0x93
 8001b7e:	733b      	strb	r3, [r7, #12]
      buffer[1] = 0x70;
 8001b80:	2370      	movs	r3, #112	; 0x70
 8001b82:	737b      	strb	r3, [r7, #13]

      for (i = 0; i < 5; i++)
 8001b84:	2300      	movs	r3, #0
 8001b86:	75fb      	strb	r3, [r7, #23]
 8001b88:	e00c      	b.n	8001ba4 <MFRC522_SelectTag+0x30>
          buffer[i+2] = *(uid+i);
 8001b8a:	7dfb      	ldrb	r3, [r7, #23]
 8001b8c:	687a      	ldr	r2, [r7, #4]
 8001b8e:	441a      	add	r2, r3
 8001b90:	7dfb      	ldrb	r3, [r7, #23]
 8001b92:	3302      	adds	r3, #2
 8001b94:	7812      	ldrb	r2, [r2, #0]
 8001b96:	3318      	adds	r3, #24
 8001b98:	443b      	add	r3, r7
 8001b9a:	f803 2c0c 	strb.w	r2, [r3, #-12]
      for (i = 0; i < 5; i++)
 8001b9e:	7dfb      	ldrb	r3, [r7, #23]
 8001ba0:	3301      	adds	r3, #1
 8001ba2:	75fb      	strb	r3, [r7, #23]
 8001ba4:	7dfb      	ldrb	r3, [r7, #23]
 8001ba6:	2b04      	cmp	r3, #4
 8001ba8:	d9ef      	bls.n	8001b8a <MFRC522_SelectTag+0x16>

      MFRC522_CalculateCRC(buffer, 7, &buffer[7]);
 8001baa:	f107 030c 	add.w	r3, r7, #12
 8001bae:	1dda      	adds	r2, r3, #7
 8001bb0:	f107 030c 	add.w	r3, r7, #12
 8001bb4:	2107      	movs	r1, #7
 8001bb6:	4618      	mov	r0, r3
 8001bb8:	f7ff ff93 	bl	8001ae2 <MFRC522_CalculateCRC>

      status = MFRC522_ToCard(PCD_TRANSCEIVE, buffer, 9, buffer, &size);
 8001bbc:	f107 020c 	add.w	r2, r7, #12
 8001bc0:	f107 010c 	add.w	r1, r7, #12
 8001bc4:	f107 030b 	add.w	r3, r7, #11
 8001bc8:	9300      	str	r3, [sp, #0]
 8001bca:	4613      	mov	r3, r2
 8001bcc:	2209      	movs	r2, #9
 8001bce:	200c      	movs	r0, #12
 8001bd0:	f7ff fe79 	bl	80018c6 <MFRC522_ToCard>
 8001bd4:	4603      	mov	r3, r0
 8001bd6:	75bb      	strb	r3, [r7, #22]

      if ((status == MI_OK) && (size == 0x18))
 8001bd8:	7dbb      	ldrb	r3, [r7, #22]
 8001bda:	2b00      	cmp	r3, #0
 8001bdc:	d104      	bne.n	8001be8 <MFRC522_SelectTag+0x74>
 8001bde:	7afb      	ldrb	r3, [r7, #11]
 8001be0:	2b18      	cmp	r3, #24
 8001be2:	d101      	bne.n	8001be8 <MFRC522_SelectTag+0x74>
          return MI_OK;
 8001be4:	2300      	movs	r3, #0
 8001be6:	e000      	b.n	8001bea <MFRC522_SelectTag+0x76>
      else
          return MI_ERR;
 8001be8:	2302      	movs	r3, #2
  }
 8001bea:	4618      	mov	r0, r3
 8001bec:	3718      	adds	r7, #24
 8001bee:	46bd      	mov	sp, r7
 8001bf0:	bd80      	pop	{r7, pc}

08001bf2 <MFRC522_Auth>:

  MFRC522_Status_t MFRC522_Auth(uint8_t authMode, uint8_t blockAddr, uint8_t *sectorKey, uint8_t *uid)
  {
 8001bf2:	b580      	push	{r7, lr}
 8001bf4:	b08a      	sub	sp, #40	; 0x28
 8001bf6:	af02      	add	r7, sp, #8
 8001bf8:	60ba      	str	r2, [r7, #8]
 8001bfa:	607b      	str	r3, [r7, #4]
 8001bfc:	4603      	mov	r3, r0
 8001bfe:	73fb      	strb	r3, [r7, #15]
 8001c00:	460b      	mov	r3, r1
 8001c02:	73bb      	strb	r3, [r7, #14]
	  uint16_t recvBits;
	  uint8_t i;
	  uint8_t buff[12];

      //Verify the command block address + sector + password + card serial number
      buff[0] = authMode;
 8001c04:	7bfb      	ldrb	r3, [r7, #15]
 8001c06:	743b      	strb	r3, [r7, #16]
      buff[1] = blockAddr;
 8001c08:	7bbb      	ldrb	r3, [r7, #14]
 8001c0a:	747b      	strb	r3, [r7, #17]

      for (i = 0; i < 6; i++)
 8001c0c:	2300      	movs	r3, #0
 8001c0e:	77bb      	strb	r3, [r7, #30]
 8001c10:	e00c      	b.n	8001c2c <MFRC522_Auth+0x3a>
      	buff[i+2] = *(sectorKey+i);
 8001c12:	7fbb      	ldrb	r3, [r7, #30]
 8001c14:	68ba      	ldr	r2, [r7, #8]
 8001c16:	441a      	add	r2, r3
 8001c18:	7fbb      	ldrb	r3, [r7, #30]
 8001c1a:	3302      	adds	r3, #2
 8001c1c:	7812      	ldrb	r2, [r2, #0]
 8001c1e:	3320      	adds	r3, #32
 8001c20:	443b      	add	r3, r7
 8001c22:	f803 2c10 	strb.w	r2, [r3, #-16]
      for (i = 0; i < 6; i++)
 8001c26:	7fbb      	ldrb	r3, [r7, #30]
 8001c28:	3301      	adds	r3, #1
 8001c2a:	77bb      	strb	r3, [r7, #30]
 8001c2c:	7fbb      	ldrb	r3, [r7, #30]
 8001c2e:	2b05      	cmp	r3, #5
 8001c30:	d9ef      	bls.n	8001c12 <MFRC522_Auth+0x20>

      for (i = 0; i < 4; i++)
 8001c32:	2300      	movs	r3, #0
 8001c34:	77bb      	strb	r3, [r7, #30]
 8001c36:	e00c      	b.n	8001c52 <MFRC522_Auth+0x60>
      	buff[i+8] = *(uid+i);
 8001c38:	7fbb      	ldrb	r3, [r7, #30]
 8001c3a:	687a      	ldr	r2, [r7, #4]
 8001c3c:	441a      	add	r2, r3
 8001c3e:	7fbb      	ldrb	r3, [r7, #30]
 8001c40:	3308      	adds	r3, #8
 8001c42:	7812      	ldrb	r2, [r2, #0]
 8001c44:	3320      	adds	r3, #32
 8001c46:	443b      	add	r3, r7
 8001c48:	f803 2c10 	strb.w	r2, [r3, #-16]
      for (i = 0; i < 4; i++)
 8001c4c:	7fbb      	ldrb	r3, [r7, #30]
 8001c4e:	3301      	adds	r3, #1
 8001c50:	77bb      	strb	r3, [r7, #30]
 8001c52:	7fbb      	ldrb	r3, [r7, #30]
 8001c54:	2b03      	cmp	r3, #3
 8001c56:	d9ef      	bls.n	8001c38 <MFRC522_Auth+0x46>

      status = MFRC522_ToCard(PCD_AUTHENT, buff, 12, buff, &recvBits);
 8001c58:	f107 0210 	add.w	r2, r7, #16
 8001c5c:	f107 0110 	add.w	r1, r7, #16
 8001c60:	f107 031c 	add.w	r3, r7, #28
 8001c64:	9300      	str	r3, [sp, #0]
 8001c66:	4613      	mov	r3, r2
 8001c68:	220c      	movs	r2, #12
 8001c6a:	200e      	movs	r0, #14
 8001c6c:	f7ff fe2b 	bl	80018c6 <MFRC522_ToCard>
 8001c70:	4603      	mov	r3, r0
 8001c72:	77fb      	strb	r3, [r7, #31]

      if ((status != MI_OK) || (!(MFRC522_ReadRegister(MFRC522_REG_STATUS2) & 0x08)))
 8001c74:	7ffb      	ldrb	r3, [r7, #31]
 8001c76:	2b00      	cmp	r3, #0
 8001c78:	d107      	bne.n	8001c8a <MFRC522_Auth+0x98>
 8001c7a:	2008      	movs	r0, #8
 8001c7c:	f7ff fd98 	bl	80017b0 <MFRC522_ReadRegister>
 8001c80:	4603      	mov	r3, r0
 8001c82:	f003 0308 	and.w	r3, r3, #8
 8001c86:	2b00      	cmp	r3, #0
 8001c88:	d101      	bne.n	8001c8e <MFRC522_Auth+0x9c>
      {
        	status = MI_ERR;
 8001c8a:	2302      	movs	r3, #2
 8001c8c:	77fb      	strb	r3, [r7, #31]
      }


      	return status;
 8001c8e:	7ffb      	ldrb	r3, [r7, #31]
  }
 8001c90:	4618      	mov	r0, r3
 8001c92:	3720      	adds	r7, #32
 8001c94:	46bd      	mov	sp, r7
 8001c96:	bd80      	pop	{r7, pc}

08001c98 <MFRC522_Read>:

  MFRC522_Status_t MFRC522_Read(uint8_t blockAddr, uint8_t *recvData)
  {
 8001c98:	b580      	push	{r7, lr}
 8001c9a:	b086      	sub	sp, #24
 8001c9c:	af02      	add	r7, sp, #8
 8001c9e:	4603      	mov	r3, r0
 8001ca0:	6039      	str	r1, [r7, #0]
 8001ca2:	71fb      	strb	r3, [r7, #7]
	  MFRC522_Status_t status;
	  	uint16_t unLen;

	  	recvData[0] = PICC_READ;
 8001ca4:	683b      	ldr	r3, [r7, #0]
 8001ca6:	2230      	movs	r2, #48	; 0x30
 8001ca8:	701a      	strb	r2, [r3, #0]
	  	recvData[1] = blockAddr;
 8001caa:	683b      	ldr	r3, [r7, #0]
 8001cac:	3301      	adds	r3, #1
 8001cae:	79fa      	ldrb	r2, [r7, #7]
 8001cb0:	701a      	strb	r2, [r3, #0]
	  	MFRC522_CalculateCRC(recvData,2, &recvData[2]);
 8001cb2:	683b      	ldr	r3, [r7, #0]
 8001cb4:	3302      	adds	r3, #2
 8001cb6:	461a      	mov	r2, r3
 8001cb8:	2102      	movs	r1, #2
 8001cba:	6838      	ldr	r0, [r7, #0]
 8001cbc:	f7ff ff11 	bl	8001ae2 <MFRC522_CalculateCRC>
	  	status = MFRC522_ToCard(PCD_TRANSCEIVE, recvData, 4, recvData, &unLen);
 8001cc0:	f107 030c 	add.w	r3, r7, #12
 8001cc4:	9300      	str	r3, [sp, #0]
 8001cc6:	683b      	ldr	r3, [r7, #0]
 8001cc8:	2204      	movs	r2, #4
 8001cca:	6839      	ldr	r1, [r7, #0]
 8001ccc:	200c      	movs	r0, #12
 8001cce:	f7ff fdfa 	bl	80018c6 <MFRC522_ToCard>
 8001cd2:	4603      	mov	r3, r0
 8001cd4:	73fb      	strb	r3, [r7, #15]

	  	if ((status != MI_OK) || (unLen != 0x90))
 8001cd6:	7bfb      	ldrb	r3, [r7, #15]
 8001cd8:	2b00      	cmp	r3, #0
 8001cda:	d102      	bne.n	8001ce2 <MFRC522_Read+0x4a>
 8001cdc:	89bb      	ldrh	r3, [r7, #12]
 8001cde:	2b90      	cmp	r3, #144	; 0x90
 8001ce0:	d001      	beq.n	8001ce6 <MFRC522_Read+0x4e>
	  		status = MI_ERR;
 8001ce2:	2302      	movs	r3, #2
 8001ce4:	73fb      	strb	r3, [r7, #15]

	  	return status;
 8001ce6:	7bfb      	ldrb	r3, [r7, #15]
  }
 8001ce8:	4618      	mov	r0, r3
 8001cea:	3710      	adds	r7, #16
 8001cec:	46bd      	mov	sp, r7
 8001cee:	bd80      	pop	{r7, pc}

08001cf0 <MFRC522_Init>:

  	MFRC522_ToCard(PCD_TRANSCEIVE, buff, 4, buff, &unLen);
  }

  void MFRC522_Init(void)
  {
 8001cf0:	b580      	push	{r7, lr}
 8001cf2:	af00      	add	r7, sp, #0
	  // Set RST pin high to bring MFRC522 out of reset
	  HAL_GPIO_WritePin(MFRC522_RESET_PORT, MFRC522_RESET_PIN, GPIO_PIN_SET);
 8001cf4:	2201      	movs	r2, #1
 8001cf6:	2110      	movs	r1, #16
 8001cf8:	4815      	ldr	r0, [pc, #84]	; (8001d50 <MFRC522_Init+0x60>)
 8001cfa:	f000 fe11 	bl	8002920 <HAL_GPIO_WritePin>
	  // Set CS pin low to enable communication with MFRC522
	  HAL_GPIO_WritePin(MFRC522_CS_PORT, MFRC522_CS_PIN, GPIO_PIN_RESET);
 8001cfe:	2200      	movs	r2, #0
 8001d00:	2110      	movs	r1, #16
 8001d02:	4814      	ldr	r0, [pc, #80]	; (8001d54 <MFRC522_Init+0x64>)
 8001d04:	f000 fe0c 	bl	8002920 <HAL_GPIO_WritePin>

	  MFRC522_Reset();
 8001d08:	f7ff fdd5 	bl	80018b6 <MFRC522_Reset>

	  // Initialize MFRC522
	  MFRC522_WriteRegister(MFRC522_REG_T_MODE, 0x8D);
 8001d0c:	218d      	movs	r1, #141	; 0x8d
 8001d0e:	202a      	movs	r0, #42	; 0x2a
 8001d10:	f7ff fd22 	bl	8001758 <MFRC522_WriteRegister>
	  MFRC522_WriteRegister(MFRC522_REG_T_PRESCALER, 0x3E);
 8001d14:	213e      	movs	r1, #62	; 0x3e
 8001d16:	202b      	movs	r0, #43	; 0x2b
 8001d18:	f7ff fd1e 	bl	8001758 <MFRC522_WriteRegister>
	  MFRC522_WriteRegister(MFRC522_REG_T_RELOAD_L, 30);
 8001d1c:	211e      	movs	r1, #30
 8001d1e:	202d      	movs	r0, #45	; 0x2d
 8001d20:	f7ff fd1a 	bl	8001758 <MFRC522_WriteRegister>
	  MFRC522_WriteRegister(MFRC522_REG_T_RELOAD_H, 0);
 8001d24:	2100      	movs	r1, #0
 8001d26:	202c      	movs	r0, #44	; 0x2c
 8001d28:	f7ff fd16 	bl	8001758 <MFRC522_WriteRegister>
	  MFRC522_WriteRegister(MFRC522_REG_TX_AUTO, 0x40);
 8001d2c:	2140      	movs	r1, #64	; 0x40
 8001d2e:	2015      	movs	r0, #21
 8001d30:	f7ff fd12 	bl	8001758 <MFRC522_WriteRegister>
	  MFRC522_WriteRegister(MFRC522_REG_MODE, 0x3D);
 8001d34:	213d      	movs	r1, #61	; 0x3d
 8001d36:	2011      	movs	r0, #17
 8001d38:	f7ff fd0e 	bl	8001758 <MFRC522_WriteRegister>

	  // Enable antenna
	  MFRC522_AntennaOn();
 8001d3c:	f7ff fda2 	bl	8001884 <MFRC522_AntennaOn>
	  // Set CS pin high to disable MFRC522
	  HAL_GPIO_WritePin(MFRC522_CS_PORT, MFRC522_CS_PIN, GPIO_PIN_SET);
 8001d40:	2201      	movs	r2, #1
 8001d42:	2110      	movs	r1, #16
 8001d44:	4803      	ldr	r0, [pc, #12]	; (8001d54 <MFRC522_Init+0x64>)
 8001d46:	f000 fdeb 	bl	8002920 <HAL_GPIO_WritePin>
    }
 8001d4a:	bf00      	nop
 8001d4c:	bd80      	pop	{r7, pc}
 8001d4e:	bf00      	nop
 8001d50:	40020800 	.word	0x40020800
 8001d54:	40020000 	.word	0x40020000

08001d58 <MFRC522_Request>:

  MFRC522_Status_t MFRC522_Request(uint8_t reqMode, uint8_t* TagType) {
 8001d58:	b580      	push	{r7, lr}
 8001d5a:	b086      	sub	sp, #24
 8001d5c:	af02      	add	r7, sp, #8
 8001d5e:	4603      	mov	r3, r0
 8001d60:	6039      	str	r1, [r7, #0]
 8001d62:	71fb      	strb	r3, [r7, #7]
      MFRC522_Status_t status;
      uint16_t backBits; // The received data bits

      MFRC522_WriteRegister(MFRC522_REG_BIT_FRAMING, 0x07);
 8001d64:	2107      	movs	r1, #7
 8001d66:	200d      	movs	r0, #13
 8001d68:	f7ff fcf6 	bl	8001758 <MFRC522_WriteRegister>

      TagType[0] = reqMode;
 8001d6c:	683b      	ldr	r3, [r7, #0]
 8001d6e:	79fa      	ldrb	r2, [r7, #7]
 8001d70:	701a      	strb	r2, [r3, #0]
      status = MFRC522_ToCard(PCD_TRANSCEIVE, TagType, 1, TagType, &backBits);
 8001d72:	f107 030c 	add.w	r3, r7, #12
 8001d76:	9300      	str	r3, [sp, #0]
 8001d78:	683b      	ldr	r3, [r7, #0]
 8001d7a:	2201      	movs	r2, #1
 8001d7c:	6839      	ldr	r1, [r7, #0]
 8001d7e:	200c      	movs	r0, #12
 8001d80:	f7ff fda1 	bl	80018c6 <MFRC522_ToCard>
 8001d84:	4603      	mov	r3, r0
 8001d86:	73fb      	strb	r3, [r7, #15]

      if (status != MI_OK || backBits != 0x10)
 8001d88:	7bfb      	ldrb	r3, [r7, #15]
 8001d8a:	2b00      	cmp	r3, #0
 8001d8c:	d102      	bne.n	8001d94 <MFRC522_Request+0x3c>
 8001d8e:	89bb      	ldrh	r3, [r7, #12]
 8001d90:	2b10      	cmp	r3, #16
 8001d92:	d001      	beq.n	8001d98 <MFRC522_Request+0x40>
          status = MI_ERR;
 8001d94:	2302      	movs	r3, #2
 8001d96:	73fb      	strb	r3, [r7, #15]

      return status;
 8001d98:	7bfb      	ldrb	r3, [r7, #15]
  }
 8001d9a:	4618      	mov	r0, r3
 8001d9c:	3710      	adds	r7, #16
 8001d9e:	46bd      	mov	sp, r7
 8001da0:	bd80      	pop	{r7, pc}
	...

08001da4 <ReadCardValue>:

  MFRC522_Status_t ReadCardValue(void)
  {
 8001da4:	b580      	push	{r7, lr}
 8001da6:	b08e      	sub	sp, #56	; 0x38
 8001da8:	af02      	add	r7, sp, #8
	  MFRC522_Init();
 8001daa:	f7ff ffa1 	bl	8001cf0 <MFRC522_Init>
      MFRC522_Status_t status = MI_ERR;
 8001dae:	2302      	movs	r3, #2
 8001db0:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
      uint8_t buffer[18] = {0};
 8001db4:	2300      	movs	r3, #0
 8001db6:	617b      	str	r3, [r7, #20]
 8001db8:	f107 0318 	add.w	r3, r7, #24
 8001dbc:	2200      	movs	r2, #0
 8001dbe:	601a      	str	r2, [r3, #0]
 8001dc0:	605a      	str	r2, [r3, #4]
 8001dc2:	609a      	str	r2, [r3, #8]
 8001dc4:	819a      	strh	r2, [r3, #12]
      uint8_t serial[5] = {0};
 8001dc6:	2300      	movs	r3, #0
 8001dc8:	60fb      	str	r3, [r7, #12]
 8001dca:	2300      	movs	r3, #0
 8001dcc:	743b      	strb	r3, [r7, #16]
      uint8_t key[6] = {0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF};
 8001dce:	4a50      	ldr	r2, [pc, #320]	; (8001f10 <ReadCardValue+0x16c>)
 8001dd0:	1d3b      	adds	r3, r7, #4
 8001dd2:	e892 0003 	ldmia.w	r2, {r0, r1}
 8001dd6:	6018      	str	r0, [r3, #0]
 8001dd8:	3304      	adds	r3, #4
 8001dda:	8019      	strh	r1, [r3, #0]
      uint8_t sector = 3;
 8001ddc:	2303      	movs	r3, #3
 8001dde:	f887 302a 	strb.w	r3, [r7, #42]	; 0x2a
      uint8_t block = 0;
 8001de2:	2300      	movs	r3, #0
 8001de4:	f887 3029 	strb.w	r3, [r7, #41]	; 0x29

      // Check for card
      status = MFRC522_Request(PICC_REQIDL, buffer);
 8001de8:	f107 0314 	add.w	r3, r7, #20
 8001dec:	4619      	mov	r1, r3
 8001dee:	2026      	movs	r0, #38	; 0x26
 8001df0:	f7ff ffb2 	bl	8001d58 <MFRC522_Request>
 8001df4:	4603      	mov	r3, r0
 8001df6:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
      if (status != MI_OK)
 8001dfa:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 8001dfe:	2b00      	cmp	r3, #0
 8001e00:	d006      	beq.n	8001e10 <ReadCardValue+0x6c>
      {
    	  sprintf((char*)buffer_Detection,"No card found");
 8001e02:	4944      	ldr	r1, [pc, #272]	; (8001f14 <ReadCardValue+0x170>)
 8001e04:	4844      	ldr	r0, [pc, #272]	; (8001f18 <ReadCardValue+0x174>)
 8001e06:	f003 fd55 	bl	80058b4 <siprintf>
          return status;
 8001e0a:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 8001e0e:	e07b      	b.n	8001f08 <ReadCardValue+0x164>
      }

      // Get card serial number
      status = MFRC522_Anticoll(serial);
 8001e10:	f107 030c 	add.w	r3, r7, #12
 8001e14:	4618      	mov	r0, r3
 8001e16:	f7ff fe25 	bl	8001a64 <MFRC522_Anticoll>
 8001e1a:	4603      	mov	r3, r0
 8001e1c:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
      if (status != MI_OK)
 8001e20:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 8001e24:	2b00      	cmp	r3, #0
 8001e26:	d006      	beq.n	8001e36 <ReadCardValue+0x92>
      {
    	  sprintf((char*)buffer_Detection,"Error reading card serial number\r\n");
 8001e28:	493c      	ldr	r1, [pc, #240]	; (8001f1c <ReadCardValue+0x178>)
 8001e2a:	483b      	ldr	r0, [pc, #236]	; (8001f18 <ReadCardValue+0x174>)
 8001e2c:	f003 fd42 	bl	80058b4 <siprintf>
          return status;
 8001e30:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 8001e34:	e068      	b.n	8001f08 <ReadCardValue+0x164>
      }

      // Select card
      status = MFRC522_SelectTag(serial);
 8001e36:	f107 030c 	add.w	r3, r7, #12
 8001e3a:	4618      	mov	r0, r3
 8001e3c:	f7ff fe9a 	bl	8001b74 <MFRC522_SelectTag>
 8001e40:	4603      	mov	r3, r0
 8001e42:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
      if (status != MI_OK)
 8001e46:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 8001e4a:	2b00      	cmp	r3, #0
 8001e4c:	d006      	beq.n	8001e5c <ReadCardValue+0xb8>
      {
    	  sprintf((char*)buffer_Detection,"Error selecting card\r\n");
 8001e4e:	4934      	ldr	r1, [pc, #208]	; (8001f20 <ReadCardValue+0x17c>)
 8001e50:	4831      	ldr	r0, [pc, #196]	; (8001f18 <ReadCardValue+0x174>)
 8001e52:	f003 fd2f 	bl	80058b4 <siprintf>
          return status;
 8001e56:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 8001e5a:	e055      	b.n	8001f08 <ReadCardValue+0x164>
      }

      // Authenticate with card
      status = MFRC522_Auth(PICC_AUTHENT1A, sector, key, serial);
 8001e5c:	f107 030c 	add.w	r3, r7, #12
 8001e60:	1d3a      	adds	r2, r7, #4
 8001e62:	f897 102a 	ldrb.w	r1, [r7, #42]	; 0x2a
 8001e66:	2060      	movs	r0, #96	; 0x60
 8001e68:	f7ff fec3 	bl	8001bf2 <MFRC522_Auth>
 8001e6c:	4603      	mov	r3, r0
 8001e6e:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
      if (status != MI_OK)
 8001e72:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 8001e76:	2b00      	cmp	r3, #0
 8001e78:	d006      	beq.n	8001e88 <ReadCardValue+0xe4>
      {
    	  sprintf((char*)buffer_Detection,"Error authenticating with card\r\n");
 8001e7a:	492a      	ldr	r1, [pc, #168]	; (8001f24 <ReadCardValue+0x180>)
 8001e7c:	4826      	ldr	r0, [pc, #152]	; (8001f18 <ReadCardValue+0x174>)
 8001e7e:	f003 fd19 	bl	80058b4 <siprintf>
          return status;
 8001e82:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 8001e86:	e03f      	b.n	8001f08 <ReadCardValue+0x164>
      }

      // Read value from card
      status = MFRC522_Read(block, buffer);
 8001e88:	f107 0214 	add.w	r2, r7, #20
 8001e8c:	f897 3029 	ldrb.w	r3, [r7, #41]	; 0x29
 8001e90:	4611      	mov	r1, r2
 8001e92:	4618      	mov	r0, r3
 8001e94:	f7ff ff00 	bl	8001c98 <MFRC522_Read>
 8001e98:	4603      	mov	r3, r0
 8001e9a:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
      if (status != MI_OK)
 8001e9e:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 8001ea2:	2b00      	cmp	r3, #0
 8001ea4:	d006      	beq.n	8001eb4 <ReadCardValue+0x110>
      {
    	  sprintf((char*)buffer_Detection,"Error reading card value\r\n");
 8001ea6:	4920      	ldr	r1, [pc, #128]	; (8001f28 <ReadCardValue+0x184>)
 8001ea8:	481b      	ldr	r0, [pc, #108]	; (8001f18 <ReadCardValue+0x174>)
 8001eaa:	f003 fd03 	bl	80058b4 <siprintf>
          return status;
 8001eae:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 8001eb2:	e029      	b.n	8001f08 <ReadCardValue+0x164>
      }

      // Process value and output
      for (int  i = 0 ; i < 4 ; i++)
 8001eb4:	2300      	movs	r3, #0
 8001eb6:	62fb      	str	r3, [r7, #44]	; 0x2c
 8001eb8:	e00c      	b.n	8001ed4 <ReadCardValue+0x130>
    	  CardID[i] = buffer[i]; // Assigning the UID to a global variable
 8001eba:	f107 0214 	add.w	r2, r7, #20
 8001ebe:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001ec0:	4413      	add	r3, r2
 8001ec2:	7819      	ldrb	r1, [r3, #0]
 8001ec4:	4a19      	ldr	r2, [pc, #100]	; (8001f2c <ReadCardValue+0x188>)
 8001ec6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001ec8:	4413      	add	r3, r2
 8001eca:	460a      	mov	r2, r1
 8001ecc:	701a      	strb	r2, [r3, #0]
      for (int  i = 0 ; i < 4 ; i++)
 8001ece:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001ed0:	3301      	adds	r3, #1
 8001ed2:	62fb      	str	r3, [r7, #44]	; 0x2c
 8001ed4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001ed6:	2b03      	cmp	r3, #3
 8001ed8:	ddef      	ble.n	8001eba <ReadCardValue+0x116>

      sprintf(CardID_Print, "%02x\t%02x\t%02x\t%02x", (uint32_t)buffer[0], (uint32_t)buffer[1], (uint32_t)buffer[2], (uint32_t)buffer[3]);
 8001eda:	7d3b      	ldrb	r3, [r7, #20]
 8001edc:	4619      	mov	r1, r3
 8001ede:	7d7b      	ldrb	r3, [r7, #21]
 8001ee0:	4618      	mov	r0, r3
 8001ee2:	7dbb      	ldrb	r3, [r7, #22]
 8001ee4:	7dfa      	ldrb	r2, [r7, #23]
 8001ee6:	9201      	str	r2, [sp, #4]
 8001ee8:	9300      	str	r3, [sp, #0]
 8001eea:	4603      	mov	r3, r0
 8001eec:	460a      	mov	r2, r1
 8001eee:	4910      	ldr	r1, [pc, #64]	; (8001f30 <ReadCardValue+0x18c>)
 8001ef0:	4810      	ldr	r0, [pc, #64]	; (8001f34 <ReadCardValue+0x190>)
 8001ef2:	f003 fcdf 	bl	80058b4 <siprintf>
      status = MI_OK;
 8001ef6:	2300      	movs	r3, #0
 8001ef8:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
      sprintf((char*)buffer_Detection,"Card Detected!");
 8001efc:	490e      	ldr	r1, [pc, #56]	; (8001f38 <ReadCardValue+0x194>)
 8001efe:	4806      	ldr	r0, [pc, #24]	; (8001f18 <ReadCardValue+0x174>)
 8001f00:	f003 fcd8 	bl	80058b4 <siprintf>
      return status;
 8001f04:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
  }
 8001f08:	4618      	mov	r0, r3
 8001f0a:	3730      	adds	r7, #48	; 0x30
 8001f0c:	46bd      	mov	sp, r7
 8001f0e:	bd80      	pop	{r7, pc}
 8001f10:	08007e9c 	.word	0x08007e9c
 8001f14:	08007dec 	.word	0x08007dec
 8001f18:	20000318 	.word	0x20000318
 8001f1c:	08007dfc 	.word	0x08007dfc
 8001f20:	08007e20 	.word	0x08007e20
 8001f24:	08007e38 	.word	0x08007e38
 8001f28:	08007e5c 	.word	0x08007e5c
 8001f2c:	200002e0 	.word	0x200002e0
 8001f30:	08007e78 	.word	0x08007e78
 8001f34:	200002e4 	.word	0x200002e4
 8001f38:	08007e8c 	.word	0x08007e8c

08001f3c <microDelay>:
 8001f3c:	b480      	push	{r7}
 8001f3e:	b083      	sub	sp, #12
 8001f40:	af00      	add	r7, sp, #0
 8001f42:	4603      	mov	r3, r0
 8001f44:	80fb      	strh	r3, [r7, #6]
 8001f46:	4b09      	ldr	r3, [pc, #36]	; (8001f6c <microDelay+0x30>)
 8001f48:	681b      	ldr	r3, [r3, #0]
 8001f4a:	2200      	movs	r2, #0
 8001f4c:	625a      	str	r2, [r3, #36]	; 0x24
 8001f4e:	bf00      	nop
 8001f50:	4b06      	ldr	r3, [pc, #24]	; (8001f6c <microDelay+0x30>)
 8001f52:	681b      	ldr	r3, [r3, #0]
 8001f54:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8001f56:	88fb      	ldrh	r3, [r7, #6]
 8001f58:	429a      	cmp	r2, r3
 8001f5a:	d3f9      	bcc.n	8001f50 <microDelay+0x14>
 8001f5c:	bf00      	nop
 8001f5e:	bf00      	nop
 8001f60:	370c      	adds	r7, #12
 8001f62:	46bd      	mov	sp, r7
 8001f64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f68:	4770      	bx	lr
 8001f6a:	bf00      	nop
 8001f6c:	20000254 	.word	0x20000254

08001f70 <_getpid>:
 8001f70:	b480      	push	{r7}
 8001f72:	af00      	add	r7, sp, #0
 8001f74:	2301      	movs	r3, #1
 8001f76:	4618      	mov	r0, r3
 8001f78:	46bd      	mov	sp, r7
 8001f7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f7e:	4770      	bx	lr

08001f80 <_kill>:
 8001f80:	b580      	push	{r7, lr}
 8001f82:	b082      	sub	sp, #8
 8001f84:	af00      	add	r7, sp, #0
 8001f86:	6078      	str	r0, [r7, #4]
 8001f88:	6039      	str	r1, [r7, #0]
 8001f8a:	f002 fff7 	bl	8004f7c <__errno>
 8001f8e:	4603      	mov	r3, r0
 8001f90:	2216      	movs	r2, #22
 8001f92:	601a      	str	r2, [r3, #0]
 8001f94:	f04f 33ff 	mov.w	r3, #4294967295
 8001f98:	4618      	mov	r0, r3
 8001f9a:	3708      	adds	r7, #8
 8001f9c:	46bd      	mov	sp, r7
 8001f9e:	bd80      	pop	{r7, pc}

08001fa0 <_exit>:
 8001fa0:	b580      	push	{r7, lr}
 8001fa2:	b082      	sub	sp, #8
 8001fa4:	af00      	add	r7, sp, #0
 8001fa6:	6078      	str	r0, [r7, #4]
 8001fa8:	f04f 31ff 	mov.w	r1, #4294967295
 8001fac:	6878      	ldr	r0, [r7, #4]
 8001fae:	f7ff ffe7 	bl	8001f80 <_kill>
 8001fb2:	e7fe      	b.n	8001fb2 <_exit+0x12>

08001fb4 <_read>:
 8001fb4:	b580      	push	{r7, lr}
 8001fb6:	b086      	sub	sp, #24
 8001fb8:	af00      	add	r7, sp, #0
 8001fba:	60f8      	str	r0, [r7, #12]
 8001fbc:	60b9      	str	r1, [r7, #8]
 8001fbe:	607a      	str	r2, [r7, #4]
 8001fc0:	2300      	movs	r3, #0
 8001fc2:	617b      	str	r3, [r7, #20]
 8001fc4:	e00a      	b.n	8001fdc <_read+0x28>
 8001fc6:	f3af 8000 	nop.w
 8001fca:	4601      	mov	r1, r0
 8001fcc:	68bb      	ldr	r3, [r7, #8]
 8001fce:	1c5a      	adds	r2, r3, #1
 8001fd0:	60ba      	str	r2, [r7, #8]
 8001fd2:	b2ca      	uxtb	r2, r1
 8001fd4:	701a      	strb	r2, [r3, #0]
 8001fd6:	697b      	ldr	r3, [r7, #20]
 8001fd8:	3301      	adds	r3, #1
 8001fda:	617b      	str	r3, [r7, #20]
 8001fdc:	697a      	ldr	r2, [r7, #20]
 8001fde:	687b      	ldr	r3, [r7, #4]
 8001fe0:	429a      	cmp	r2, r3
 8001fe2:	dbf0      	blt.n	8001fc6 <_read+0x12>
 8001fe4:	687b      	ldr	r3, [r7, #4]
 8001fe6:	4618      	mov	r0, r3
 8001fe8:	3718      	adds	r7, #24
 8001fea:	46bd      	mov	sp, r7
 8001fec:	bd80      	pop	{r7, pc}

08001fee <_write>:
 8001fee:	b580      	push	{r7, lr}
 8001ff0:	b086      	sub	sp, #24
 8001ff2:	af00      	add	r7, sp, #0
 8001ff4:	60f8      	str	r0, [r7, #12]
 8001ff6:	60b9      	str	r1, [r7, #8]
 8001ff8:	607a      	str	r2, [r7, #4]
 8001ffa:	2300      	movs	r3, #0
 8001ffc:	617b      	str	r3, [r7, #20]
 8001ffe:	e009      	b.n	8002014 <_write+0x26>
 8002000:	68bb      	ldr	r3, [r7, #8]
 8002002:	1c5a      	adds	r2, r3, #1
 8002004:	60ba      	str	r2, [r7, #8]
 8002006:	781b      	ldrb	r3, [r3, #0]
 8002008:	4618      	mov	r0, r3
 800200a:	f3af 8000 	nop.w
 800200e:	697b      	ldr	r3, [r7, #20]
 8002010:	3301      	adds	r3, #1
 8002012:	617b      	str	r3, [r7, #20]
 8002014:	697a      	ldr	r2, [r7, #20]
 8002016:	687b      	ldr	r3, [r7, #4]
 8002018:	429a      	cmp	r2, r3
 800201a:	dbf1      	blt.n	8002000 <_write+0x12>
 800201c:	687b      	ldr	r3, [r7, #4]
 800201e:	4618      	mov	r0, r3
 8002020:	3718      	adds	r7, #24
 8002022:	46bd      	mov	sp, r7
 8002024:	bd80      	pop	{r7, pc}

08002026 <_close>:
 8002026:	b480      	push	{r7}
 8002028:	b083      	sub	sp, #12
 800202a:	af00      	add	r7, sp, #0
 800202c:	6078      	str	r0, [r7, #4]
 800202e:	f04f 33ff 	mov.w	r3, #4294967295
 8002032:	4618      	mov	r0, r3
 8002034:	370c      	adds	r7, #12
 8002036:	46bd      	mov	sp, r7
 8002038:	f85d 7b04 	ldr.w	r7, [sp], #4
 800203c:	4770      	bx	lr

0800203e <_fstat>:
 800203e:	b480      	push	{r7}
 8002040:	b083      	sub	sp, #12
 8002042:	af00      	add	r7, sp, #0
 8002044:	6078      	str	r0, [r7, #4]
 8002046:	6039      	str	r1, [r7, #0]
 8002048:	683b      	ldr	r3, [r7, #0]
 800204a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800204e:	605a      	str	r2, [r3, #4]
 8002050:	2300      	movs	r3, #0
 8002052:	4618      	mov	r0, r3
 8002054:	370c      	adds	r7, #12
 8002056:	46bd      	mov	sp, r7
 8002058:	f85d 7b04 	ldr.w	r7, [sp], #4
 800205c:	4770      	bx	lr

0800205e <_isatty>:
 800205e:	b480      	push	{r7}
 8002060:	b083      	sub	sp, #12
 8002062:	af00      	add	r7, sp, #0
 8002064:	6078      	str	r0, [r7, #4]
 8002066:	2301      	movs	r3, #1
 8002068:	4618      	mov	r0, r3
 800206a:	370c      	adds	r7, #12
 800206c:	46bd      	mov	sp, r7
 800206e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002072:	4770      	bx	lr

08002074 <_lseek>:
 8002074:	b480      	push	{r7}
 8002076:	b085      	sub	sp, #20
 8002078:	af00      	add	r7, sp, #0
 800207a:	60f8      	str	r0, [r7, #12]
 800207c:	60b9      	str	r1, [r7, #8]
 800207e:	607a      	str	r2, [r7, #4]
 8002080:	2300      	movs	r3, #0
 8002082:	4618      	mov	r0, r3
 8002084:	3714      	adds	r7, #20
 8002086:	46bd      	mov	sp, r7
 8002088:	f85d 7b04 	ldr.w	r7, [sp], #4
 800208c:	4770      	bx	lr
	...

08002090 <_sbrk>:
 8002090:	b580      	push	{r7, lr}
 8002092:	b086      	sub	sp, #24
 8002094:	af00      	add	r7, sp, #0
 8002096:	6078      	str	r0, [r7, #4]
 8002098:	4a14      	ldr	r2, [pc, #80]	; (80020ec <_sbrk+0x5c>)
 800209a:	4b15      	ldr	r3, [pc, #84]	; (80020f0 <_sbrk+0x60>)
 800209c:	1ad3      	subs	r3, r2, r3
 800209e:	617b      	str	r3, [r7, #20]
 80020a0:	697b      	ldr	r3, [r7, #20]
 80020a2:	613b      	str	r3, [r7, #16]
 80020a4:	4b13      	ldr	r3, [pc, #76]	; (80020f4 <_sbrk+0x64>)
 80020a6:	681b      	ldr	r3, [r3, #0]
 80020a8:	2b00      	cmp	r3, #0
 80020aa:	d102      	bne.n	80020b2 <_sbrk+0x22>
 80020ac:	4b11      	ldr	r3, [pc, #68]	; (80020f4 <_sbrk+0x64>)
 80020ae:	4a12      	ldr	r2, [pc, #72]	; (80020f8 <_sbrk+0x68>)
 80020b0:	601a      	str	r2, [r3, #0]
 80020b2:	4b10      	ldr	r3, [pc, #64]	; (80020f4 <_sbrk+0x64>)
 80020b4:	681a      	ldr	r2, [r3, #0]
 80020b6:	687b      	ldr	r3, [r7, #4]
 80020b8:	4413      	add	r3, r2
 80020ba:	693a      	ldr	r2, [r7, #16]
 80020bc:	429a      	cmp	r2, r3
 80020be:	d207      	bcs.n	80020d0 <_sbrk+0x40>
 80020c0:	f002 ff5c 	bl	8004f7c <__errno>
 80020c4:	4603      	mov	r3, r0
 80020c6:	220c      	movs	r2, #12
 80020c8:	601a      	str	r2, [r3, #0]
 80020ca:	f04f 33ff 	mov.w	r3, #4294967295
 80020ce:	e009      	b.n	80020e4 <_sbrk+0x54>
 80020d0:	4b08      	ldr	r3, [pc, #32]	; (80020f4 <_sbrk+0x64>)
 80020d2:	681b      	ldr	r3, [r3, #0]
 80020d4:	60fb      	str	r3, [r7, #12]
 80020d6:	4b07      	ldr	r3, [pc, #28]	; (80020f4 <_sbrk+0x64>)
 80020d8:	681a      	ldr	r2, [r3, #0]
 80020da:	687b      	ldr	r3, [r7, #4]
 80020dc:	4413      	add	r3, r2
 80020de:	4a05      	ldr	r2, [pc, #20]	; (80020f4 <_sbrk+0x64>)
 80020e0:	6013      	str	r3, [r2, #0]
 80020e2:	68fb      	ldr	r3, [r7, #12]
 80020e4:	4618      	mov	r0, r3
 80020e6:	3718      	adds	r7, #24
 80020e8:	46bd      	mov	sp, r7
 80020ea:	bd80      	pop	{r7, pc}
 80020ec:	20020000 	.word	0x20020000
 80020f0:	00000400 	.word	0x00000400
 80020f4:	2000034c 	.word	0x2000034c
 80020f8:	20000368 	.word	0x20000368

080020fc <SystemInit>:
 80020fc:	b480      	push	{r7}
 80020fe:	af00      	add	r7, sp, #0
 8002100:	4b06      	ldr	r3, [pc, #24]	; (800211c <SystemInit+0x20>)
 8002102:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002106:	4a05      	ldr	r2, [pc, #20]	; (800211c <SystemInit+0x20>)
 8002108:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800210c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8002110:	bf00      	nop
 8002112:	46bd      	mov	sp, r7
 8002114:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002118:	4770      	bx	lr
 800211a:	bf00      	nop
 800211c:	e000ed00 	.word	0xe000ed00

08002120 <Reset_Handler>:
 8002120:	f8df d034 	ldr.w	sp, [pc, #52]	; 8002158 <LoopFillZerobss+0x12>
 8002124:	480d      	ldr	r0, [pc, #52]	; (800215c <LoopFillZerobss+0x16>)
 8002126:	490e      	ldr	r1, [pc, #56]	; (8002160 <LoopFillZerobss+0x1a>)
 8002128:	4a0e      	ldr	r2, [pc, #56]	; (8002164 <LoopFillZerobss+0x1e>)
 800212a:	2300      	movs	r3, #0
 800212c:	e002      	b.n	8002134 <LoopCopyDataInit>

0800212e <CopyDataInit>:
 800212e:	58d4      	ldr	r4, [r2, r3]
 8002130:	50c4      	str	r4, [r0, r3]
 8002132:	3304      	adds	r3, #4

08002134 <LoopCopyDataInit>:
 8002134:	18c4      	adds	r4, r0, r3
 8002136:	428c      	cmp	r4, r1
 8002138:	d3f9      	bcc.n	800212e <CopyDataInit>
 800213a:	4a0b      	ldr	r2, [pc, #44]	; (8002168 <LoopFillZerobss+0x22>)
 800213c:	4c0b      	ldr	r4, [pc, #44]	; (800216c <LoopFillZerobss+0x26>)
 800213e:	2300      	movs	r3, #0
 8002140:	e001      	b.n	8002146 <LoopFillZerobss>

08002142 <FillZerobss>:
 8002142:	6013      	str	r3, [r2, #0]
 8002144:	3204      	adds	r2, #4

08002146 <LoopFillZerobss>:
 8002146:	42a2      	cmp	r2, r4
 8002148:	d3fb      	bcc.n	8002142 <FillZerobss>
 800214a:	f7ff ffd7 	bl	80020fc <SystemInit>
 800214e:	f002 ff1b 	bl	8004f88 <__libc_init_array>
 8002152:	f7fe feab 	bl	8000eac <main>
 8002156:	4770      	bx	lr
 8002158:	20020000 	.word	0x20020000
 800215c:	20000000 	.word	0x20000000
 8002160:	200001e0 	.word	0x200001e0
 8002164:	080082a4 	.word	0x080082a4
 8002168:	200001e0 	.word	0x200001e0
 800216c:	20000364 	.word	0x20000364

08002170 <ADC_IRQHandler>:
 8002170:	e7fe      	b.n	8002170 <ADC_IRQHandler>
	...

08002174 <HAL_Init>:
 8002174:	b580      	push	{r7, lr}
 8002176:	af00      	add	r7, sp, #0
 8002178:	4b0e      	ldr	r3, [pc, #56]	; (80021b4 <HAL_Init+0x40>)
 800217a:	681b      	ldr	r3, [r3, #0]
 800217c:	4a0d      	ldr	r2, [pc, #52]	; (80021b4 <HAL_Init+0x40>)
 800217e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8002182:	6013      	str	r3, [r2, #0]
 8002184:	4b0b      	ldr	r3, [pc, #44]	; (80021b4 <HAL_Init+0x40>)
 8002186:	681b      	ldr	r3, [r3, #0]
 8002188:	4a0a      	ldr	r2, [pc, #40]	; (80021b4 <HAL_Init+0x40>)
 800218a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800218e:	6013      	str	r3, [r2, #0]
 8002190:	4b08      	ldr	r3, [pc, #32]	; (80021b4 <HAL_Init+0x40>)
 8002192:	681b      	ldr	r3, [r3, #0]
 8002194:	4a07      	ldr	r2, [pc, #28]	; (80021b4 <HAL_Init+0x40>)
 8002196:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800219a:	6013      	str	r3, [r2, #0]
 800219c:	2003      	movs	r0, #3
 800219e:	f000 f94f 	bl	8002440 <HAL_NVIC_SetPriorityGrouping>
 80021a2:	2000      	movs	r0, #0
 80021a4:	f000 f808 	bl	80021b8 <HAL_InitTick>
 80021a8:	f7ff f9a6 	bl	80014f8 <HAL_MspInit>
 80021ac:	2300      	movs	r3, #0
 80021ae:	4618      	mov	r0, r3
 80021b0:	bd80      	pop	{r7, pc}
 80021b2:	bf00      	nop
 80021b4:	40023c00 	.word	0x40023c00

080021b8 <HAL_InitTick>:
 80021b8:	b580      	push	{r7, lr}
 80021ba:	b082      	sub	sp, #8
 80021bc:	af00      	add	r7, sp, #0
 80021be:	6078      	str	r0, [r7, #4]
 80021c0:	4b12      	ldr	r3, [pc, #72]	; (800220c <HAL_InitTick+0x54>)
 80021c2:	681a      	ldr	r2, [r3, #0]
 80021c4:	4b12      	ldr	r3, [pc, #72]	; (8002210 <HAL_InitTick+0x58>)
 80021c6:	781b      	ldrb	r3, [r3, #0]
 80021c8:	4619      	mov	r1, r3
 80021ca:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80021ce:	fbb3 f3f1 	udiv	r3, r3, r1
 80021d2:	fbb2 f3f3 	udiv	r3, r2, r3
 80021d6:	4618      	mov	r0, r3
 80021d8:	f000 f967 	bl	80024aa <HAL_SYSTICK_Config>
 80021dc:	4603      	mov	r3, r0
 80021de:	2b00      	cmp	r3, #0
 80021e0:	d001      	beq.n	80021e6 <HAL_InitTick+0x2e>
 80021e2:	2301      	movs	r3, #1
 80021e4:	e00e      	b.n	8002204 <HAL_InitTick+0x4c>
 80021e6:	687b      	ldr	r3, [r7, #4]
 80021e8:	2b0f      	cmp	r3, #15
 80021ea:	d80a      	bhi.n	8002202 <HAL_InitTick+0x4a>
 80021ec:	2200      	movs	r2, #0
 80021ee:	6879      	ldr	r1, [r7, #4]
 80021f0:	f04f 30ff 	mov.w	r0, #4294967295
 80021f4:	f000 f92f 	bl	8002456 <HAL_NVIC_SetPriority>
 80021f8:	4a06      	ldr	r2, [pc, #24]	; (8002214 <HAL_InitTick+0x5c>)
 80021fa:	687b      	ldr	r3, [r7, #4]
 80021fc:	6013      	str	r3, [r2, #0]
 80021fe:	2300      	movs	r3, #0
 8002200:	e000      	b.n	8002204 <HAL_InitTick+0x4c>
 8002202:	2301      	movs	r3, #1
 8002204:	4618      	mov	r0, r3
 8002206:	3708      	adds	r7, #8
 8002208:	46bd      	mov	sp, r7
 800220a:	bd80      	pop	{r7, pc}
 800220c:	20000004 	.word	0x20000004
 8002210:	2000000c 	.word	0x2000000c
 8002214:	20000008 	.word	0x20000008

08002218 <HAL_IncTick>:
 8002218:	b480      	push	{r7}
 800221a:	af00      	add	r7, sp, #0
 800221c:	4b06      	ldr	r3, [pc, #24]	; (8002238 <HAL_IncTick+0x20>)
 800221e:	781b      	ldrb	r3, [r3, #0]
 8002220:	461a      	mov	r2, r3
 8002222:	4b06      	ldr	r3, [pc, #24]	; (800223c <HAL_IncTick+0x24>)
 8002224:	681b      	ldr	r3, [r3, #0]
 8002226:	4413      	add	r3, r2
 8002228:	4a04      	ldr	r2, [pc, #16]	; (800223c <HAL_IncTick+0x24>)
 800222a:	6013      	str	r3, [r2, #0]
 800222c:	bf00      	nop
 800222e:	46bd      	mov	sp, r7
 8002230:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002234:	4770      	bx	lr
 8002236:	bf00      	nop
 8002238:	2000000c 	.word	0x2000000c
 800223c:	20000350 	.word	0x20000350

08002240 <HAL_GetTick>:
 8002240:	b480      	push	{r7}
 8002242:	af00      	add	r7, sp, #0
 8002244:	4b03      	ldr	r3, [pc, #12]	; (8002254 <HAL_GetTick+0x14>)
 8002246:	681b      	ldr	r3, [r3, #0]
 8002248:	4618      	mov	r0, r3
 800224a:	46bd      	mov	sp, r7
 800224c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002250:	4770      	bx	lr
 8002252:	bf00      	nop
 8002254:	20000350 	.word	0x20000350

08002258 <HAL_Delay>:
 8002258:	b580      	push	{r7, lr}
 800225a:	b084      	sub	sp, #16
 800225c:	af00      	add	r7, sp, #0
 800225e:	6078      	str	r0, [r7, #4]
 8002260:	f7ff ffee 	bl	8002240 <HAL_GetTick>
 8002264:	60b8      	str	r0, [r7, #8]
 8002266:	687b      	ldr	r3, [r7, #4]
 8002268:	60fb      	str	r3, [r7, #12]
 800226a:	68fb      	ldr	r3, [r7, #12]
 800226c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002270:	d005      	beq.n	800227e <HAL_Delay+0x26>
 8002272:	4b0a      	ldr	r3, [pc, #40]	; (800229c <HAL_Delay+0x44>)
 8002274:	781b      	ldrb	r3, [r3, #0]
 8002276:	461a      	mov	r2, r3
 8002278:	68fb      	ldr	r3, [r7, #12]
 800227a:	4413      	add	r3, r2
 800227c:	60fb      	str	r3, [r7, #12]
 800227e:	bf00      	nop
 8002280:	f7ff ffde 	bl	8002240 <HAL_GetTick>
 8002284:	4602      	mov	r2, r0
 8002286:	68bb      	ldr	r3, [r7, #8]
 8002288:	1ad3      	subs	r3, r2, r3
 800228a:	68fa      	ldr	r2, [r7, #12]
 800228c:	429a      	cmp	r2, r3
 800228e:	d8f7      	bhi.n	8002280 <HAL_Delay+0x28>
 8002290:	bf00      	nop
 8002292:	bf00      	nop
 8002294:	3710      	adds	r7, #16
 8002296:	46bd      	mov	sp, r7
 8002298:	bd80      	pop	{r7, pc}
 800229a:	bf00      	nop
 800229c:	2000000c 	.word	0x2000000c

080022a0 <__NVIC_SetPriorityGrouping>:
 80022a0:	b480      	push	{r7}
 80022a2:	b085      	sub	sp, #20
 80022a4:	af00      	add	r7, sp, #0
 80022a6:	6078      	str	r0, [r7, #4]
 80022a8:	687b      	ldr	r3, [r7, #4]
 80022aa:	f003 0307 	and.w	r3, r3, #7
 80022ae:	60fb      	str	r3, [r7, #12]
 80022b0:	4b0c      	ldr	r3, [pc, #48]	; (80022e4 <__NVIC_SetPriorityGrouping+0x44>)
 80022b2:	68db      	ldr	r3, [r3, #12]
 80022b4:	60bb      	str	r3, [r7, #8]
 80022b6:	68ba      	ldr	r2, [r7, #8]
 80022b8:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80022bc:	4013      	ands	r3, r2
 80022be:	60bb      	str	r3, [r7, #8]
 80022c0:	68fb      	ldr	r3, [r7, #12]
 80022c2:	021a      	lsls	r2, r3, #8
 80022c4:	68bb      	ldr	r3, [r7, #8]
 80022c6:	4313      	orrs	r3, r2
 80022c8:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80022cc:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80022d0:	60bb      	str	r3, [r7, #8]
 80022d2:	4a04      	ldr	r2, [pc, #16]	; (80022e4 <__NVIC_SetPriorityGrouping+0x44>)
 80022d4:	68bb      	ldr	r3, [r7, #8]
 80022d6:	60d3      	str	r3, [r2, #12]
 80022d8:	bf00      	nop
 80022da:	3714      	adds	r7, #20
 80022dc:	46bd      	mov	sp, r7
 80022de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022e2:	4770      	bx	lr
 80022e4:	e000ed00 	.word	0xe000ed00

080022e8 <__NVIC_GetPriorityGrouping>:
 80022e8:	b480      	push	{r7}
 80022ea:	af00      	add	r7, sp, #0
 80022ec:	4b04      	ldr	r3, [pc, #16]	; (8002300 <__NVIC_GetPriorityGrouping+0x18>)
 80022ee:	68db      	ldr	r3, [r3, #12]
 80022f0:	0a1b      	lsrs	r3, r3, #8
 80022f2:	f003 0307 	and.w	r3, r3, #7
 80022f6:	4618      	mov	r0, r3
 80022f8:	46bd      	mov	sp, r7
 80022fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022fe:	4770      	bx	lr
 8002300:	e000ed00 	.word	0xe000ed00

08002304 <__NVIC_EnableIRQ>:
 8002304:	b480      	push	{r7}
 8002306:	b083      	sub	sp, #12
 8002308:	af00      	add	r7, sp, #0
 800230a:	4603      	mov	r3, r0
 800230c:	71fb      	strb	r3, [r7, #7]
 800230e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002312:	2b00      	cmp	r3, #0
 8002314:	db0b      	blt.n	800232e <__NVIC_EnableIRQ+0x2a>
 8002316:	79fb      	ldrb	r3, [r7, #7]
 8002318:	f003 021f 	and.w	r2, r3, #31
 800231c:	4907      	ldr	r1, [pc, #28]	; (800233c <__NVIC_EnableIRQ+0x38>)
 800231e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002322:	095b      	lsrs	r3, r3, #5
 8002324:	2001      	movs	r0, #1
 8002326:	fa00 f202 	lsl.w	r2, r0, r2
 800232a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800232e:	bf00      	nop
 8002330:	370c      	adds	r7, #12
 8002332:	46bd      	mov	sp, r7
 8002334:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002338:	4770      	bx	lr
 800233a:	bf00      	nop
 800233c:	e000e100 	.word	0xe000e100

08002340 <__NVIC_SetPriority>:
 8002340:	b480      	push	{r7}
 8002342:	b083      	sub	sp, #12
 8002344:	af00      	add	r7, sp, #0
 8002346:	4603      	mov	r3, r0
 8002348:	6039      	str	r1, [r7, #0]
 800234a:	71fb      	strb	r3, [r7, #7]
 800234c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002350:	2b00      	cmp	r3, #0
 8002352:	db0a      	blt.n	800236a <__NVIC_SetPriority+0x2a>
 8002354:	683b      	ldr	r3, [r7, #0]
 8002356:	b2da      	uxtb	r2, r3
 8002358:	490c      	ldr	r1, [pc, #48]	; (800238c <__NVIC_SetPriority+0x4c>)
 800235a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800235e:	0112      	lsls	r2, r2, #4
 8002360:	b2d2      	uxtb	r2, r2
 8002362:	440b      	add	r3, r1
 8002364:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8002368:	e00a      	b.n	8002380 <__NVIC_SetPriority+0x40>
 800236a:	683b      	ldr	r3, [r7, #0]
 800236c:	b2da      	uxtb	r2, r3
 800236e:	4908      	ldr	r1, [pc, #32]	; (8002390 <__NVIC_SetPriority+0x50>)
 8002370:	79fb      	ldrb	r3, [r7, #7]
 8002372:	f003 030f 	and.w	r3, r3, #15
 8002376:	3b04      	subs	r3, #4
 8002378:	0112      	lsls	r2, r2, #4
 800237a:	b2d2      	uxtb	r2, r2
 800237c:	440b      	add	r3, r1
 800237e:	761a      	strb	r2, [r3, #24]
 8002380:	bf00      	nop
 8002382:	370c      	adds	r7, #12
 8002384:	46bd      	mov	sp, r7
 8002386:	f85d 7b04 	ldr.w	r7, [sp], #4
 800238a:	4770      	bx	lr
 800238c:	e000e100 	.word	0xe000e100
 8002390:	e000ed00 	.word	0xe000ed00

08002394 <NVIC_EncodePriority>:
 8002394:	b480      	push	{r7}
 8002396:	b089      	sub	sp, #36	; 0x24
 8002398:	af00      	add	r7, sp, #0
 800239a:	60f8      	str	r0, [r7, #12]
 800239c:	60b9      	str	r1, [r7, #8]
 800239e:	607a      	str	r2, [r7, #4]
 80023a0:	68fb      	ldr	r3, [r7, #12]
 80023a2:	f003 0307 	and.w	r3, r3, #7
 80023a6:	61fb      	str	r3, [r7, #28]
 80023a8:	69fb      	ldr	r3, [r7, #28]
 80023aa:	f1c3 0307 	rsb	r3, r3, #7
 80023ae:	2b04      	cmp	r3, #4
 80023b0:	bf28      	it	cs
 80023b2:	2304      	movcs	r3, #4
 80023b4:	61bb      	str	r3, [r7, #24]
 80023b6:	69fb      	ldr	r3, [r7, #28]
 80023b8:	3304      	adds	r3, #4
 80023ba:	2b06      	cmp	r3, #6
 80023bc:	d902      	bls.n	80023c4 <NVIC_EncodePriority+0x30>
 80023be:	69fb      	ldr	r3, [r7, #28]
 80023c0:	3b03      	subs	r3, #3
 80023c2:	e000      	b.n	80023c6 <NVIC_EncodePriority+0x32>
 80023c4:	2300      	movs	r3, #0
 80023c6:	617b      	str	r3, [r7, #20]
 80023c8:	f04f 32ff 	mov.w	r2, #4294967295
 80023cc:	69bb      	ldr	r3, [r7, #24]
 80023ce:	fa02 f303 	lsl.w	r3, r2, r3
 80023d2:	43da      	mvns	r2, r3
 80023d4:	68bb      	ldr	r3, [r7, #8]
 80023d6:	401a      	ands	r2, r3
 80023d8:	697b      	ldr	r3, [r7, #20]
 80023da:	409a      	lsls	r2, r3
 80023dc:	f04f 31ff 	mov.w	r1, #4294967295
 80023e0:	697b      	ldr	r3, [r7, #20]
 80023e2:	fa01 f303 	lsl.w	r3, r1, r3
 80023e6:	43d9      	mvns	r1, r3
 80023e8:	687b      	ldr	r3, [r7, #4]
 80023ea:	400b      	ands	r3, r1
 80023ec:	4313      	orrs	r3, r2
 80023ee:	4618      	mov	r0, r3
 80023f0:	3724      	adds	r7, #36	; 0x24
 80023f2:	46bd      	mov	sp, r7
 80023f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023f8:	4770      	bx	lr
	...

080023fc <SysTick_Config>:
 80023fc:	b580      	push	{r7, lr}
 80023fe:	b082      	sub	sp, #8
 8002400:	af00      	add	r7, sp, #0
 8002402:	6078      	str	r0, [r7, #4]
 8002404:	687b      	ldr	r3, [r7, #4]
 8002406:	3b01      	subs	r3, #1
 8002408:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800240c:	d301      	bcc.n	8002412 <SysTick_Config+0x16>
 800240e:	2301      	movs	r3, #1
 8002410:	e00f      	b.n	8002432 <SysTick_Config+0x36>
 8002412:	4a0a      	ldr	r2, [pc, #40]	; (800243c <SysTick_Config+0x40>)
 8002414:	687b      	ldr	r3, [r7, #4]
 8002416:	3b01      	subs	r3, #1
 8002418:	6053      	str	r3, [r2, #4]
 800241a:	210f      	movs	r1, #15
 800241c:	f04f 30ff 	mov.w	r0, #4294967295
 8002420:	f7ff ff8e 	bl	8002340 <__NVIC_SetPriority>
 8002424:	4b05      	ldr	r3, [pc, #20]	; (800243c <SysTick_Config+0x40>)
 8002426:	2200      	movs	r2, #0
 8002428:	609a      	str	r2, [r3, #8]
 800242a:	4b04      	ldr	r3, [pc, #16]	; (800243c <SysTick_Config+0x40>)
 800242c:	2207      	movs	r2, #7
 800242e:	601a      	str	r2, [r3, #0]
 8002430:	2300      	movs	r3, #0
 8002432:	4618      	mov	r0, r3
 8002434:	3708      	adds	r7, #8
 8002436:	46bd      	mov	sp, r7
 8002438:	bd80      	pop	{r7, pc}
 800243a:	bf00      	nop
 800243c:	e000e010 	.word	0xe000e010

08002440 <HAL_NVIC_SetPriorityGrouping>:
 8002440:	b580      	push	{r7, lr}
 8002442:	b082      	sub	sp, #8
 8002444:	af00      	add	r7, sp, #0
 8002446:	6078      	str	r0, [r7, #4]
 8002448:	6878      	ldr	r0, [r7, #4]
 800244a:	f7ff ff29 	bl	80022a0 <__NVIC_SetPriorityGrouping>
 800244e:	bf00      	nop
 8002450:	3708      	adds	r7, #8
 8002452:	46bd      	mov	sp, r7
 8002454:	bd80      	pop	{r7, pc}

08002456 <HAL_NVIC_SetPriority>:
 8002456:	b580      	push	{r7, lr}
 8002458:	b086      	sub	sp, #24
 800245a:	af00      	add	r7, sp, #0
 800245c:	4603      	mov	r3, r0
 800245e:	60b9      	str	r1, [r7, #8]
 8002460:	607a      	str	r2, [r7, #4]
 8002462:	73fb      	strb	r3, [r7, #15]
 8002464:	2300      	movs	r3, #0
 8002466:	617b      	str	r3, [r7, #20]
 8002468:	f7ff ff3e 	bl	80022e8 <__NVIC_GetPriorityGrouping>
 800246c:	6178      	str	r0, [r7, #20]
 800246e:	687a      	ldr	r2, [r7, #4]
 8002470:	68b9      	ldr	r1, [r7, #8]
 8002472:	6978      	ldr	r0, [r7, #20]
 8002474:	f7ff ff8e 	bl	8002394 <NVIC_EncodePriority>
 8002478:	4602      	mov	r2, r0
 800247a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800247e:	4611      	mov	r1, r2
 8002480:	4618      	mov	r0, r3
 8002482:	f7ff ff5d 	bl	8002340 <__NVIC_SetPriority>
 8002486:	bf00      	nop
 8002488:	3718      	adds	r7, #24
 800248a:	46bd      	mov	sp, r7
 800248c:	bd80      	pop	{r7, pc}

0800248e <HAL_NVIC_EnableIRQ>:
 800248e:	b580      	push	{r7, lr}
 8002490:	b082      	sub	sp, #8
 8002492:	af00      	add	r7, sp, #0
 8002494:	4603      	mov	r3, r0
 8002496:	71fb      	strb	r3, [r7, #7]
 8002498:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800249c:	4618      	mov	r0, r3
 800249e:	f7ff ff31 	bl	8002304 <__NVIC_EnableIRQ>
 80024a2:	bf00      	nop
 80024a4:	3708      	adds	r7, #8
 80024a6:	46bd      	mov	sp, r7
 80024a8:	bd80      	pop	{r7, pc}

080024aa <HAL_SYSTICK_Config>:
 80024aa:	b580      	push	{r7, lr}
 80024ac:	b082      	sub	sp, #8
 80024ae:	af00      	add	r7, sp, #0
 80024b0:	6078      	str	r0, [r7, #4]
 80024b2:	6878      	ldr	r0, [r7, #4]
 80024b4:	f7ff ffa2 	bl	80023fc <SysTick_Config>
 80024b8:	4603      	mov	r3, r0
 80024ba:	4618      	mov	r0, r3
 80024bc:	3708      	adds	r7, #8
 80024be:	46bd      	mov	sp, r7
 80024c0:	bd80      	pop	{r7, pc}

080024c2 <HAL_DMA_Abort>:
 80024c2:	b580      	push	{r7, lr}
 80024c4:	b084      	sub	sp, #16
 80024c6:	af00      	add	r7, sp, #0
 80024c8:	6078      	str	r0, [r7, #4]
 80024ca:	687b      	ldr	r3, [r7, #4]
 80024cc:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80024ce:	60fb      	str	r3, [r7, #12]
 80024d0:	f7ff feb6 	bl	8002240 <HAL_GetTick>
 80024d4:	60b8      	str	r0, [r7, #8]
 80024d6:	687b      	ldr	r3, [r7, #4]
 80024d8:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80024dc:	b2db      	uxtb	r3, r3
 80024de:	2b02      	cmp	r3, #2
 80024e0:	d008      	beq.n	80024f4 <HAL_DMA_Abort+0x32>
 80024e2:	687b      	ldr	r3, [r7, #4]
 80024e4:	2280      	movs	r2, #128	; 0x80
 80024e6:	655a      	str	r2, [r3, #84]	; 0x54
 80024e8:	687b      	ldr	r3, [r7, #4]
 80024ea:	2200      	movs	r2, #0
 80024ec:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80024f0:	2301      	movs	r3, #1
 80024f2:	e052      	b.n	800259a <HAL_DMA_Abort+0xd8>
 80024f4:	687b      	ldr	r3, [r7, #4]
 80024f6:	681b      	ldr	r3, [r3, #0]
 80024f8:	681a      	ldr	r2, [r3, #0]
 80024fa:	687b      	ldr	r3, [r7, #4]
 80024fc:	681b      	ldr	r3, [r3, #0]
 80024fe:	f022 0216 	bic.w	r2, r2, #22
 8002502:	601a      	str	r2, [r3, #0]
 8002504:	687b      	ldr	r3, [r7, #4]
 8002506:	681b      	ldr	r3, [r3, #0]
 8002508:	695a      	ldr	r2, [r3, #20]
 800250a:	687b      	ldr	r3, [r7, #4]
 800250c:	681b      	ldr	r3, [r3, #0]
 800250e:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8002512:	615a      	str	r2, [r3, #20]
 8002514:	687b      	ldr	r3, [r7, #4]
 8002516:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002518:	2b00      	cmp	r3, #0
 800251a:	d103      	bne.n	8002524 <HAL_DMA_Abort+0x62>
 800251c:	687b      	ldr	r3, [r7, #4]
 800251e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8002520:	2b00      	cmp	r3, #0
 8002522:	d007      	beq.n	8002534 <HAL_DMA_Abort+0x72>
 8002524:	687b      	ldr	r3, [r7, #4]
 8002526:	681b      	ldr	r3, [r3, #0]
 8002528:	681a      	ldr	r2, [r3, #0]
 800252a:	687b      	ldr	r3, [r7, #4]
 800252c:	681b      	ldr	r3, [r3, #0]
 800252e:	f022 0208 	bic.w	r2, r2, #8
 8002532:	601a      	str	r2, [r3, #0]
 8002534:	687b      	ldr	r3, [r7, #4]
 8002536:	681b      	ldr	r3, [r3, #0]
 8002538:	681a      	ldr	r2, [r3, #0]
 800253a:	687b      	ldr	r3, [r7, #4]
 800253c:	681b      	ldr	r3, [r3, #0]
 800253e:	f022 0201 	bic.w	r2, r2, #1
 8002542:	601a      	str	r2, [r3, #0]
 8002544:	e013      	b.n	800256e <HAL_DMA_Abort+0xac>
 8002546:	f7ff fe7b 	bl	8002240 <HAL_GetTick>
 800254a:	4602      	mov	r2, r0
 800254c:	68bb      	ldr	r3, [r7, #8]
 800254e:	1ad3      	subs	r3, r2, r3
 8002550:	2b05      	cmp	r3, #5
 8002552:	d90c      	bls.n	800256e <HAL_DMA_Abort+0xac>
 8002554:	687b      	ldr	r3, [r7, #4]
 8002556:	2220      	movs	r2, #32
 8002558:	655a      	str	r2, [r3, #84]	; 0x54
 800255a:	687b      	ldr	r3, [r7, #4]
 800255c:	2203      	movs	r2, #3
 800255e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8002562:	687b      	ldr	r3, [r7, #4]
 8002564:	2200      	movs	r2, #0
 8002566:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800256a:	2303      	movs	r3, #3
 800256c:	e015      	b.n	800259a <HAL_DMA_Abort+0xd8>
 800256e:	687b      	ldr	r3, [r7, #4]
 8002570:	681b      	ldr	r3, [r3, #0]
 8002572:	681b      	ldr	r3, [r3, #0]
 8002574:	f003 0301 	and.w	r3, r3, #1
 8002578:	2b00      	cmp	r3, #0
 800257a:	d1e4      	bne.n	8002546 <HAL_DMA_Abort+0x84>
 800257c:	687b      	ldr	r3, [r7, #4]
 800257e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002580:	223f      	movs	r2, #63	; 0x3f
 8002582:	409a      	lsls	r2, r3
 8002584:	68fb      	ldr	r3, [r7, #12]
 8002586:	609a      	str	r2, [r3, #8]
 8002588:	687b      	ldr	r3, [r7, #4]
 800258a:	2201      	movs	r2, #1
 800258c:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8002590:	687b      	ldr	r3, [r7, #4]
 8002592:	2200      	movs	r2, #0
 8002594:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8002598:	2300      	movs	r3, #0
 800259a:	4618      	mov	r0, r3
 800259c:	3710      	adds	r7, #16
 800259e:	46bd      	mov	sp, r7
 80025a0:	bd80      	pop	{r7, pc}

080025a2 <HAL_DMA_Abort_IT>:
 80025a2:	b480      	push	{r7}
 80025a4:	b083      	sub	sp, #12
 80025a6:	af00      	add	r7, sp, #0
 80025a8:	6078      	str	r0, [r7, #4]
 80025aa:	687b      	ldr	r3, [r7, #4]
 80025ac:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80025b0:	b2db      	uxtb	r3, r3
 80025b2:	2b02      	cmp	r3, #2
 80025b4:	d004      	beq.n	80025c0 <HAL_DMA_Abort_IT+0x1e>
 80025b6:	687b      	ldr	r3, [r7, #4]
 80025b8:	2280      	movs	r2, #128	; 0x80
 80025ba:	655a      	str	r2, [r3, #84]	; 0x54
 80025bc:	2301      	movs	r3, #1
 80025be:	e00c      	b.n	80025da <HAL_DMA_Abort_IT+0x38>
 80025c0:	687b      	ldr	r3, [r7, #4]
 80025c2:	2205      	movs	r2, #5
 80025c4:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80025c8:	687b      	ldr	r3, [r7, #4]
 80025ca:	681b      	ldr	r3, [r3, #0]
 80025cc:	681a      	ldr	r2, [r3, #0]
 80025ce:	687b      	ldr	r3, [r7, #4]
 80025d0:	681b      	ldr	r3, [r3, #0]
 80025d2:	f022 0201 	bic.w	r2, r2, #1
 80025d6:	601a      	str	r2, [r3, #0]
 80025d8:	2300      	movs	r3, #0
 80025da:	4618      	mov	r0, r3
 80025dc:	370c      	adds	r7, #12
 80025de:	46bd      	mov	sp, r7
 80025e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025e4:	4770      	bx	lr
	...

080025e8 <HAL_GPIO_Init>:
 80025e8:	b480      	push	{r7}
 80025ea:	b089      	sub	sp, #36	; 0x24
 80025ec:	af00      	add	r7, sp, #0
 80025ee:	6078      	str	r0, [r7, #4]
 80025f0:	6039      	str	r1, [r7, #0]
 80025f2:	2300      	movs	r3, #0
 80025f4:	617b      	str	r3, [r7, #20]
 80025f6:	2300      	movs	r3, #0
 80025f8:	613b      	str	r3, [r7, #16]
 80025fa:	2300      	movs	r3, #0
 80025fc:	61bb      	str	r3, [r7, #24]
 80025fe:	2300      	movs	r3, #0
 8002600:	61fb      	str	r3, [r7, #28]
 8002602:	e16b      	b.n	80028dc <HAL_GPIO_Init+0x2f4>
 8002604:	2201      	movs	r2, #1
 8002606:	69fb      	ldr	r3, [r7, #28]
 8002608:	fa02 f303 	lsl.w	r3, r2, r3
 800260c:	617b      	str	r3, [r7, #20]
 800260e:	683b      	ldr	r3, [r7, #0]
 8002610:	681b      	ldr	r3, [r3, #0]
 8002612:	697a      	ldr	r2, [r7, #20]
 8002614:	4013      	ands	r3, r2
 8002616:	613b      	str	r3, [r7, #16]
 8002618:	693a      	ldr	r2, [r7, #16]
 800261a:	697b      	ldr	r3, [r7, #20]
 800261c:	429a      	cmp	r2, r3
 800261e:	f040 815a 	bne.w	80028d6 <HAL_GPIO_Init+0x2ee>
 8002622:	683b      	ldr	r3, [r7, #0]
 8002624:	685b      	ldr	r3, [r3, #4]
 8002626:	f003 0303 	and.w	r3, r3, #3
 800262a:	2b01      	cmp	r3, #1
 800262c:	d005      	beq.n	800263a <HAL_GPIO_Init+0x52>
 800262e:	683b      	ldr	r3, [r7, #0]
 8002630:	685b      	ldr	r3, [r3, #4]
 8002632:	f003 0303 	and.w	r3, r3, #3
 8002636:	2b02      	cmp	r3, #2
 8002638:	d130      	bne.n	800269c <HAL_GPIO_Init+0xb4>
 800263a:	687b      	ldr	r3, [r7, #4]
 800263c:	689b      	ldr	r3, [r3, #8]
 800263e:	61bb      	str	r3, [r7, #24]
 8002640:	69fb      	ldr	r3, [r7, #28]
 8002642:	005b      	lsls	r3, r3, #1
 8002644:	2203      	movs	r2, #3
 8002646:	fa02 f303 	lsl.w	r3, r2, r3
 800264a:	43db      	mvns	r3, r3
 800264c:	69ba      	ldr	r2, [r7, #24]
 800264e:	4013      	ands	r3, r2
 8002650:	61bb      	str	r3, [r7, #24]
 8002652:	683b      	ldr	r3, [r7, #0]
 8002654:	68da      	ldr	r2, [r3, #12]
 8002656:	69fb      	ldr	r3, [r7, #28]
 8002658:	005b      	lsls	r3, r3, #1
 800265a:	fa02 f303 	lsl.w	r3, r2, r3
 800265e:	69ba      	ldr	r2, [r7, #24]
 8002660:	4313      	orrs	r3, r2
 8002662:	61bb      	str	r3, [r7, #24]
 8002664:	687b      	ldr	r3, [r7, #4]
 8002666:	69ba      	ldr	r2, [r7, #24]
 8002668:	609a      	str	r2, [r3, #8]
 800266a:	687b      	ldr	r3, [r7, #4]
 800266c:	685b      	ldr	r3, [r3, #4]
 800266e:	61bb      	str	r3, [r7, #24]
 8002670:	2201      	movs	r2, #1
 8002672:	69fb      	ldr	r3, [r7, #28]
 8002674:	fa02 f303 	lsl.w	r3, r2, r3
 8002678:	43db      	mvns	r3, r3
 800267a:	69ba      	ldr	r2, [r7, #24]
 800267c:	4013      	ands	r3, r2
 800267e:	61bb      	str	r3, [r7, #24]
 8002680:	683b      	ldr	r3, [r7, #0]
 8002682:	685b      	ldr	r3, [r3, #4]
 8002684:	091b      	lsrs	r3, r3, #4
 8002686:	f003 0201 	and.w	r2, r3, #1
 800268a:	69fb      	ldr	r3, [r7, #28]
 800268c:	fa02 f303 	lsl.w	r3, r2, r3
 8002690:	69ba      	ldr	r2, [r7, #24]
 8002692:	4313      	orrs	r3, r2
 8002694:	61bb      	str	r3, [r7, #24]
 8002696:	687b      	ldr	r3, [r7, #4]
 8002698:	69ba      	ldr	r2, [r7, #24]
 800269a:	605a      	str	r2, [r3, #4]
 800269c:	683b      	ldr	r3, [r7, #0]
 800269e:	685b      	ldr	r3, [r3, #4]
 80026a0:	f003 0303 	and.w	r3, r3, #3
 80026a4:	2b03      	cmp	r3, #3
 80026a6:	d017      	beq.n	80026d8 <HAL_GPIO_Init+0xf0>
 80026a8:	687b      	ldr	r3, [r7, #4]
 80026aa:	68db      	ldr	r3, [r3, #12]
 80026ac:	61bb      	str	r3, [r7, #24]
 80026ae:	69fb      	ldr	r3, [r7, #28]
 80026b0:	005b      	lsls	r3, r3, #1
 80026b2:	2203      	movs	r2, #3
 80026b4:	fa02 f303 	lsl.w	r3, r2, r3
 80026b8:	43db      	mvns	r3, r3
 80026ba:	69ba      	ldr	r2, [r7, #24]
 80026bc:	4013      	ands	r3, r2
 80026be:	61bb      	str	r3, [r7, #24]
 80026c0:	683b      	ldr	r3, [r7, #0]
 80026c2:	689a      	ldr	r2, [r3, #8]
 80026c4:	69fb      	ldr	r3, [r7, #28]
 80026c6:	005b      	lsls	r3, r3, #1
 80026c8:	fa02 f303 	lsl.w	r3, r2, r3
 80026cc:	69ba      	ldr	r2, [r7, #24]
 80026ce:	4313      	orrs	r3, r2
 80026d0:	61bb      	str	r3, [r7, #24]
 80026d2:	687b      	ldr	r3, [r7, #4]
 80026d4:	69ba      	ldr	r2, [r7, #24]
 80026d6:	60da      	str	r2, [r3, #12]
 80026d8:	683b      	ldr	r3, [r7, #0]
 80026da:	685b      	ldr	r3, [r3, #4]
 80026dc:	f003 0303 	and.w	r3, r3, #3
 80026e0:	2b02      	cmp	r3, #2
 80026e2:	d123      	bne.n	800272c <HAL_GPIO_Init+0x144>
 80026e4:	69fb      	ldr	r3, [r7, #28]
 80026e6:	08da      	lsrs	r2, r3, #3
 80026e8:	687b      	ldr	r3, [r7, #4]
 80026ea:	3208      	adds	r2, #8
 80026ec:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80026f0:	61bb      	str	r3, [r7, #24]
 80026f2:	69fb      	ldr	r3, [r7, #28]
 80026f4:	f003 0307 	and.w	r3, r3, #7
 80026f8:	009b      	lsls	r3, r3, #2
 80026fa:	220f      	movs	r2, #15
 80026fc:	fa02 f303 	lsl.w	r3, r2, r3
 8002700:	43db      	mvns	r3, r3
 8002702:	69ba      	ldr	r2, [r7, #24]
 8002704:	4013      	ands	r3, r2
 8002706:	61bb      	str	r3, [r7, #24]
 8002708:	683b      	ldr	r3, [r7, #0]
 800270a:	691a      	ldr	r2, [r3, #16]
 800270c:	69fb      	ldr	r3, [r7, #28]
 800270e:	f003 0307 	and.w	r3, r3, #7
 8002712:	009b      	lsls	r3, r3, #2
 8002714:	fa02 f303 	lsl.w	r3, r2, r3
 8002718:	69ba      	ldr	r2, [r7, #24]
 800271a:	4313      	orrs	r3, r2
 800271c:	61bb      	str	r3, [r7, #24]
 800271e:	69fb      	ldr	r3, [r7, #28]
 8002720:	08da      	lsrs	r2, r3, #3
 8002722:	687b      	ldr	r3, [r7, #4]
 8002724:	3208      	adds	r2, #8
 8002726:	69b9      	ldr	r1, [r7, #24]
 8002728:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800272c:	687b      	ldr	r3, [r7, #4]
 800272e:	681b      	ldr	r3, [r3, #0]
 8002730:	61bb      	str	r3, [r7, #24]
 8002732:	69fb      	ldr	r3, [r7, #28]
 8002734:	005b      	lsls	r3, r3, #1
 8002736:	2203      	movs	r2, #3
 8002738:	fa02 f303 	lsl.w	r3, r2, r3
 800273c:	43db      	mvns	r3, r3
 800273e:	69ba      	ldr	r2, [r7, #24]
 8002740:	4013      	ands	r3, r2
 8002742:	61bb      	str	r3, [r7, #24]
 8002744:	683b      	ldr	r3, [r7, #0]
 8002746:	685b      	ldr	r3, [r3, #4]
 8002748:	f003 0203 	and.w	r2, r3, #3
 800274c:	69fb      	ldr	r3, [r7, #28]
 800274e:	005b      	lsls	r3, r3, #1
 8002750:	fa02 f303 	lsl.w	r3, r2, r3
 8002754:	69ba      	ldr	r2, [r7, #24]
 8002756:	4313      	orrs	r3, r2
 8002758:	61bb      	str	r3, [r7, #24]
 800275a:	687b      	ldr	r3, [r7, #4]
 800275c:	69ba      	ldr	r2, [r7, #24]
 800275e:	601a      	str	r2, [r3, #0]
 8002760:	683b      	ldr	r3, [r7, #0]
 8002762:	685b      	ldr	r3, [r3, #4]
 8002764:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8002768:	2b00      	cmp	r3, #0
 800276a:	f000 80b4 	beq.w	80028d6 <HAL_GPIO_Init+0x2ee>
 800276e:	2300      	movs	r3, #0
 8002770:	60fb      	str	r3, [r7, #12]
 8002772:	4b60      	ldr	r3, [pc, #384]	; (80028f4 <HAL_GPIO_Init+0x30c>)
 8002774:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002776:	4a5f      	ldr	r2, [pc, #380]	; (80028f4 <HAL_GPIO_Init+0x30c>)
 8002778:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800277c:	6453      	str	r3, [r2, #68]	; 0x44
 800277e:	4b5d      	ldr	r3, [pc, #372]	; (80028f4 <HAL_GPIO_Init+0x30c>)
 8002780:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002782:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8002786:	60fb      	str	r3, [r7, #12]
 8002788:	68fb      	ldr	r3, [r7, #12]
 800278a:	4a5b      	ldr	r2, [pc, #364]	; (80028f8 <HAL_GPIO_Init+0x310>)
 800278c:	69fb      	ldr	r3, [r7, #28]
 800278e:	089b      	lsrs	r3, r3, #2
 8002790:	3302      	adds	r3, #2
 8002792:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002796:	61bb      	str	r3, [r7, #24]
 8002798:	69fb      	ldr	r3, [r7, #28]
 800279a:	f003 0303 	and.w	r3, r3, #3
 800279e:	009b      	lsls	r3, r3, #2
 80027a0:	220f      	movs	r2, #15
 80027a2:	fa02 f303 	lsl.w	r3, r2, r3
 80027a6:	43db      	mvns	r3, r3
 80027a8:	69ba      	ldr	r2, [r7, #24]
 80027aa:	4013      	ands	r3, r2
 80027ac:	61bb      	str	r3, [r7, #24]
 80027ae:	687b      	ldr	r3, [r7, #4]
 80027b0:	4a52      	ldr	r2, [pc, #328]	; (80028fc <HAL_GPIO_Init+0x314>)
 80027b2:	4293      	cmp	r3, r2
 80027b4:	d02b      	beq.n	800280e <HAL_GPIO_Init+0x226>
 80027b6:	687b      	ldr	r3, [r7, #4]
 80027b8:	4a51      	ldr	r2, [pc, #324]	; (8002900 <HAL_GPIO_Init+0x318>)
 80027ba:	4293      	cmp	r3, r2
 80027bc:	d025      	beq.n	800280a <HAL_GPIO_Init+0x222>
 80027be:	687b      	ldr	r3, [r7, #4]
 80027c0:	4a50      	ldr	r2, [pc, #320]	; (8002904 <HAL_GPIO_Init+0x31c>)
 80027c2:	4293      	cmp	r3, r2
 80027c4:	d01f      	beq.n	8002806 <HAL_GPIO_Init+0x21e>
 80027c6:	687b      	ldr	r3, [r7, #4]
 80027c8:	4a4f      	ldr	r2, [pc, #316]	; (8002908 <HAL_GPIO_Init+0x320>)
 80027ca:	4293      	cmp	r3, r2
 80027cc:	d019      	beq.n	8002802 <HAL_GPIO_Init+0x21a>
 80027ce:	687b      	ldr	r3, [r7, #4]
 80027d0:	4a4e      	ldr	r2, [pc, #312]	; (800290c <HAL_GPIO_Init+0x324>)
 80027d2:	4293      	cmp	r3, r2
 80027d4:	d013      	beq.n	80027fe <HAL_GPIO_Init+0x216>
 80027d6:	687b      	ldr	r3, [r7, #4]
 80027d8:	4a4d      	ldr	r2, [pc, #308]	; (8002910 <HAL_GPIO_Init+0x328>)
 80027da:	4293      	cmp	r3, r2
 80027dc:	d00d      	beq.n	80027fa <HAL_GPIO_Init+0x212>
 80027de:	687b      	ldr	r3, [r7, #4]
 80027e0:	4a4c      	ldr	r2, [pc, #304]	; (8002914 <HAL_GPIO_Init+0x32c>)
 80027e2:	4293      	cmp	r3, r2
 80027e4:	d007      	beq.n	80027f6 <HAL_GPIO_Init+0x20e>
 80027e6:	687b      	ldr	r3, [r7, #4]
 80027e8:	4a4b      	ldr	r2, [pc, #300]	; (8002918 <HAL_GPIO_Init+0x330>)
 80027ea:	4293      	cmp	r3, r2
 80027ec:	d101      	bne.n	80027f2 <HAL_GPIO_Init+0x20a>
 80027ee:	2307      	movs	r3, #7
 80027f0:	e00e      	b.n	8002810 <HAL_GPIO_Init+0x228>
 80027f2:	2308      	movs	r3, #8
 80027f4:	e00c      	b.n	8002810 <HAL_GPIO_Init+0x228>
 80027f6:	2306      	movs	r3, #6
 80027f8:	e00a      	b.n	8002810 <HAL_GPIO_Init+0x228>
 80027fa:	2305      	movs	r3, #5
 80027fc:	e008      	b.n	8002810 <HAL_GPIO_Init+0x228>
 80027fe:	2304      	movs	r3, #4
 8002800:	e006      	b.n	8002810 <HAL_GPIO_Init+0x228>
 8002802:	2303      	movs	r3, #3
 8002804:	e004      	b.n	8002810 <HAL_GPIO_Init+0x228>
 8002806:	2302      	movs	r3, #2
 8002808:	e002      	b.n	8002810 <HAL_GPIO_Init+0x228>
 800280a:	2301      	movs	r3, #1
 800280c:	e000      	b.n	8002810 <HAL_GPIO_Init+0x228>
 800280e:	2300      	movs	r3, #0
 8002810:	69fa      	ldr	r2, [r7, #28]
 8002812:	f002 0203 	and.w	r2, r2, #3
 8002816:	0092      	lsls	r2, r2, #2
 8002818:	4093      	lsls	r3, r2
 800281a:	69ba      	ldr	r2, [r7, #24]
 800281c:	4313      	orrs	r3, r2
 800281e:	61bb      	str	r3, [r7, #24]
 8002820:	4935      	ldr	r1, [pc, #212]	; (80028f8 <HAL_GPIO_Init+0x310>)
 8002822:	69fb      	ldr	r3, [r7, #28]
 8002824:	089b      	lsrs	r3, r3, #2
 8002826:	3302      	adds	r3, #2
 8002828:	69ba      	ldr	r2, [r7, #24]
 800282a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800282e:	4b3b      	ldr	r3, [pc, #236]	; (800291c <HAL_GPIO_Init+0x334>)
 8002830:	689b      	ldr	r3, [r3, #8]
 8002832:	61bb      	str	r3, [r7, #24]
 8002834:	693b      	ldr	r3, [r7, #16]
 8002836:	43db      	mvns	r3, r3
 8002838:	69ba      	ldr	r2, [r7, #24]
 800283a:	4013      	ands	r3, r2
 800283c:	61bb      	str	r3, [r7, #24]
 800283e:	683b      	ldr	r3, [r7, #0]
 8002840:	685b      	ldr	r3, [r3, #4]
 8002842:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8002846:	2b00      	cmp	r3, #0
 8002848:	d003      	beq.n	8002852 <HAL_GPIO_Init+0x26a>
 800284a:	69ba      	ldr	r2, [r7, #24]
 800284c:	693b      	ldr	r3, [r7, #16]
 800284e:	4313      	orrs	r3, r2
 8002850:	61bb      	str	r3, [r7, #24]
 8002852:	4a32      	ldr	r2, [pc, #200]	; (800291c <HAL_GPIO_Init+0x334>)
 8002854:	69bb      	ldr	r3, [r7, #24]
 8002856:	6093      	str	r3, [r2, #8]
 8002858:	4b30      	ldr	r3, [pc, #192]	; (800291c <HAL_GPIO_Init+0x334>)
 800285a:	68db      	ldr	r3, [r3, #12]
 800285c:	61bb      	str	r3, [r7, #24]
 800285e:	693b      	ldr	r3, [r7, #16]
 8002860:	43db      	mvns	r3, r3
 8002862:	69ba      	ldr	r2, [r7, #24]
 8002864:	4013      	ands	r3, r2
 8002866:	61bb      	str	r3, [r7, #24]
 8002868:	683b      	ldr	r3, [r7, #0]
 800286a:	685b      	ldr	r3, [r3, #4]
 800286c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8002870:	2b00      	cmp	r3, #0
 8002872:	d003      	beq.n	800287c <HAL_GPIO_Init+0x294>
 8002874:	69ba      	ldr	r2, [r7, #24]
 8002876:	693b      	ldr	r3, [r7, #16]
 8002878:	4313      	orrs	r3, r2
 800287a:	61bb      	str	r3, [r7, #24]
 800287c:	4a27      	ldr	r2, [pc, #156]	; (800291c <HAL_GPIO_Init+0x334>)
 800287e:	69bb      	ldr	r3, [r7, #24]
 8002880:	60d3      	str	r3, [r2, #12]
 8002882:	4b26      	ldr	r3, [pc, #152]	; (800291c <HAL_GPIO_Init+0x334>)
 8002884:	685b      	ldr	r3, [r3, #4]
 8002886:	61bb      	str	r3, [r7, #24]
 8002888:	693b      	ldr	r3, [r7, #16]
 800288a:	43db      	mvns	r3, r3
 800288c:	69ba      	ldr	r2, [r7, #24]
 800288e:	4013      	ands	r3, r2
 8002890:	61bb      	str	r3, [r7, #24]
 8002892:	683b      	ldr	r3, [r7, #0]
 8002894:	685b      	ldr	r3, [r3, #4]
 8002896:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800289a:	2b00      	cmp	r3, #0
 800289c:	d003      	beq.n	80028a6 <HAL_GPIO_Init+0x2be>
 800289e:	69ba      	ldr	r2, [r7, #24]
 80028a0:	693b      	ldr	r3, [r7, #16]
 80028a2:	4313      	orrs	r3, r2
 80028a4:	61bb      	str	r3, [r7, #24]
 80028a6:	4a1d      	ldr	r2, [pc, #116]	; (800291c <HAL_GPIO_Init+0x334>)
 80028a8:	69bb      	ldr	r3, [r7, #24]
 80028aa:	6053      	str	r3, [r2, #4]
 80028ac:	4b1b      	ldr	r3, [pc, #108]	; (800291c <HAL_GPIO_Init+0x334>)
 80028ae:	681b      	ldr	r3, [r3, #0]
 80028b0:	61bb      	str	r3, [r7, #24]
 80028b2:	693b      	ldr	r3, [r7, #16]
 80028b4:	43db      	mvns	r3, r3
 80028b6:	69ba      	ldr	r2, [r7, #24]
 80028b8:	4013      	ands	r3, r2
 80028ba:	61bb      	str	r3, [r7, #24]
 80028bc:	683b      	ldr	r3, [r7, #0]
 80028be:	685b      	ldr	r3, [r3, #4]
 80028c0:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80028c4:	2b00      	cmp	r3, #0
 80028c6:	d003      	beq.n	80028d0 <HAL_GPIO_Init+0x2e8>
 80028c8:	69ba      	ldr	r2, [r7, #24]
 80028ca:	693b      	ldr	r3, [r7, #16]
 80028cc:	4313      	orrs	r3, r2
 80028ce:	61bb      	str	r3, [r7, #24]
 80028d0:	4a12      	ldr	r2, [pc, #72]	; (800291c <HAL_GPIO_Init+0x334>)
 80028d2:	69bb      	ldr	r3, [r7, #24]
 80028d4:	6013      	str	r3, [r2, #0]
 80028d6:	69fb      	ldr	r3, [r7, #28]
 80028d8:	3301      	adds	r3, #1
 80028da:	61fb      	str	r3, [r7, #28]
 80028dc:	69fb      	ldr	r3, [r7, #28]
 80028de:	2b0f      	cmp	r3, #15
 80028e0:	f67f ae90 	bls.w	8002604 <HAL_GPIO_Init+0x1c>
 80028e4:	bf00      	nop
 80028e6:	bf00      	nop
 80028e8:	3724      	adds	r7, #36	; 0x24
 80028ea:	46bd      	mov	sp, r7
 80028ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028f0:	4770      	bx	lr
 80028f2:	bf00      	nop
 80028f4:	40023800 	.word	0x40023800
 80028f8:	40013800 	.word	0x40013800
 80028fc:	40020000 	.word	0x40020000
 8002900:	40020400 	.word	0x40020400
 8002904:	40020800 	.word	0x40020800
 8002908:	40020c00 	.word	0x40020c00
 800290c:	40021000 	.word	0x40021000
 8002910:	40021400 	.word	0x40021400
 8002914:	40021800 	.word	0x40021800
 8002918:	40021c00 	.word	0x40021c00
 800291c:	40013c00 	.word	0x40013c00

08002920 <HAL_GPIO_WritePin>:
 8002920:	b480      	push	{r7}
 8002922:	b083      	sub	sp, #12
 8002924:	af00      	add	r7, sp, #0
 8002926:	6078      	str	r0, [r7, #4]
 8002928:	460b      	mov	r3, r1
 800292a:	807b      	strh	r3, [r7, #2]
 800292c:	4613      	mov	r3, r2
 800292e:	707b      	strb	r3, [r7, #1]
 8002930:	787b      	ldrb	r3, [r7, #1]
 8002932:	2b00      	cmp	r3, #0
 8002934:	d003      	beq.n	800293e <HAL_GPIO_WritePin+0x1e>
 8002936:	887a      	ldrh	r2, [r7, #2]
 8002938:	687b      	ldr	r3, [r7, #4]
 800293a:	619a      	str	r2, [r3, #24]
 800293c:	e003      	b.n	8002946 <HAL_GPIO_WritePin+0x26>
 800293e:	887b      	ldrh	r3, [r7, #2]
 8002940:	041a      	lsls	r2, r3, #16
 8002942:	687b      	ldr	r3, [r7, #4]
 8002944:	619a      	str	r2, [r3, #24]
 8002946:	bf00      	nop
 8002948:	370c      	adds	r7, #12
 800294a:	46bd      	mov	sp, r7
 800294c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002950:	4770      	bx	lr
	...

08002954 <HAL_RCC_OscConfig>:
 8002954:	b580      	push	{r7, lr}
 8002956:	b086      	sub	sp, #24
 8002958:	af00      	add	r7, sp, #0
 800295a:	6078      	str	r0, [r7, #4]
 800295c:	687b      	ldr	r3, [r7, #4]
 800295e:	2b00      	cmp	r3, #0
 8002960:	d101      	bne.n	8002966 <HAL_RCC_OscConfig+0x12>
 8002962:	2301      	movs	r3, #1
 8002964:	e267      	b.n	8002e36 <HAL_RCC_OscConfig+0x4e2>
 8002966:	687b      	ldr	r3, [r7, #4]
 8002968:	681b      	ldr	r3, [r3, #0]
 800296a:	f003 0301 	and.w	r3, r3, #1
 800296e:	2b00      	cmp	r3, #0
 8002970:	d075      	beq.n	8002a5e <HAL_RCC_OscConfig+0x10a>
 8002972:	4b88      	ldr	r3, [pc, #544]	; (8002b94 <HAL_RCC_OscConfig+0x240>)
 8002974:	689b      	ldr	r3, [r3, #8]
 8002976:	f003 030c 	and.w	r3, r3, #12
 800297a:	2b04      	cmp	r3, #4
 800297c:	d00c      	beq.n	8002998 <HAL_RCC_OscConfig+0x44>
 800297e:	4b85      	ldr	r3, [pc, #532]	; (8002b94 <HAL_RCC_OscConfig+0x240>)
 8002980:	689b      	ldr	r3, [r3, #8]
 8002982:	f003 030c 	and.w	r3, r3, #12
 8002986:	2b08      	cmp	r3, #8
 8002988:	d112      	bne.n	80029b0 <HAL_RCC_OscConfig+0x5c>
 800298a:	4b82      	ldr	r3, [pc, #520]	; (8002b94 <HAL_RCC_OscConfig+0x240>)
 800298c:	685b      	ldr	r3, [r3, #4]
 800298e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8002992:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8002996:	d10b      	bne.n	80029b0 <HAL_RCC_OscConfig+0x5c>
 8002998:	4b7e      	ldr	r3, [pc, #504]	; (8002b94 <HAL_RCC_OscConfig+0x240>)
 800299a:	681b      	ldr	r3, [r3, #0]
 800299c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80029a0:	2b00      	cmp	r3, #0
 80029a2:	d05b      	beq.n	8002a5c <HAL_RCC_OscConfig+0x108>
 80029a4:	687b      	ldr	r3, [r7, #4]
 80029a6:	685b      	ldr	r3, [r3, #4]
 80029a8:	2b00      	cmp	r3, #0
 80029aa:	d157      	bne.n	8002a5c <HAL_RCC_OscConfig+0x108>
 80029ac:	2301      	movs	r3, #1
 80029ae:	e242      	b.n	8002e36 <HAL_RCC_OscConfig+0x4e2>
 80029b0:	687b      	ldr	r3, [r7, #4]
 80029b2:	685b      	ldr	r3, [r3, #4]
 80029b4:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80029b8:	d106      	bne.n	80029c8 <HAL_RCC_OscConfig+0x74>
 80029ba:	4b76      	ldr	r3, [pc, #472]	; (8002b94 <HAL_RCC_OscConfig+0x240>)
 80029bc:	681b      	ldr	r3, [r3, #0]
 80029be:	4a75      	ldr	r2, [pc, #468]	; (8002b94 <HAL_RCC_OscConfig+0x240>)
 80029c0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80029c4:	6013      	str	r3, [r2, #0]
 80029c6:	e01d      	b.n	8002a04 <HAL_RCC_OscConfig+0xb0>
 80029c8:	687b      	ldr	r3, [r7, #4]
 80029ca:	685b      	ldr	r3, [r3, #4]
 80029cc:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80029d0:	d10c      	bne.n	80029ec <HAL_RCC_OscConfig+0x98>
 80029d2:	4b70      	ldr	r3, [pc, #448]	; (8002b94 <HAL_RCC_OscConfig+0x240>)
 80029d4:	681b      	ldr	r3, [r3, #0]
 80029d6:	4a6f      	ldr	r2, [pc, #444]	; (8002b94 <HAL_RCC_OscConfig+0x240>)
 80029d8:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80029dc:	6013      	str	r3, [r2, #0]
 80029de:	4b6d      	ldr	r3, [pc, #436]	; (8002b94 <HAL_RCC_OscConfig+0x240>)
 80029e0:	681b      	ldr	r3, [r3, #0]
 80029e2:	4a6c      	ldr	r2, [pc, #432]	; (8002b94 <HAL_RCC_OscConfig+0x240>)
 80029e4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80029e8:	6013      	str	r3, [r2, #0]
 80029ea:	e00b      	b.n	8002a04 <HAL_RCC_OscConfig+0xb0>
 80029ec:	4b69      	ldr	r3, [pc, #420]	; (8002b94 <HAL_RCC_OscConfig+0x240>)
 80029ee:	681b      	ldr	r3, [r3, #0]
 80029f0:	4a68      	ldr	r2, [pc, #416]	; (8002b94 <HAL_RCC_OscConfig+0x240>)
 80029f2:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80029f6:	6013      	str	r3, [r2, #0]
 80029f8:	4b66      	ldr	r3, [pc, #408]	; (8002b94 <HAL_RCC_OscConfig+0x240>)
 80029fa:	681b      	ldr	r3, [r3, #0]
 80029fc:	4a65      	ldr	r2, [pc, #404]	; (8002b94 <HAL_RCC_OscConfig+0x240>)
 80029fe:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8002a02:	6013      	str	r3, [r2, #0]
 8002a04:	687b      	ldr	r3, [r7, #4]
 8002a06:	685b      	ldr	r3, [r3, #4]
 8002a08:	2b00      	cmp	r3, #0
 8002a0a:	d013      	beq.n	8002a34 <HAL_RCC_OscConfig+0xe0>
 8002a0c:	f7ff fc18 	bl	8002240 <HAL_GetTick>
 8002a10:	6138      	str	r0, [r7, #16]
 8002a12:	e008      	b.n	8002a26 <HAL_RCC_OscConfig+0xd2>
 8002a14:	f7ff fc14 	bl	8002240 <HAL_GetTick>
 8002a18:	4602      	mov	r2, r0
 8002a1a:	693b      	ldr	r3, [r7, #16]
 8002a1c:	1ad3      	subs	r3, r2, r3
 8002a1e:	2b64      	cmp	r3, #100	; 0x64
 8002a20:	d901      	bls.n	8002a26 <HAL_RCC_OscConfig+0xd2>
 8002a22:	2303      	movs	r3, #3
 8002a24:	e207      	b.n	8002e36 <HAL_RCC_OscConfig+0x4e2>
 8002a26:	4b5b      	ldr	r3, [pc, #364]	; (8002b94 <HAL_RCC_OscConfig+0x240>)
 8002a28:	681b      	ldr	r3, [r3, #0]
 8002a2a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002a2e:	2b00      	cmp	r3, #0
 8002a30:	d0f0      	beq.n	8002a14 <HAL_RCC_OscConfig+0xc0>
 8002a32:	e014      	b.n	8002a5e <HAL_RCC_OscConfig+0x10a>
 8002a34:	f7ff fc04 	bl	8002240 <HAL_GetTick>
 8002a38:	6138      	str	r0, [r7, #16]
 8002a3a:	e008      	b.n	8002a4e <HAL_RCC_OscConfig+0xfa>
 8002a3c:	f7ff fc00 	bl	8002240 <HAL_GetTick>
 8002a40:	4602      	mov	r2, r0
 8002a42:	693b      	ldr	r3, [r7, #16]
 8002a44:	1ad3      	subs	r3, r2, r3
 8002a46:	2b64      	cmp	r3, #100	; 0x64
 8002a48:	d901      	bls.n	8002a4e <HAL_RCC_OscConfig+0xfa>
 8002a4a:	2303      	movs	r3, #3
 8002a4c:	e1f3      	b.n	8002e36 <HAL_RCC_OscConfig+0x4e2>
 8002a4e:	4b51      	ldr	r3, [pc, #324]	; (8002b94 <HAL_RCC_OscConfig+0x240>)
 8002a50:	681b      	ldr	r3, [r3, #0]
 8002a52:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002a56:	2b00      	cmp	r3, #0
 8002a58:	d1f0      	bne.n	8002a3c <HAL_RCC_OscConfig+0xe8>
 8002a5a:	e000      	b.n	8002a5e <HAL_RCC_OscConfig+0x10a>
 8002a5c:	bf00      	nop
 8002a5e:	687b      	ldr	r3, [r7, #4]
 8002a60:	681b      	ldr	r3, [r3, #0]
 8002a62:	f003 0302 	and.w	r3, r3, #2
 8002a66:	2b00      	cmp	r3, #0
 8002a68:	d063      	beq.n	8002b32 <HAL_RCC_OscConfig+0x1de>
 8002a6a:	4b4a      	ldr	r3, [pc, #296]	; (8002b94 <HAL_RCC_OscConfig+0x240>)
 8002a6c:	689b      	ldr	r3, [r3, #8]
 8002a6e:	f003 030c 	and.w	r3, r3, #12
 8002a72:	2b00      	cmp	r3, #0
 8002a74:	d00b      	beq.n	8002a8e <HAL_RCC_OscConfig+0x13a>
 8002a76:	4b47      	ldr	r3, [pc, #284]	; (8002b94 <HAL_RCC_OscConfig+0x240>)
 8002a78:	689b      	ldr	r3, [r3, #8]
 8002a7a:	f003 030c 	and.w	r3, r3, #12
 8002a7e:	2b08      	cmp	r3, #8
 8002a80:	d11c      	bne.n	8002abc <HAL_RCC_OscConfig+0x168>
 8002a82:	4b44      	ldr	r3, [pc, #272]	; (8002b94 <HAL_RCC_OscConfig+0x240>)
 8002a84:	685b      	ldr	r3, [r3, #4]
 8002a86:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8002a8a:	2b00      	cmp	r3, #0
 8002a8c:	d116      	bne.n	8002abc <HAL_RCC_OscConfig+0x168>
 8002a8e:	4b41      	ldr	r3, [pc, #260]	; (8002b94 <HAL_RCC_OscConfig+0x240>)
 8002a90:	681b      	ldr	r3, [r3, #0]
 8002a92:	f003 0302 	and.w	r3, r3, #2
 8002a96:	2b00      	cmp	r3, #0
 8002a98:	d005      	beq.n	8002aa6 <HAL_RCC_OscConfig+0x152>
 8002a9a:	687b      	ldr	r3, [r7, #4]
 8002a9c:	68db      	ldr	r3, [r3, #12]
 8002a9e:	2b01      	cmp	r3, #1
 8002aa0:	d001      	beq.n	8002aa6 <HAL_RCC_OscConfig+0x152>
 8002aa2:	2301      	movs	r3, #1
 8002aa4:	e1c7      	b.n	8002e36 <HAL_RCC_OscConfig+0x4e2>
 8002aa6:	4b3b      	ldr	r3, [pc, #236]	; (8002b94 <HAL_RCC_OscConfig+0x240>)
 8002aa8:	681b      	ldr	r3, [r3, #0]
 8002aaa:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8002aae:	687b      	ldr	r3, [r7, #4]
 8002ab0:	691b      	ldr	r3, [r3, #16]
 8002ab2:	00db      	lsls	r3, r3, #3
 8002ab4:	4937      	ldr	r1, [pc, #220]	; (8002b94 <HAL_RCC_OscConfig+0x240>)
 8002ab6:	4313      	orrs	r3, r2
 8002ab8:	600b      	str	r3, [r1, #0]
 8002aba:	e03a      	b.n	8002b32 <HAL_RCC_OscConfig+0x1de>
 8002abc:	687b      	ldr	r3, [r7, #4]
 8002abe:	68db      	ldr	r3, [r3, #12]
 8002ac0:	2b00      	cmp	r3, #0
 8002ac2:	d020      	beq.n	8002b06 <HAL_RCC_OscConfig+0x1b2>
 8002ac4:	4b34      	ldr	r3, [pc, #208]	; (8002b98 <HAL_RCC_OscConfig+0x244>)
 8002ac6:	2201      	movs	r2, #1
 8002ac8:	601a      	str	r2, [r3, #0]
 8002aca:	f7ff fbb9 	bl	8002240 <HAL_GetTick>
 8002ace:	6138      	str	r0, [r7, #16]
 8002ad0:	e008      	b.n	8002ae4 <HAL_RCC_OscConfig+0x190>
 8002ad2:	f7ff fbb5 	bl	8002240 <HAL_GetTick>
 8002ad6:	4602      	mov	r2, r0
 8002ad8:	693b      	ldr	r3, [r7, #16]
 8002ada:	1ad3      	subs	r3, r2, r3
 8002adc:	2b02      	cmp	r3, #2
 8002ade:	d901      	bls.n	8002ae4 <HAL_RCC_OscConfig+0x190>
 8002ae0:	2303      	movs	r3, #3
 8002ae2:	e1a8      	b.n	8002e36 <HAL_RCC_OscConfig+0x4e2>
 8002ae4:	4b2b      	ldr	r3, [pc, #172]	; (8002b94 <HAL_RCC_OscConfig+0x240>)
 8002ae6:	681b      	ldr	r3, [r3, #0]
 8002ae8:	f003 0302 	and.w	r3, r3, #2
 8002aec:	2b00      	cmp	r3, #0
 8002aee:	d0f0      	beq.n	8002ad2 <HAL_RCC_OscConfig+0x17e>
 8002af0:	4b28      	ldr	r3, [pc, #160]	; (8002b94 <HAL_RCC_OscConfig+0x240>)
 8002af2:	681b      	ldr	r3, [r3, #0]
 8002af4:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8002af8:	687b      	ldr	r3, [r7, #4]
 8002afa:	691b      	ldr	r3, [r3, #16]
 8002afc:	00db      	lsls	r3, r3, #3
 8002afe:	4925      	ldr	r1, [pc, #148]	; (8002b94 <HAL_RCC_OscConfig+0x240>)
 8002b00:	4313      	orrs	r3, r2
 8002b02:	600b      	str	r3, [r1, #0]
 8002b04:	e015      	b.n	8002b32 <HAL_RCC_OscConfig+0x1de>
 8002b06:	4b24      	ldr	r3, [pc, #144]	; (8002b98 <HAL_RCC_OscConfig+0x244>)
 8002b08:	2200      	movs	r2, #0
 8002b0a:	601a      	str	r2, [r3, #0]
 8002b0c:	f7ff fb98 	bl	8002240 <HAL_GetTick>
 8002b10:	6138      	str	r0, [r7, #16]
 8002b12:	e008      	b.n	8002b26 <HAL_RCC_OscConfig+0x1d2>
 8002b14:	f7ff fb94 	bl	8002240 <HAL_GetTick>
 8002b18:	4602      	mov	r2, r0
 8002b1a:	693b      	ldr	r3, [r7, #16]
 8002b1c:	1ad3      	subs	r3, r2, r3
 8002b1e:	2b02      	cmp	r3, #2
 8002b20:	d901      	bls.n	8002b26 <HAL_RCC_OscConfig+0x1d2>
 8002b22:	2303      	movs	r3, #3
 8002b24:	e187      	b.n	8002e36 <HAL_RCC_OscConfig+0x4e2>
 8002b26:	4b1b      	ldr	r3, [pc, #108]	; (8002b94 <HAL_RCC_OscConfig+0x240>)
 8002b28:	681b      	ldr	r3, [r3, #0]
 8002b2a:	f003 0302 	and.w	r3, r3, #2
 8002b2e:	2b00      	cmp	r3, #0
 8002b30:	d1f0      	bne.n	8002b14 <HAL_RCC_OscConfig+0x1c0>
 8002b32:	687b      	ldr	r3, [r7, #4]
 8002b34:	681b      	ldr	r3, [r3, #0]
 8002b36:	f003 0308 	and.w	r3, r3, #8
 8002b3a:	2b00      	cmp	r3, #0
 8002b3c:	d036      	beq.n	8002bac <HAL_RCC_OscConfig+0x258>
 8002b3e:	687b      	ldr	r3, [r7, #4]
 8002b40:	695b      	ldr	r3, [r3, #20]
 8002b42:	2b00      	cmp	r3, #0
 8002b44:	d016      	beq.n	8002b74 <HAL_RCC_OscConfig+0x220>
 8002b46:	4b15      	ldr	r3, [pc, #84]	; (8002b9c <HAL_RCC_OscConfig+0x248>)
 8002b48:	2201      	movs	r2, #1
 8002b4a:	601a      	str	r2, [r3, #0]
 8002b4c:	f7ff fb78 	bl	8002240 <HAL_GetTick>
 8002b50:	6138      	str	r0, [r7, #16]
 8002b52:	e008      	b.n	8002b66 <HAL_RCC_OscConfig+0x212>
 8002b54:	f7ff fb74 	bl	8002240 <HAL_GetTick>
 8002b58:	4602      	mov	r2, r0
 8002b5a:	693b      	ldr	r3, [r7, #16]
 8002b5c:	1ad3      	subs	r3, r2, r3
 8002b5e:	2b02      	cmp	r3, #2
 8002b60:	d901      	bls.n	8002b66 <HAL_RCC_OscConfig+0x212>
 8002b62:	2303      	movs	r3, #3
 8002b64:	e167      	b.n	8002e36 <HAL_RCC_OscConfig+0x4e2>
 8002b66:	4b0b      	ldr	r3, [pc, #44]	; (8002b94 <HAL_RCC_OscConfig+0x240>)
 8002b68:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8002b6a:	f003 0302 	and.w	r3, r3, #2
 8002b6e:	2b00      	cmp	r3, #0
 8002b70:	d0f0      	beq.n	8002b54 <HAL_RCC_OscConfig+0x200>
 8002b72:	e01b      	b.n	8002bac <HAL_RCC_OscConfig+0x258>
 8002b74:	4b09      	ldr	r3, [pc, #36]	; (8002b9c <HAL_RCC_OscConfig+0x248>)
 8002b76:	2200      	movs	r2, #0
 8002b78:	601a      	str	r2, [r3, #0]
 8002b7a:	f7ff fb61 	bl	8002240 <HAL_GetTick>
 8002b7e:	6138      	str	r0, [r7, #16]
 8002b80:	e00e      	b.n	8002ba0 <HAL_RCC_OscConfig+0x24c>
 8002b82:	f7ff fb5d 	bl	8002240 <HAL_GetTick>
 8002b86:	4602      	mov	r2, r0
 8002b88:	693b      	ldr	r3, [r7, #16]
 8002b8a:	1ad3      	subs	r3, r2, r3
 8002b8c:	2b02      	cmp	r3, #2
 8002b8e:	d907      	bls.n	8002ba0 <HAL_RCC_OscConfig+0x24c>
 8002b90:	2303      	movs	r3, #3
 8002b92:	e150      	b.n	8002e36 <HAL_RCC_OscConfig+0x4e2>
 8002b94:	40023800 	.word	0x40023800
 8002b98:	42470000 	.word	0x42470000
 8002b9c:	42470e80 	.word	0x42470e80
 8002ba0:	4b88      	ldr	r3, [pc, #544]	; (8002dc4 <HAL_RCC_OscConfig+0x470>)
 8002ba2:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8002ba4:	f003 0302 	and.w	r3, r3, #2
 8002ba8:	2b00      	cmp	r3, #0
 8002baa:	d1ea      	bne.n	8002b82 <HAL_RCC_OscConfig+0x22e>
 8002bac:	687b      	ldr	r3, [r7, #4]
 8002bae:	681b      	ldr	r3, [r3, #0]
 8002bb0:	f003 0304 	and.w	r3, r3, #4
 8002bb4:	2b00      	cmp	r3, #0
 8002bb6:	f000 8097 	beq.w	8002ce8 <HAL_RCC_OscConfig+0x394>
 8002bba:	2300      	movs	r3, #0
 8002bbc:	75fb      	strb	r3, [r7, #23]
 8002bbe:	4b81      	ldr	r3, [pc, #516]	; (8002dc4 <HAL_RCC_OscConfig+0x470>)
 8002bc0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002bc2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002bc6:	2b00      	cmp	r3, #0
 8002bc8:	d10f      	bne.n	8002bea <HAL_RCC_OscConfig+0x296>
 8002bca:	2300      	movs	r3, #0
 8002bcc:	60bb      	str	r3, [r7, #8]
 8002bce:	4b7d      	ldr	r3, [pc, #500]	; (8002dc4 <HAL_RCC_OscConfig+0x470>)
 8002bd0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002bd2:	4a7c      	ldr	r2, [pc, #496]	; (8002dc4 <HAL_RCC_OscConfig+0x470>)
 8002bd4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002bd8:	6413      	str	r3, [r2, #64]	; 0x40
 8002bda:	4b7a      	ldr	r3, [pc, #488]	; (8002dc4 <HAL_RCC_OscConfig+0x470>)
 8002bdc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002bde:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002be2:	60bb      	str	r3, [r7, #8]
 8002be4:	68bb      	ldr	r3, [r7, #8]
 8002be6:	2301      	movs	r3, #1
 8002be8:	75fb      	strb	r3, [r7, #23]
 8002bea:	4b77      	ldr	r3, [pc, #476]	; (8002dc8 <HAL_RCC_OscConfig+0x474>)
 8002bec:	681b      	ldr	r3, [r3, #0]
 8002bee:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002bf2:	2b00      	cmp	r3, #0
 8002bf4:	d118      	bne.n	8002c28 <HAL_RCC_OscConfig+0x2d4>
 8002bf6:	4b74      	ldr	r3, [pc, #464]	; (8002dc8 <HAL_RCC_OscConfig+0x474>)
 8002bf8:	681b      	ldr	r3, [r3, #0]
 8002bfa:	4a73      	ldr	r2, [pc, #460]	; (8002dc8 <HAL_RCC_OscConfig+0x474>)
 8002bfc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002c00:	6013      	str	r3, [r2, #0]
 8002c02:	f7ff fb1d 	bl	8002240 <HAL_GetTick>
 8002c06:	6138      	str	r0, [r7, #16]
 8002c08:	e008      	b.n	8002c1c <HAL_RCC_OscConfig+0x2c8>
 8002c0a:	f7ff fb19 	bl	8002240 <HAL_GetTick>
 8002c0e:	4602      	mov	r2, r0
 8002c10:	693b      	ldr	r3, [r7, #16]
 8002c12:	1ad3      	subs	r3, r2, r3
 8002c14:	2b02      	cmp	r3, #2
 8002c16:	d901      	bls.n	8002c1c <HAL_RCC_OscConfig+0x2c8>
 8002c18:	2303      	movs	r3, #3
 8002c1a:	e10c      	b.n	8002e36 <HAL_RCC_OscConfig+0x4e2>
 8002c1c:	4b6a      	ldr	r3, [pc, #424]	; (8002dc8 <HAL_RCC_OscConfig+0x474>)
 8002c1e:	681b      	ldr	r3, [r3, #0]
 8002c20:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002c24:	2b00      	cmp	r3, #0
 8002c26:	d0f0      	beq.n	8002c0a <HAL_RCC_OscConfig+0x2b6>
 8002c28:	687b      	ldr	r3, [r7, #4]
 8002c2a:	689b      	ldr	r3, [r3, #8]
 8002c2c:	2b01      	cmp	r3, #1
 8002c2e:	d106      	bne.n	8002c3e <HAL_RCC_OscConfig+0x2ea>
 8002c30:	4b64      	ldr	r3, [pc, #400]	; (8002dc4 <HAL_RCC_OscConfig+0x470>)
 8002c32:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002c34:	4a63      	ldr	r2, [pc, #396]	; (8002dc4 <HAL_RCC_OscConfig+0x470>)
 8002c36:	f043 0301 	orr.w	r3, r3, #1
 8002c3a:	6713      	str	r3, [r2, #112]	; 0x70
 8002c3c:	e01c      	b.n	8002c78 <HAL_RCC_OscConfig+0x324>
 8002c3e:	687b      	ldr	r3, [r7, #4]
 8002c40:	689b      	ldr	r3, [r3, #8]
 8002c42:	2b05      	cmp	r3, #5
 8002c44:	d10c      	bne.n	8002c60 <HAL_RCC_OscConfig+0x30c>
 8002c46:	4b5f      	ldr	r3, [pc, #380]	; (8002dc4 <HAL_RCC_OscConfig+0x470>)
 8002c48:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002c4a:	4a5e      	ldr	r2, [pc, #376]	; (8002dc4 <HAL_RCC_OscConfig+0x470>)
 8002c4c:	f043 0304 	orr.w	r3, r3, #4
 8002c50:	6713      	str	r3, [r2, #112]	; 0x70
 8002c52:	4b5c      	ldr	r3, [pc, #368]	; (8002dc4 <HAL_RCC_OscConfig+0x470>)
 8002c54:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002c56:	4a5b      	ldr	r2, [pc, #364]	; (8002dc4 <HAL_RCC_OscConfig+0x470>)
 8002c58:	f043 0301 	orr.w	r3, r3, #1
 8002c5c:	6713      	str	r3, [r2, #112]	; 0x70
 8002c5e:	e00b      	b.n	8002c78 <HAL_RCC_OscConfig+0x324>
 8002c60:	4b58      	ldr	r3, [pc, #352]	; (8002dc4 <HAL_RCC_OscConfig+0x470>)
 8002c62:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002c64:	4a57      	ldr	r2, [pc, #348]	; (8002dc4 <HAL_RCC_OscConfig+0x470>)
 8002c66:	f023 0301 	bic.w	r3, r3, #1
 8002c6a:	6713      	str	r3, [r2, #112]	; 0x70
 8002c6c:	4b55      	ldr	r3, [pc, #340]	; (8002dc4 <HAL_RCC_OscConfig+0x470>)
 8002c6e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002c70:	4a54      	ldr	r2, [pc, #336]	; (8002dc4 <HAL_RCC_OscConfig+0x470>)
 8002c72:	f023 0304 	bic.w	r3, r3, #4
 8002c76:	6713      	str	r3, [r2, #112]	; 0x70
 8002c78:	687b      	ldr	r3, [r7, #4]
 8002c7a:	689b      	ldr	r3, [r3, #8]
 8002c7c:	2b00      	cmp	r3, #0
 8002c7e:	d015      	beq.n	8002cac <HAL_RCC_OscConfig+0x358>
 8002c80:	f7ff fade 	bl	8002240 <HAL_GetTick>
 8002c84:	6138      	str	r0, [r7, #16]
 8002c86:	e00a      	b.n	8002c9e <HAL_RCC_OscConfig+0x34a>
 8002c88:	f7ff fada 	bl	8002240 <HAL_GetTick>
 8002c8c:	4602      	mov	r2, r0
 8002c8e:	693b      	ldr	r3, [r7, #16]
 8002c90:	1ad3      	subs	r3, r2, r3
 8002c92:	f241 3288 	movw	r2, #5000	; 0x1388
 8002c96:	4293      	cmp	r3, r2
 8002c98:	d901      	bls.n	8002c9e <HAL_RCC_OscConfig+0x34a>
 8002c9a:	2303      	movs	r3, #3
 8002c9c:	e0cb      	b.n	8002e36 <HAL_RCC_OscConfig+0x4e2>
 8002c9e:	4b49      	ldr	r3, [pc, #292]	; (8002dc4 <HAL_RCC_OscConfig+0x470>)
 8002ca0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002ca2:	f003 0302 	and.w	r3, r3, #2
 8002ca6:	2b00      	cmp	r3, #0
 8002ca8:	d0ee      	beq.n	8002c88 <HAL_RCC_OscConfig+0x334>
 8002caa:	e014      	b.n	8002cd6 <HAL_RCC_OscConfig+0x382>
 8002cac:	f7ff fac8 	bl	8002240 <HAL_GetTick>
 8002cb0:	6138      	str	r0, [r7, #16]
 8002cb2:	e00a      	b.n	8002cca <HAL_RCC_OscConfig+0x376>
 8002cb4:	f7ff fac4 	bl	8002240 <HAL_GetTick>
 8002cb8:	4602      	mov	r2, r0
 8002cba:	693b      	ldr	r3, [r7, #16]
 8002cbc:	1ad3      	subs	r3, r2, r3
 8002cbe:	f241 3288 	movw	r2, #5000	; 0x1388
 8002cc2:	4293      	cmp	r3, r2
 8002cc4:	d901      	bls.n	8002cca <HAL_RCC_OscConfig+0x376>
 8002cc6:	2303      	movs	r3, #3
 8002cc8:	e0b5      	b.n	8002e36 <HAL_RCC_OscConfig+0x4e2>
 8002cca:	4b3e      	ldr	r3, [pc, #248]	; (8002dc4 <HAL_RCC_OscConfig+0x470>)
 8002ccc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002cce:	f003 0302 	and.w	r3, r3, #2
 8002cd2:	2b00      	cmp	r3, #0
 8002cd4:	d1ee      	bne.n	8002cb4 <HAL_RCC_OscConfig+0x360>
 8002cd6:	7dfb      	ldrb	r3, [r7, #23]
 8002cd8:	2b01      	cmp	r3, #1
 8002cda:	d105      	bne.n	8002ce8 <HAL_RCC_OscConfig+0x394>
 8002cdc:	4b39      	ldr	r3, [pc, #228]	; (8002dc4 <HAL_RCC_OscConfig+0x470>)
 8002cde:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002ce0:	4a38      	ldr	r2, [pc, #224]	; (8002dc4 <HAL_RCC_OscConfig+0x470>)
 8002ce2:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8002ce6:	6413      	str	r3, [r2, #64]	; 0x40
 8002ce8:	687b      	ldr	r3, [r7, #4]
 8002cea:	699b      	ldr	r3, [r3, #24]
 8002cec:	2b00      	cmp	r3, #0
 8002cee:	f000 80a1 	beq.w	8002e34 <HAL_RCC_OscConfig+0x4e0>
 8002cf2:	4b34      	ldr	r3, [pc, #208]	; (8002dc4 <HAL_RCC_OscConfig+0x470>)
 8002cf4:	689b      	ldr	r3, [r3, #8]
 8002cf6:	f003 030c 	and.w	r3, r3, #12
 8002cfa:	2b08      	cmp	r3, #8
 8002cfc:	d05c      	beq.n	8002db8 <HAL_RCC_OscConfig+0x464>
 8002cfe:	687b      	ldr	r3, [r7, #4]
 8002d00:	699b      	ldr	r3, [r3, #24]
 8002d02:	2b02      	cmp	r3, #2
 8002d04:	d141      	bne.n	8002d8a <HAL_RCC_OscConfig+0x436>
 8002d06:	4b31      	ldr	r3, [pc, #196]	; (8002dcc <HAL_RCC_OscConfig+0x478>)
 8002d08:	2200      	movs	r2, #0
 8002d0a:	601a      	str	r2, [r3, #0]
 8002d0c:	f7ff fa98 	bl	8002240 <HAL_GetTick>
 8002d10:	6138      	str	r0, [r7, #16]
 8002d12:	e008      	b.n	8002d26 <HAL_RCC_OscConfig+0x3d2>
 8002d14:	f7ff fa94 	bl	8002240 <HAL_GetTick>
 8002d18:	4602      	mov	r2, r0
 8002d1a:	693b      	ldr	r3, [r7, #16]
 8002d1c:	1ad3      	subs	r3, r2, r3
 8002d1e:	2b02      	cmp	r3, #2
 8002d20:	d901      	bls.n	8002d26 <HAL_RCC_OscConfig+0x3d2>
 8002d22:	2303      	movs	r3, #3
 8002d24:	e087      	b.n	8002e36 <HAL_RCC_OscConfig+0x4e2>
 8002d26:	4b27      	ldr	r3, [pc, #156]	; (8002dc4 <HAL_RCC_OscConfig+0x470>)
 8002d28:	681b      	ldr	r3, [r3, #0]
 8002d2a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002d2e:	2b00      	cmp	r3, #0
 8002d30:	d1f0      	bne.n	8002d14 <HAL_RCC_OscConfig+0x3c0>
 8002d32:	687b      	ldr	r3, [r7, #4]
 8002d34:	69da      	ldr	r2, [r3, #28]
 8002d36:	687b      	ldr	r3, [r7, #4]
 8002d38:	6a1b      	ldr	r3, [r3, #32]
 8002d3a:	431a      	orrs	r2, r3
 8002d3c:	687b      	ldr	r3, [r7, #4]
 8002d3e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002d40:	019b      	lsls	r3, r3, #6
 8002d42:	431a      	orrs	r2, r3
 8002d44:	687b      	ldr	r3, [r7, #4]
 8002d46:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002d48:	085b      	lsrs	r3, r3, #1
 8002d4a:	3b01      	subs	r3, #1
 8002d4c:	041b      	lsls	r3, r3, #16
 8002d4e:	431a      	orrs	r2, r3
 8002d50:	687b      	ldr	r3, [r7, #4]
 8002d52:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002d54:	061b      	lsls	r3, r3, #24
 8002d56:	491b      	ldr	r1, [pc, #108]	; (8002dc4 <HAL_RCC_OscConfig+0x470>)
 8002d58:	4313      	orrs	r3, r2
 8002d5a:	604b      	str	r3, [r1, #4]
 8002d5c:	4b1b      	ldr	r3, [pc, #108]	; (8002dcc <HAL_RCC_OscConfig+0x478>)
 8002d5e:	2201      	movs	r2, #1
 8002d60:	601a      	str	r2, [r3, #0]
 8002d62:	f7ff fa6d 	bl	8002240 <HAL_GetTick>
 8002d66:	6138      	str	r0, [r7, #16]
 8002d68:	e008      	b.n	8002d7c <HAL_RCC_OscConfig+0x428>
 8002d6a:	f7ff fa69 	bl	8002240 <HAL_GetTick>
 8002d6e:	4602      	mov	r2, r0
 8002d70:	693b      	ldr	r3, [r7, #16]
 8002d72:	1ad3      	subs	r3, r2, r3
 8002d74:	2b02      	cmp	r3, #2
 8002d76:	d901      	bls.n	8002d7c <HAL_RCC_OscConfig+0x428>
 8002d78:	2303      	movs	r3, #3
 8002d7a:	e05c      	b.n	8002e36 <HAL_RCC_OscConfig+0x4e2>
 8002d7c:	4b11      	ldr	r3, [pc, #68]	; (8002dc4 <HAL_RCC_OscConfig+0x470>)
 8002d7e:	681b      	ldr	r3, [r3, #0]
 8002d80:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002d84:	2b00      	cmp	r3, #0
 8002d86:	d0f0      	beq.n	8002d6a <HAL_RCC_OscConfig+0x416>
 8002d88:	e054      	b.n	8002e34 <HAL_RCC_OscConfig+0x4e0>
 8002d8a:	4b10      	ldr	r3, [pc, #64]	; (8002dcc <HAL_RCC_OscConfig+0x478>)
 8002d8c:	2200      	movs	r2, #0
 8002d8e:	601a      	str	r2, [r3, #0]
 8002d90:	f7ff fa56 	bl	8002240 <HAL_GetTick>
 8002d94:	6138      	str	r0, [r7, #16]
 8002d96:	e008      	b.n	8002daa <HAL_RCC_OscConfig+0x456>
 8002d98:	f7ff fa52 	bl	8002240 <HAL_GetTick>
 8002d9c:	4602      	mov	r2, r0
 8002d9e:	693b      	ldr	r3, [r7, #16]
 8002da0:	1ad3      	subs	r3, r2, r3
 8002da2:	2b02      	cmp	r3, #2
 8002da4:	d901      	bls.n	8002daa <HAL_RCC_OscConfig+0x456>
 8002da6:	2303      	movs	r3, #3
 8002da8:	e045      	b.n	8002e36 <HAL_RCC_OscConfig+0x4e2>
 8002daa:	4b06      	ldr	r3, [pc, #24]	; (8002dc4 <HAL_RCC_OscConfig+0x470>)
 8002dac:	681b      	ldr	r3, [r3, #0]
 8002dae:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002db2:	2b00      	cmp	r3, #0
 8002db4:	d1f0      	bne.n	8002d98 <HAL_RCC_OscConfig+0x444>
 8002db6:	e03d      	b.n	8002e34 <HAL_RCC_OscConfig+0x4e0>
 8002db8:	687b      	ldr	r3, [r7, #4]
 8002dba:	699b      	ldr	r3, [r3, #24]
 8002dbc:	2b01      	cmp	r3, #1
 8002dbe:	d107      	bne.n	8002dd0 <HAL_RCC_OscConfig+0x47c>
 8002dc0:	2301      	movs	r3, #1
 8002dc2:	e038      	b.n	8002e36 <HAL_RCC_OscConfig+0x4e2>
 8002dc4:	40023800 	.word	0x40023800
 8002dc8:	40007000 	.word	0x40007000
 8002dcc:	42470060 	.word	0x42470060
 8002dd0:	4b1b      	ldr	r3, [pc, #108]	; (8002e40 <HAL_RCC_OscConfig+0x4ec>)
 8002dd2:	685b      	ldr	r3, [r3, #4]
 8002dd4:	60fb      	str	r3, [r7, #12]
 8002dd6:	687b      	ldr	r3, [r7, #4]
 8002dd8:	699b      	ldr	r3, [r3, #24]
 8002dda:	2b01      	cmp	r3, #1
 8002ddc:	d028      	beq.n	8002e30 <HAL_RCC_OscConfig+0x4dc>
 8002dde:	68fb      	ldr	r3, [r7, #12]
 8002de0:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8002de4:	687b      	ldr	r3, [r7, #4]
 8002de6:	69db      	ldr	r3, [r3, #28]
 8002de8:	429a      	cmp	r2, r3
 8002dea:	d121      	bne.n	8002e30 <HAL_RCC_OscConfig+0x4dc>
 8002dec:	68fb      	ldr	r3, [r7, #12]
 8002dee:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8002df2:	687b      	ldr	r3, [r7, #4]
 8002df4:	6a1b      	ldr	r3, [r3, #32]
 8002df6:	429a      	cmp	r2, r3
 8002df8:	d11a      	bne.n	8002e30 <HAL_RCC_OscConfig+0x4dc>
 8002dfa:	68fa      	ldr	r2, [r7, #12]
 8002dfc:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8002e00:	4013      	ands	r3, r2
 8002e02:	687a      	ldr	r2, [r7, #4]
 8002e04:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8002e06:	0192      	lsls	r2, r2, #6
 8002e08:	4293      	cmp	r3, r2
 8002e0a:	d111      	bne.n	8002e30 <HAL_RCC_OscConfig+0x4dc>
 8002e0c:	68fb      	ldr	r3, [r7, #12]
 8002e0e:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8002e12:	687b      	ldr	r3, [r7, #4]
 8002e14:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002e16:	085b      	lsrs	r3, r3, #1
 8002e18:	3b01      	subs	r3, #1
 8002e1a:	041b      	lsls	r3, r3, #16
 8002e1c:	429a      	cmp	r2, r3
 8002e1e:	d107      	bne.n	8002e30 <HAL_RCC_OscConfig+0x4dc>
 8002e20:	68fb      	ldr	r3, [r7, #12]
 8002e22:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8002e26:	687b      	ldr	r3, [r7, #4]
 8002e28:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002e2a:	061b      	lsls	r3, r3, #24
 8002e2c:	429a      	cmp	r2, r3
 8002e2e:	d001      	beq.n	8002e34 <HAL_RCC_OscConfig+0x4e0>
 8002e30:	2301      	movs	r3, #1
 8002e32:	e000      	b.n	8002e36 <HAL_RCC_OscConfig+0x4e2>
 8002e34:	2300      	movs	r3, #0
 8002e36:	4618      	mov	r0, r3
 8002e38:	3718      	adds	r7, #24
 8002e3a:	46bd      	mov	sp, r7
 8002e3c:	bd80      	pop	{r7, pc}
 8002e3e:	bf00      	nop
 8002e40:	40023800 	.word	0x40023800

08002e44 <HAL_RCC_ClockConfig>:
 8002e44:	b580      	push	{r7, lr}
 8002e46:	b084      	sub	sp, #16
 8002e48:	af00      	add	r7, sp, #0
 8002e4a:	6078      	str	r0, [r7, #4]
 8002e4c:	6039      	str	r1, [r7, #0]
 8002e4e:	687b      	ldr	r3, [r7, #4]
 8002e50:	2b00      	cmp	r3, #0
 8002e52:	d101      	bne.n	8002e58 <HAL_RCC_ClockConfig+0x14>
 8002e54:	2301      	movs	r3, #1
 8002e56:	e0cc      	b.n	8002ff2 <HAL_RCC_ClockConfig+0x1ae>
 8002e58:	4b68      	ldr	r3, [pc, #416]	; (8002ffc <HAL_RCC_ClockConfig+0x1b8>)
 8002e5a:	681b      	ldr	r3, [r3, #0]
 8002e5c:	f003 0307 	and.w	r3, r3, #7
 8002e60:	683a      	ldr	r2, [r7, #0]
 8002e62:	429a      	cmp	r2, r3
 8002e64:	d90c      	bls.n	8002e80 <HAL_RCC_ClockConfig+0x3c>
 8002e66:	4b65      	ldr	r3, [pc, #404]	; (8002ffc <HAL_RCC_ClockConfig+0x1b8>)
 8002e68:	683a      	ldr	r2, [r7, #0]
 8002e6a:	b2d2      	uxtb	r2, r2
 8002e6c:	701a      	strb	r2, [r3, #0]
 8002e6e:	4b63      	ldr	r3, [pc, #396]	; (8002ffc <HAL_RCC_ClockConfig+0x1b8>)
 8002e70:	681b      	ldr	r3, [r3, #0]
 8002e72:	f003 0307 	and.w	r3, r3, #7
 8002e76:	683a      	ldr	r2, [r7, #0]
 8002e78:	429a      	cmp	r2, r3
 8002e7a:	d001      	beq.n	8002e80 <HAL_RCC_ClockConfig+0x3c>
 8002e7c:	2301      	movs	r3, #1
 8002e7e:	e0b8      	b.n	8002ff2 <HAL_RCC_ClockConfig+0x1ae>
 8002e80:	687b      	ldr	r3, [r7, #4]
 8002e82:	681b      	ldr	r3, [r3, #0]
 8002e84:	f003 0302 	and.w	r3, r3, #2
 8002e88:	2b00      	cmp	r3, #0
 8002e8a:	d020      	beq.n	8002ece <HAL_RCC_ClockConfig+0x8a>
 8002e8c:	687b      	ldr	r3, [r7, #4]
 8002e8e:	681b      	ldr	r3, [r3, #0]
 8002e90:	f003 0304 	and.w	r3, r3, #4
 8002e94:	2b00      	cmp	r3, #0
 8002e96:	d005      	beq.n	8002ea4 <HAL_RCC_ClockConfig+0x60>
 8002e98:	4b59      	ldr	r3, [pc, #356]	; (8003000 <HAL_RCC_ClockConfig+0x1bc>)
 8002e9a:	689b      	ldr	r3, [r3, #8]
 8002e9c:	4a58      	ldr	r2, [pc, #352]	; (8003000 <HAL_RCC_ClockConfig+0x1bc>)
 8002e9e:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8002ea2:	6093      	str	r3, [r2, #8]
 8002ea4:	687b      	ldr	r3, [r7, #4]
 8002ea6:	681b      	ldr	r3, [r3, #0]
 8002ea8:	f003 0308 	and.w	r3, r3, #8
 8002eac:	2b00      	cmp	r3, #0
 8002eae:	d005      	beq.n	8002ebc <HAL_RCC_ClockConfig+0x78>
 8002eb0:	4b53      	ldr	r3, [pc, #332]	; (8003000 <HAL_RCC_ClockConfig+0x1bc>)
 8002eb2:	689b      	ldr	r3, [r3, #8]
 8002eb4:	4a52      	ldr	r2, [pc, #328]	; (8003000 <HAL_RCC_ClockConfig+0x1bc>)
 8002eb6:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8002eba:	6093      	str	r3, [r2, #8]
 8002ebc:	4b50      	ldr	r3, [pc, #320]	; (8003000 <HAL_RCC_ClockConfig+0x1bc>)
 8002ebe:	689b      	ldr	r3, [r3, #8]
 8002ec0:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8002ec4:	687b      	ldr	r3, [r7, #4]
 8002ec6:	689b      	ldr	r3, [r3, #8]
 8002ec8:	494d      	ldr	r1, [pc, #308]	; (8003000 <HAL_RCC_ClockConfig+0x1bc>)
 8002eca:	4313      	orrs	r3, r2
 8002ecc:	608b      	str	r3, [r1, #8]
 8002ece:	687b      	ldr	r3, [r7, #4]
 8002ed0:	681b      	ldr	r3, [r3, #0]
 8002ed2:	f003 0301 	and.w	r3, r3, #1
 8002ed6:	2b00      	cmp	r3, #0
 8002ed8:	d044      	beq.n	8002f64 <HAL_RCC_ClockConfig+0x120>
 8002eda:	687b      	ldr	r3, [r7, #4]
 8002edc:	685b      	ldr	r3, [r3, #4]
 8002ede:	2b01      	cmp	r3, #1
 8002ee0:	d107      	bne.n	8002ef2 <HAL_RCC_ClockConfig+0xae>
 8002ee2:	4b47      	ldr	r3, [pc, #284]	; (8003000 <HAL_RCC_ClockConfig+0x1bc>)
 8002ee4:	681b      	ldr	r3, [r3, #0]
 8002ee6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002eea:	2b00      	cmp	r3, #0
 8002eec:	d119      	bne.n	8002f22 <HAL_RCC_ClockConfig+0xde>
 8002eee:	2301      	movs	r3, #1
 8002ef0:	e07f      	b.n	8002ff2 <HAL_RCC_ClockConfig+0x1ae>
 8002ef2:	687b      	ldr	r3, [r7, #4]
 8002ef4:	685b      	ldr	r3, [r3, #4]
 8002ef6:	2b02      	cmp	r3, #2
 8002ef8:	d003      	beq.n	8002f02 <HAL_RCC_ClockConfig+0xbe>
 8002efa:	687b      	ldr	r3, [r7, #4]
 8002efc:	685b      	ldr	r3, [r3, #4]
 8002efe:	2b03      	cmp	r3, #3
 8002f00:	d107      	bne.n	8002f12 <HAL_RCC_ClockConfig+0xce>
 8002f02:	4b3f      	ldr	r3, [pc, #252]	; (8003000 <HAL_RCC_ClockConfig+0x1bc>)
 8002f04:	681b      	ldr	r3, [r3, #0]
 8002f06:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002f0a:	2b00      	cmp	r3, #0
 8002f0c:	d109      	bne.n	8002f22 <HAL_RCC_ClockConfig+0xde>
 8002f0e:	2301      	movs	r3, #1
 8002f10:	e06f      	b.n	8002ff2 <HAL_RCC_ClockConfig+0x1ae>
 8002f12:	4b3b      	ldr	r3, [pc, #236]	; (8003000 <HAL_RCC_ClockConfig+0x1bc>)
 8002f14:	681b      	ldr	r3, [r3, #0]
 8002f16:	f003 0302 	and.w	r3, r3, #2
 8002f1a:	2b00      	cmp	r3, #0
 8002f1c:	d101      	bne.n	8002f22 <HAL_RCC_ClockConfig+0xde>
 8002f1e:	2301      	movs	r3, #1
 8002f20:	e067      	b.n	8002ff2 <HAL_RCC_ClockConfig+0x1ae>
 8002f22:	4b37      	ldr	r3, [pc, #220]	; (8003000 <HAL_RCC_ClockConfig+0x1bc>)
 8002f24:	689b      	ldr	r3, [r3, #8]
 8002f26:	f023 0203 	bic.w	r2, r3, #3
 8002f2a:	687b      	ldr	r3, [r7, #4]
 8002f2c:	685b      	ldr	r3, [r3, #4]
 8002f2e:	4934      	ldr	r1, [pc, #208]	; (8003000 <HAL_RCC_ClockConfig+0x1bc>)
 8002f30:	4313      	orrs	r3, r2
 8002f32:	608b      	str	r3, [r1, #8]
 8002f34:	f7ff f984 	bl	8002240 <HAL_GetTick>
 8002f38:	60f8      	str	r0, [r7, #12]
 8002f3a:	e00a      	b.n	8002f52 <HAL_RCC_ClockConfig+0x10e>
 8002f3c:	f7ff f980 	bl	8002240 <HAL_GetTick>
 8002f40:	4602      	mov	r2, r0
 8002f42:	68fb      	ldr	r3, [r7, #12]
 8002f44:	1ad3      	subs	r3, r2, r3
 8002f46:	f241 3288 	movw	r2, #5000	; 0x1388
 8002f4a:	4293      	cmp	r3, r2
 8002f4c:	d901      	bls.n	8002f52 <HAL_RCC_ClockConfig+0x10e>
 8002f4e:	2303      	movs	r3, #3
 8002f50:	e04f      	b.n	8002ff2 <HAL_RCC_ClockConfig+0x1ae>
 8002f52:	4b2b      	ldr	r3, [pc, #172]	; (8003000 <HAL_RCC_ClockConfig+0x1bc>)
 8002f54:	689b      	ldr	r3, [r3, #8]
 8002f56:	f003 020c 	and.w	r2, r3, #12
 8002f5a:	687b      	ldr	r3, [r7, #4]
 8002f5c:	685b      	ldr	r3, [r3, #4]
 8002f5e:	009b      	lsls	r3, r3, #2
 8002f60:	429a      	cmp	r2, r3
 8002f62:	d1eb      	bne.n	8002f3c <HAL_RCC_ClockConfig+0xf8>
 8002f64:	4b25      	ldr	r3, [pc, #148]	; (8002ffc <HAL_RCC_ClockConfig+0x1b8>)
 8002f66:	681b      	ldr	r3, [r3, #0]
 8002f68:	f003 0307 	and.w	r3, r3, #7
 8002f6c:	683a      	ldr	r2, [r7, #0]
 8002f6e:	429a      	cmp	r2, r3
 8002f70:	d20c      	bcs.n	8002f8c <HAL_RCC_ClockConfig+0x148>
 8002f72:	4b22      	ldr	r3, [pc, #136]	; (8002ffc <HAL_RCC_ClockConfig+0x1b8>)
 8002f74:	683a      	ldr	r2, [r7, #0]
 8002f76:	b2d2      	uxtb	r2, r2
 8002f78:	701a      	strb	r2, [r3, #0]
 8002f7a:	4b20      	ldr	r3, [pc, #128]	; (8002ffc <HAL_RCC_ClockConfig+0x1b8>)
 8002f7c:	681b      	ldr	r3, [r3, #0]
 8002f7e:	f003 0307 	and.w	r3, r3, #7
 8002f82:	683a      	ldr	r2, [r7, #0]
 8002f84:	429a      	cmp	r2, r3
 8002f86:	d001      	beq.n	8002f8c <HAL_RCC_ClockConfig+0x148>
 8002f88:	2301      	movs	r3, #1
 8002f8a:	e032      	b.n	8002ff2 <HAL_RCC_ClockConfig+0x1ae>
 8002f8c:	687b      	ldr	r3, [r7, #4]
 8002f8e:	681b      	ldr	r3, [r3, #0]
 8002f90:	f003 0304 	and.w	r3, r3, #4
 8002f94:	2b00      	cmp	r3, #0
 8002f96:	d008      	beq.n	8002faa <HAL_RCC_ClockConfig+0x166>
 8002f98:	4b19      	ldr	r3, [pc, #100]	; (8003000 <HAL_RCC_ClockConfig+0x1bc>)
 8002f9a:	689b      	ldr	r3, [r3, #8]
 8002f9c:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8002fa0:	687b      	ldr	r3, [r7, #4]
 8002fa2:	68db      	ldr	r3, [r3, #12]
 8002fa4:	4916      	ldr	r1, [pc, #88]	; (8003000 <HAL_RCC_ClockConfig+0x1bc>)
 8002fa6:	4313      	orrs	r3, r2
 8002fa8:	608b      	str	r3, [r1, #8]
 8002faa:	687b      	ldr	r3, [r7, #4]
 8002fac:	681b      	ldr	r3, [r3, #0]
 8002fae:	f003 0308 	and.w	r3, r3, #8
 8002fb2:	2b00      	cmp	r3, #0
 8002fb4:	d009      	beq.n	8002fca <HAL_RCC_ClockConfig+0x186>
 8002fb6:	4b12      	ldr	r3, [pc, #72]	; (8003000 <HAL_RCC_ClockConfig+0x1bc>)
 8002fb8:	689b      	ldr	r3, [r3, #8]
 8002fba:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8002fbe:	687b      	ldr	r3, [r7, #4]
 8002fc0:	691b      	ldr	r3, [r3, #16]
 8002fc2:	00db      	lsls	r3, r3, #3
 8002fc4:	490e      	ldr	r1, [pc, #56]	; (8003000 <HAL_RCC_ClockConfig+0x1bc>)
 8002fc6:	4313      	orrs	r3, r2
 8002fc8:	608b      	str	r3, [r1, #8]
 8002fca:	f000 f821 	bl	8003010 <HAL_RCC_GetSysClockFreq>
 8002fce:	4602      	mov	r2, r0
 8002fd0:	4b0b      	ldr	r3, [pc, #44]	; (8003000 <HAL_RCC_ClockConfig+0x1bc>)
 8002fd2:	689b      	ldr	r3, [r3, #8]
 8002fd4:	091b      	lsrs	r3, r3, #4
 8002fd6:	f003 030f 	and.w	r3, r3, #15
 8002fda:	490a      	ldr	r1, [pc, #40]	; (8003004 <HAL_RCC_ClockConfig+0x1c0>)
 8002fdc:	5ccb      	ldrb	r3, [r1, r3]
 8002fde:	fa22 f303 	lsr.w	r3, r2, r3
 8002fe2:	4a09      	ldr	r2, [pc, #36]	; (8003008 <HAL_RCC_ClockConfig+0x1c4>)
 8002fe4:	6013      	str	r3, [r2, #0]
 8002fe6:	4b09      	ldr	r3, [pc, #36]	; (800300c <HAL_RCC_ClockConfig+0x1c8>)
 8002fe8:	681b      	ldr	r3, [r3, #0]
 8002fea:	4618      	mov	r0, r3
 8002fec:	f7ff f8e4 	bl	80021b8 <HAL_InitTick>
 8002ff0:	2300      	movs	r3, #0
 8002ff2:	4618      	mov	r0, r3
 8002ff4:	3710      	adds	r7, #16
 8002ff6:	46bd      	mov	sp, r7
 8002ff8:	bd80      	pop	{r7, pc}
 8002ffa:	bf00      	nop
 8002ffc:	40023c00 	.word	0x40023c00
 8003000:	40023800 	.word	0x40023800
 8003004:	08007ea4 	.word	0x08007ea4
 8003008:	20000004 	.word	0x20000004
 800300c:	20000008 	.word	0x20000008

08003010 <HAL_RCC_GetSysClockFreq>:
 8003010:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8003014:	b094      	sub	sp, #80	; 0x50
 8003016:	af00      	add	r7, sp, #0
 8003018:	2300      	movs	r3, #0
 800301a:	647b      	str	r3, [r7, #68]	; 0x44
 800301c:	2300      	movs	r3, #0
 800301e:	64fb      	str	r3, [r7, #76]	; 0x4c
 8003020:	2300      	movs	r3, #0
 8003022:	643b      	str	r3, [r7, #64]	; 0x40
 8003024:	2300      	movs	r3, #0
 8003026:	64bb      	str	r3, [r7, #72]	; 0x48
 8003028:	4b79      	ldr	r3, [pc, #484]	; (8003210 <HAL_RCC_GetSysClockFreq+0x200>)
 800302a:	689b      	ldr	r3, [r3, #8]
 800302c:	f003 030c 	and.w	r3, r3, #12
 8003030:	2b08      	cmp	r3, #8
 8003032:	d00d      	beq.n	8003050 <HAL_RCC_GetSysClockFreq+0x40>
 8003034:	2b08      	cmp	r3, #8
 8003036:	f200 80e1 	bhi.w	80031fc <HAL_RCC_GetSysClockFreq+0x1ec>
 800303a:	2b00      	cmp	r3, #0
 800303c:	d002      	beq.n	8003044 <HAL_RCC_GetSysClockFreq+0x34>
 800303e:	2b04      	cmp	r3, #4
 8003040:	d003      	beq.n	800304a <HAL_RCC_GetSysClockFreq+0x3a>
 8003042:	e0db      	b.n	80031fc <HAL_RCC_GetSysClockFreq+0x1ec>
 8003044:	4b73      	ldr	r3, [pc, #460]	; (8003214 <HAL_RCC_GetSysClockFreq+0x204>)
 8003046:	64bb      	str	r3, [r7, #72]	; 0x48
 8003048:	e0db      	b.n	8003202 <HAL_RCC_GetSysClockFreq+0x1f2>
 800304a:	4b73      	ldr	r3, [pc, #460]	; (8003218 <HAL_RCC_GetSysClockFreq+0x208>)
 800304c:	64bb      	str	r3, [r7, #72]	; 0x48
 800304e:	e0d8      	b.n	8003202 <HAL_RCC_GetSysClockFreq+0x1f2>
 8003050:	4b6f      	ldr	r3, [pc, #444]	; (8003210 <HAL_RCC_GetSysClockFreq+0x200>)
 8003052:	685b      	ldr	r3, [r3, #4]
 8003054:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8003058:	647b      	str	r3, [r7, #68]	; 0x44
 800305a:	4b6d      	ldr	r3, [pc, #436]	; (8003210 <HAL_RCC_GetSysClockFreq+0x200>)
 800305c:	685b      	ldr	r3, [r3, #4]
 800305e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8003062:	2b00      	cmp	r3, #0
 8003064:	d063      	beq.n	800312e <HAL_RCC_GetSysClockFreq+0x11e>
 8003066:	4b6a      	ldr	r3, [pc, #424]	; (8003210 <HAL_RCC_GetSysClockFreq+0x200>)
 8003068:	685b      	ldr	r3, [r3, #4]
 800306a:	099b      	lsrs	r3, r3, #6
 800306c:	2200      	movs	r2, #0
 800306e:	63bb      	str	r3, [r7, #56]	; 0x38
 8003070:	63fa      	str	r2, [r7, #60]	; 0x3c
 8003072:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003074:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8003078:	633b      	str	r3, [r7, #48]	; 0x30
 800307a:	2300      	movs	r3, #0
 800307c:	637b      	str	r3, [r7, #52]	; 0x34
 800307e:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	; 0x30
 8003082:	4622      	mov	r2, r4
 8003084:	462b      	mov	r3, r5
 8003086:	f04f 0000 	mov.w	r0, #0
 800308a:	f04f 0100 	mov.w	r1, #0
 800308e:	0159      	lsls	r1, r3, #5
 8003090:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8003094:	0150      	lsls	r0, r2, #5
 8003096:	4602      	mov	r2, r0
 8003098:	460b      	mov	r3, r1
 800309a:	4621      	mov	r1, r4
 800309c:	1a51      	subs	r1, r2, r1
 800309e:	6139      	str	r1, [r7, #16]
 80030a0:	4629      	mov	r1, r5
 80030a2:	eb63 0301 	sbc.w	r3, r3, r1
 80030a6:	617b      	str	r3, [r7, #20]
 80030a8:	f04f 0200 	mov.w	r2, #0
 80030ac:	f04f 0300 	mov.w	r3, #0
 80030b0:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 80030b4:	4659      	mov	r1, fp
 80030b6:	018b      	lsls	r3, r1, #6
 80030b8:	4651      	mov	r1, sl
 80030ba:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 80030be:	4651      	mov	r1, sl
 80030c0:	018a      	lsls	r2, r1, #6
 80030c2:	4651      	mov	r1, sl
 80030c4:	ebb2 0801 	subs.w	r8, r2, r1
 80030c8:	4659      	mov	r1, fp
 80030ca:	eb63 0901 	sbc.w	r9, r3, r1
 80030ce:	f04f 0200 	mov.w	r2, #0
 80030d2:	f04f 0300 	mov.w	r3, #0
 80030d6:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 80030da:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 80030de:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 80030e2:	4690      	mov	r8, r2
 80030e4:	4699      	mov	r9, r3
 80030e6:	4623      	mov	r3, r4
 80030e8:	eb18 0303 	adds.w	r3, r8, r3
 80030ec:	60bb      	str	r3, [r7, #8]
 80030ee:	462b      	mov	r3, r5
 80030f0:	eb49 0303 	adc.w	r3, r9, r3
 80030f4:	60fb      	str	r3, [r7, #12]
 80030f6:	f04f 0200 	mov.w	r2, #0
 80030fa:	f04f 0300 	mov.w	r3, #0
 80030fe:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 8003102:	4629      	mov	r1, r5
 8003104:	024b      	lsls	r3, r1, #9
 8003106:	4621      	mov	r1, r4
 8003108:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 800310c:	4621      	mov	r1, r4
 800310e:	024a      	lsls	r2, r1, #9
 8003110:	4610      	mov	r0, r2
 8003112:	4619      	mov	r1, r3
 8003114:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003116:	2200      	movs	r2, #0
 8003118:	62bb      	str	r3, [r7, #40]	; 0x28
 800311a:	62fa      	str	r2, [r7, #44]	; 0x2c
 800311c:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8003120:	f7fd fd42 	bl	8000ba8 <__aeabi_uldivmod>
 8003124:	4602      	mov	r2, r0
 8003126:	460b      	mov	r3, r1
 8003128:	4613      	mov	r3, r2
 800312a:	64fb      	str	r3, [r7, #76]	; 0x4c
 800312c:	e058      	b.n	80031e0 <HAL_RCC_GetSysClockFreq+0x1d0>
 800312e:	4b38      	ldr	r3, [pc, #224]	; (8003210 <HAL_RCC_GetSysClockFreq+0x200>)
 8003130:	685b      	ldr	r3, [r3, #4]
 8003132:	099b      	lsrs	r3, r3, #6
 8003134:	2200      	movs	r2, #0
 8003136:	4618      	mov	r0, r3
 8003138:	4611      	mov	r1, r2
 800313a:	f3c0 0308 	ubfx	r3, r0, #0, #9
 800313e:	623b      	str	r3, [r7, #32]
 8003140:	2300      	movs	r3, #0
 8003142:	627b      	str	r3, [r7, #36]	; 0x24
 8003144:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 8003148:	4642      	mov	r2, r8
 800314a:	464b      	mov	r3, r9
 800314c:	f04f 0000 	mov.w	r0, #0
 8003150:	f04f 0100 	mov.w	r1, #0
 8003154:	0159      	lsls	r1, r3, #5
 8003156:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 800315a:	0150      	lsls	r0, r2, #5
 800315c:	4602      	mov	r2, r0
 800315e:	460b      	mov	r3, r1
 8003160:	4641      	mov	r1, r8
 8003162:	ebb2 0a01 	subs.w	sl, r2, r1
 8003166:	4649      	mov	r1, r9
 8003168:	eb63 0b01 	sbc.w	fp, r3, r1
 800316c:	f04f 0200 	mov.w	r2, #0
 8003170:	f04f 0300 	mov.w	r3, #0
 8003174:	ea4f 138b 	mov.w	r3, fp, lsl #6
 8003178:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 800317c:	ea4f 128a 	mov.w	r2, sl, lsl #6
 8003180:	ebb2 040a 	subs.w	r4, r2, sl
 8003184:	eb63 050b 	sbc.w	r5, r3, fp
 8003188:	f04f 0200 	mov.w	r2, #0
 800318c:	f04f 0300 	mov.w	r3, #0
 8003190:	00eb      	lsls	r3, r5, #3
 8003192:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8003196:	00e2      	lsls	r2, r4, #3
 8003198:	4614      	mov	r4, r2
 800319a:	461d      	mov	r5, r3
 800319c:	4643      	mov	r3, r8
 800319e:	18e3      	adds	r3, r4, r3
 80031a0:	603b      	str	r3, [r7, #0]
 80031a2:	464b      	mov	r3, r9
 80031a4:	eb45 0303 	adc.w	r3, r5, r3
 80031a8:	607b      	str	r3, [r7, #4]
 80031aa:	f04f 0200 	mov.w	r2, #0
 80031ae:	f04f 0300 	mov.w	r3, #0
 80031b2:	e9d7 4500 	ldrd	r4, r5, [r7]
 80031b6:	4629      	mov	r1, r5
 80031b8:	028b      	lsls	r3, r1, #10
 80031ba:	4621      	mov	r1, r4
 80031bc:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 80031c0:	4621      	mov	r1, r4
 80031c2:	028a      	lsls	r2, r1, #10
 80031c4:	4610      	mov	r0, r2
 80031c6:	4619      	mov	r1, r3
 80031c8:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80031ca:	2200      	movs	r2, #0
 80031cc:	61bb      	str	r3, [r7, #24]
 80031ce:	61fa      	str	r2, [r7, #28]
 80031d0:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80031d4:	f7fd fce8 	bl	8000ba8 <__aeabi_uldivmod>
 80031d8:	4602      	mov	r2, r0
 80031da:	460b      	mov	r3, r1
 80031dc:	4613      	mov	r3, r2
 80031de:	64fb      	str	r3, [r7, #76]	; 0x4c
 80031e0:	4b0b      	ldr	r3, [pc, #44]	; (8003210 <HAL_RCC_GetSysClockFreq+0x200>)
 80031e2:	685b      	ldr	r3, [r3, #4]
 80031e4:	0c1b      	lsrs	r3, r3, #16
 80031e6:	f003 0303 	and.w	r3, r3, #3
 80031ea:	3301      	adds	r3, #1
 80031ec:	005b      	lsls	r3, r3, #1
 80031ee:	643b      	str	r3, [r7, #64]	; 0x40
 80031f0:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 80031f2:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80031f4:	fbb2 f3f3 	udiv	r3, r2, r3
 80031f8:	64bb      	str	r3, [r7, #72]	; 0x48
 80031fa:	e002      	b.n	8003202 <HAL_RCC_GetSysClockFreq+0x1f2>
 80031fc:	4b05      	ldr	r3, [pc, #20]	; (8003214 <HAL_RCC_GetSysClockFreq+0x204>)
 80031fe:	64bb      	str	r3, [r7, #72]	; 0x48
 8003200:	bf00      	nop
 8003202:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8003204:	4618      	mov	r0, r3
 8003206:	3750      	adds	r7, #80	; 0x50
 8003208:	46bd      	mov	sp, r7
 800320a:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800320e:	bf00      	nop
 8003210:	40023800 	.word	0x40023800
 8003214:	00f42400 	.word	0x00f42400
 8003218:	007a1200 	.word	0x007a1200

0800321c <HAL_RCC_GetHCLKFreq>:
 800321c:	b480      	push	{r7}
 800321e:	af00      	add	r7, sp, #0
 8003220:	4b03      	ldr	r3, [pc, #12]	; (8003230 <HAL_RCC_GetHCLKFreq+0x14>)
 8003222:	681b      	ldr	r3, [r3, #0]
 8003224:	4618      	mov	r0, r3
 8003226:	46bd      	mov	sp, r7
 8003228:	f85d 7b04 	ldr.w	r7, [sp], #4
 800322c:	4770      	bx	lr
 800322e:	bf00      	nop
 8003230:	20000004 	.word	0x20000004

08003234 <HAL_RCC_GetPCLK1Freq>:
 8003234:	b580      	push	{r7, lr}
 8003236:	af00      	add	r7, sp, #0
 8003238:	f7ff fff0 	bl	800321c <HAL_RCC_GetHCLKFreq>
 800323c:	4602      	mov	r2, r0
 800323e:	4b05      	ldr	r3, [pc, #20]	; (8003254 <HAL_RCC_GetPCLK1Freq+0x20>)
 8003240:	689b      	ldr	r3, [r3, #8]
 8003242:	0a9b      	lsrs	r3, r3, #10
 8003244:	f003 0307 	and.w	r3, r3, #7
 8003248:	4903      	ldr	r1, [pc, #12]	; (8003258 <HAL_RCC_GetPCLK1Freq+0x24>)
 800324a:	5ccb      	ldrb	r3, [r1, r3]
 800324c:	fa22 f303 	lsr.w	r3, r2, r3
 8003250:	4618      	mov	r0, r3
 8003252:	bd80      	pop	{r7, pc}
 8003254:	40023800 	.word	0x40023800
 8003258:	08007eb4 	.word	0x08007eb4

0800325c <HAL_RCC_GetPCLK2Freq>:
 800325c:	b580      	push	{r7, lr}
 800325e:	af00      	add	r7, sp, #0
 8003260:	f7ff ffdc 	bl	800321c <HAL_RCC_GetHCLKFreq>
 8003264:	4602      	mov	r2, r0
 8003266:	4b05      	ldr	r3, [pc, #20]	; (800327c <HAL_RCC_GetPCLK2Freq+0x20>)
 8003268:	689b      	ldr	r3, [r3, #8]
 800326a:	0b5b      	lsrs	r3, r3, #13
 800326c:	f003 0307 	and.w	r3, r3, #7
 8003270:	4903      	ldr	r1, [pc, #12]	; (8003280 <HAL_RCC_GetPCLK2Freq+0x24>)
 8003272:	5ccb      	ldrb	r3, [r1, r3]
 8003274:	fa22 f303 	lsr.w	r3, r2, r3
 8003278:	4618      	mov	r0, r3
 800327a:	bd80      	pop	{r7, pc}
 800327c:	40023800 	.word	0x40023800
 8003280:	08007eb4 	.word	0x08007eb4

08003284 <HAL_SPI_Init>:
 8003284:	b580      	push	{r7, lr}
 8003286:	b082      	sub	sp, #8
 8003288:	af00      	add	r7, sp, #0
 800328a:	6078      	str	r0, [r7, #4]
 800328c:	687b      	ldr	r3, [r7, #4]
 800328e:	2b00      	cmp	r3, #0
 8003290:	d101      	bne.n	8003296 <HAL_SPI_Init+0x12>
 8003292:	2301      	movs	r3, #1
 8003294:	e07b      	b.n	800338e <HAL_SPI_Init+0x10a>
 8003296:	687b      	ldr	r3, [r7, #4]
 8003298:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800329a:	2b00      	cmp	r3, #0
 800329c:	d108      	bne.n	80032b0 <HAL_SPI_Init+0x2c>
 800329e:	687b      	ldr	r3, [r7, #4]
 80032a0:	685b      	ldr	r3, [r3, #4]
 80032a2:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 80032a6:	d009      	beq.n	80032bc <HAL_SPI_Init+0x38>
 80032a8:	687b      	ldr	r3, [r7, #4]
 80032aa:	2200      	movs	r2, #0
 80032ac:	61da      	str	r2, [r3, #28]
 80032ae:	e005      	b.n	80032bc <HAL_SPI_Init+0x38>
 80032b0:	687b      	ldr	r3, [r7, #4]
 80032b2:	2200      	movs	r2, #0
 80032b4:	611a      	str	r2, [r3, #16]
 80032b6:	687b      	ldr	r3, [r7, #4]
 80032b8:	2200      	movs	r2, #0
 80032ba:	615a      	str	r2, [r3, #20]
 80032bc:	687b      	ldr	r3, [r7, #4]
 80032be:	2200      	movs	r2, #0
 80032c0:	629a      	str	r2, [r3, #40]	; 0x28
 80032c2:	687b      	ldr	r3, [r7, #4]
 80032c4:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 80032c8:	b2db      	uxtb	r3, r3
 80032ca:	2b00      	cmp	r3, #0
 80032cc:	d106      	bne.n	80032dc <HAL_SPI_Init+0x58>
 80032ce:	687b      	ldr	r3, [r7, #4]
 80032d0:	2200      	movs	r2, #0
 80032d2:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80032d6:	6878      	ldr	r0, [r7, #4]
 80032d8:	f7fe f936 	bl	8001548 <HAL_SPI_MspInit>
 80032dc:	687b      	ldr	r3, [r7, #4]
 80032de:	2202      	movs	r2, #2
 80032e0:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 80032e4:	687b      	ldr	r3, [r7, #4]
 80032e6:	681b      	ldr	r3, [r3, #0]
 80032e8:	681a      	ldr	r2, [r3, #0]
 80032ea:	687b      	ldr	r3, [r7, #4]
 80032ec:	681b      	ldr	r3, [r3, #0]
 80032ee:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80032f2:	601a      	str	r2, [r3, #0]
 80032f4:	687b      	ldr	r3, [r7, #4]
 80032f6:	685b      	ldr	r3, [r3, #4]
 80032f8:	f403 7282 	and.w	r2, r3, #260	; 0x104
 80032fc:	687b      	ldr	r3, [r7, #4]
 80032fe:	689b      	ldr	r3, [r3, #8]
 8003300:	f403 4304 	and.w	r3, r3, #33792	; 0x8400
 8003304:	431a      	orrs	r2, r3
 8003306:	687b      	ldr	r3, [r7, #4]
 8003308:	68db      	ldr	r3, [r3, #12]
 800330a:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800330e:	431a      	orrs	r2, r3
 8003310:	687b      	ldr	r3, [r7, #4]
 8003312:	691b      	ldr	r3, [r3, #16]
 8003314:	f003 0302 	and.w	r3, r3, #2
 8003318:	431a      	orrs	r2, r3
 800331a:	687b      	ldr	r3, [r7, #4]
 800331c:	695b      	ldr	r3, [r3, #20]
 800331e:	f003 0301 	and.w	r3, r3, #1
 8003322:	431a      	orrs	r2, r3
 8003324:	687b      	ldr	r3, [r7, #4]
 8003326:	699b      	ldr	r3, [r3, #24]
 8003328:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800332c:	431a      	orrs	r2, r3
 800332e:	687b      	ldr	r3, [r7, #4]
 8003330:	69db      	ldr	r3, [r3, #28]
 8003332:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8003336:	431a      	orrs	r2, r3
 8003338:	687b      	ldr	r3, [r7, #4]
 800333a:	6a1b      	ldr	r3, [r3, #32]
 800333c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003340:	ea42 0103 	orr.w	r1, r2, r3
 8003344:	687b      	ldr	r3, [r7, #4]
 8003346:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003348:	f403 5200 	and.w	r2, r3, #8192	; 0x2000
 800334c:	687b      	ldr	r3, [r7, #4]
 800334e:	681b      	ldr	r3, [r3, #0]
 8003350:	430a      	orrs	r2, r1
 8003352:	601a      	str	r2, [r3, #0]
 8003354:	687b      	ldr	r3, [r7, #4]
 8003356:	699b      	ldr	r3, [r3, #24]
 8003358:	0c1b      	lsrs	r3, r3, #16
 800335a:	f003 0104 	and.w	r1, r3, #4
 800335e:	687b      	ldr	r3, [r7, #4]
 8003360:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003362:	f003 0210 	and.w	r2, r3, #16
 8003366:	687b      	ldr	r3, [r7, #4]
 8003368:	681b      	ldr	r3, [r3, #0]
 800336a:	430a      	orrs	r2, r1
 800336c:	605a      	str	r2, [r3, #4]
 800336e:	687b      	ldr	r3, [r7, #4]
 8003370:	681b      	ldr	r3, [r3, #0]
 8003372:	69da      	ldr	r2, [r3, #28]
 8003374:	687b      	ldr	r3, [r7, #4]
 8003376:	681b      	ldr	r3, [r3, #0]
 8003378:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800337c:	61da      	str	r2, [r3, #28]
 800337e:	687b      	ldr	r3, [r7, #4]
 8003380:	2200      	movs	r2, #0
 8003382:	655a      	str	r2, [r3, #84]	; 0x54
 8003384:	687b      	ldr	r3, [r7, #4]
 8003386:	2201      	movs	r2, #1
 8003388:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800338c:	2300      	movs	r3, #0
 800338e:	4618      	mov	r0, r3
 8003390:	3708      	adds	r7, #8
 8003392:	46bd      	mov	sp, r7
 8003394:	bd80      	pop	{r7, pc}

08003396 <HAL_SPI_Transmit>:
 8003396:	b580      	push	{r7, lr}
 8003398:	b088      	sub	sp, #32
 800339a:	af00      	add	r7, sp, #0
 800339c:	60f8      	str	r0, [r7, #12]
 800339e:	60b9      	str	r1, [r7, #8]
 80033a0:	603b      	str	r3, [r7, #0]
 80033a2:	4613      	mov	r3, r2
 80033a4:	80fb      	strh	r3, [r7, #6]
 80033a6:	2300      	movs	r3, #0
 80033a8:	77fb      	strb	r3, [r7, #31]
 80033aa:	68fb      	ldr	r3, [r7, #12]
 80033ac:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 80033b0:	2b01      	cmp	r3, #1
 80033b2:	d101      	bne.n	80033b8 <HAL_SPI_Transmit+0x22>
 80033b4:	2302      	movs	r3, #2
 80033b6:	e126      	b.n	8003606 <HAL_SPI_Transmit+0x270>
 80033b8:	68fb      	ldr	r3, [r7, #12]
 80033ba:	2201      	movs	r2, #1
 80033bc:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80033c0:	f7fe ff3e 	bl	8002240 <HAL_GetTick>
 80033c4:	61b8      	str	r0, [r7, #24]
 80033c6:	88fb      	ldrh	r3, [r7, #6]
 80033c8:	82fb      	strh	r3, [r7, #22]
 80033ca:	68fb      	ldr	r3, [r7, #12]
 80033cc:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 80033d0:	b2db      	uxtb	r3, r3
 80033d2:	2b01      	cmp	r3, #1
 80033d4:	d002      	beq.n	80033dc <HAL_SPI_Transmit+0x46>
 80033d6:	2302      	movs	r3, #2
 80033d8:	77fb      	strb	r3, [r7, #31]
 80033da:	e10b      	b.n	80035f4 <HAL_SPI_Transmit+0x25e>
 80033dc:	68bb      	ldr	r3, [r7, #8]
 80033de:	2b00      	cmp	r3, #0
 80033e0:	d002      	beq.n	80033e8 <HAL_SPI_Transmit+0x52>
 80033e2:	88fb      	ldrh	r3, [r7, #6]
 80033e4:	2b00      	cmp	r3, #0
 80033e6:	d102      	bne.n	80033ee <HAL_SPI_Transmit+0x58>
 80033e8:	2301      	movs	r3, #1
 80033ea:	77fb      	strb	r3, [r7, #31]
 80033ec:	e102      	b.n	80035f4 <HAL_SPI_Transmit+0x25e>
 80033ee:	68fb      	ldr	r3, [r7, #12]
 80033f0:	2203      	movs	r2, #3
 80033f2:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 80033f6:	68fb      	ldr	r3, [r7, #12]
 80033f8:	2200      	movs	r2, #0
 80033fa:	655a      	str	r2, [r3, #84]	; 0x54
 80033fc:	68fb      	ldr	r3, [r7, #12]
 80033fe:	68ba      	ldr	r2, [r7, #8]
 8003400:	631a      	str	r2, [r3, #48]	; 0x30
 8003402:	68fb      	ldr	r3, [r7, #12]
 8003404:	88fa      	ldrh	r2, [r7, #6]
 8003406:	869a      	strh	r2, [r3, #52]	; 0x34
 8003408:	68fb      	ldr	r3, [r7, #12]
 800340a:	88fa      	ldrh	r2, [r7, #6]
 800340c:	86da      	strh	r2, [r3, #54]	; 0x36
 800340e:	68fb      	ldr	r3, [r7, #12]
 8003410:	2200      	movs	r2, #0
 8003412:	639a      	str	r2, [r3, #56]	; 0x38
 8003414:	68fb      	ldr	r3, [r7, #12]
 8003416:	2200      	movs	r2, #0
 8003418:	879a      	strh	r2, [r3, #60]	; 0x3c
 800341a:	68fb      	ldr	r3, [r7, #12]
 800341c:	2200      	movs	r2, #0
 800341e:	87da      	strh	r2, [r3, #62]	; 0x3e
 8003420:	68fb      	ldr	r3, [r7, #12]
 8003422:	2200      	movs	r2, #0
 8003424:	645a      	str	r2, [r3, #68]	; 0x44
 8003426:	68fb      	ldr	r3, [r7, #12]
 8003428:	2200      	movs	r2, #0
 800342a:	641a      	str	r2, [r3, #64]	; 0x40
 800342c:	68fb      	ldr	r3, [r7, #12]
 800342e:	689b      	ldr	r3, [r3, #8]
 8003430:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8003434:	d10f      	bne.n	8003456 <HAL_SPI_Transmit+0xc0>
 8003436:	68fb      	ldr	r3, [r7, #12]
 8003438:	681b      	ldr	r3, [r3, #0]
 800343a:	681a      	ldr	r2, [r3, #0]
 800343c:	68fb      	ldr	r3, [r7, #12]
 800343e:	681b      	ldr	r3, [r3, #0]
 8003440:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8003444:	601a      	str	r2, [r3, #0]
 8003446:	68fb      	ldr	r3, [r7, #12]
 8003448:	681b      	ldr	r3, [r3, #0]
 800344a:	681a      	ldr	r2, [r3, #0]
 800344c:	68fb      	ldr	r3, [r7, #12]
 800344e:	681b      	ldr	r3, [r3, #0]
 8003450:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8003454:	601a      	str	r2, [r3, #0]
 8003456:	68fb      	ldr	r3, [r7, #12]
 8003458:	681b      	ldr	r3, [r3, #0]
 800345a:	681b      	ldr	r3, [r3, #0]
 800345c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003460:	2b40      	cmp	r3, #64	; 0x40
 8003462:	d007      	beq.n	8003474 <HAL_SPI_Transmit+0xde>
 8003464:	68fb      	ldr	r3, [r7, #12]
 8003466:	681b      	ldr	r3, [r3, #0]
 8003468:	681a      	ldr	r2, [r3, #0]
 800346a:	68fb      	ldr	r3, [r7, #12]
 800346c:	681b      	ldr	r3, [r3, #0]
 800346e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8003472:	601a      	str	r2, [r3, #0]
 8003474:	68fb      	ldr	r3, [r7, #12]
 8003476:	68db      	ldr	r3, [r3, #12]
 8003478:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800347c:	d14b      	bne.n	8003516 <HAL_SPI_Transmit+0x180>
 800347e:	68fb      	ldr	r3, [r7, #12]
 8003480:	685b      	ldr	r3, [r3, #4]
 8003482:	2b00      	cmp	r3, #0
 8003484:	d002      	beq.n	800348c <HAL_SPI_Transmit+0xf6>
 8003486:	8afb      	ldrh	r3, [r7, #22]
 8003488:	2b01      	cmp	r3, #1
 800348a:	d13e      	bne.n	800350a <HAL_SPI_Transmit+0x174>
 800348c:	68fb      	ldr	r3, [r7, #12]
 800348e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003490:	881a      	ldrh	r2, [r3, #0]
 8003492:	68fb      	ldr	r3, [r7, #12]
 8003494:	681b      	ldr	r3, [r3, #0]
 8003496:	60da      	str	r2, [r3, #12]
 8003498:	68fb      	ldr	r3, [r7, #12]
 800349a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800349c:	1c9a      	adds	r2, r3, #2
 800349e:	68fb      	ldr	r3, [r7, #12]
 80034a0:	631a      	str	r2, [r3, #48]	; 0x30
 80034a2:	68fb      	ldr	r3, [r7, #12]
 80034a4:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80034a6:	b29b      	uxth	r3, r3
 80034a8:	3b01      	subs	r3, #1
 80034aa:	b29a      	uxth	r2, r3
 80034ac:	68fb      	ldr	r3, [r7, #12]
 80034ae:	86da      	strh	r2, [r3, #54]	; 0x36
 80034b0:	e02b      	b.n	800350a <HAL_SPI_Transmit+0x174>
 80034b2:	68fb      	ldr	r3, [r7, #12]
 80034b4:	681b      	ldr	r3, [r3, #0]
 80034b6:	689b      	ldr	r3, [r3, #8]
 80034b8:	f003 0302 	and.w	r3, r3, #2
 80034bc:	2b02      	cmp	r3, #2
 80034be:	d112      	bne.n	80034e6 <HAL_SPI_Transmit+0x150>
 80034c0:	68fb      	ldr	r3, [r7, #12]
 80034c2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80034c4:	881a      	ldrh	r2, [r3, #0]
 80034c6:	68fb      	ldr	r3, [r7, #12]
 80034c8:	681b      	ldr	r3, [r3, #0]
 80034ca:	60da      	str	r2, [r3, #12]
 80034cc:	68fb      	ldr	r3, [r7, #12]
 80034ce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80034d0:	1c9a      	adds	r2, r3, #2
 80034d2:	68fb      	ldr	r3, [r7, #12]
 80034d4:	631a      	str	r2, [r3, #48]	; 0x30
 80034d6:	68fb      	ldr	r3, [r7, #12]
 80034d8:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80034da:	b29b      	uxth	r3, r3
 80034dc:	3b01      	subs	r3, #1
 80034de:	b29a      	uxth	r2, r3
 80034e0:	68fb      	ldr	r3, [r7, #12]
 80034e2:	86da      	strh	r2, [r3, #54]	; 0x36
 80034e4:	e011      	b.n	800350a <HAL_SPI_Transmit+0x174>
 80034e6:	f7fe feab 	bl	8002240 <HAL_GetTick>
 80034ea:	4602      	mov	r2, r0
 80034ec:	69bb      	ldr	r3, [r7, #24]
 80034ee:	1ad3      	subs	r3, r2, r3
 80034f0:	683a      	ldr	r2, [r7, #0]
 80034f2:	429a      	cmp	r2, r3
 80034f4:	d803      	bhi.n	80034fe <HAL_SPI_Transmit+0x168>
 80034f6:	683b      	ldr	r3, [r7, #0]
 80034f8:	f1b3 3fff 	cmp.w	r3, #4294967295
 80034fc:	d102      	bne.n	8003504 <HAL_SPI_Transmit+0x16e>
 80034fe:	683b      	ldr	r3, [r7, #0]
 8003500:	2b00      	cmp	r3, #0
 8003502:	d102      	bne.n	800350a <HAL_SPI_Transmit+0x174>
 8003504:	2303      	movs	r3, #3
 8003506:	77fb      	strb	r3, [r7, #31]
 8003508:	e074      	b.n	80035f4 <HAL_SPI_Transmit+0x25e>
 800350a:	68fb      	ldr	r3, [r7, #12]
 800350c:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800350e:	b29b      	uxth	r3, r3
 8003510:	2b00      	cmp	r3, #0
 8003512:	d1ce      	bne.n	80034b2 <HAL_SPI_Transmit+0x11c>
 8003514:	e04c      	b.n	80035b0 <HAL_SPI_Transmit+0x21a>
 8003516:	68fb      	ldr	r3, [r7, #12]
 8003518:	685b      	ldr	r3, [r3, #4]
 800351a:	2b00      	cmp	r3, #0
 800351c:	d002      	beq.n	8003524 <HAL_SPI_Transmit+0x18e>
 800351e:	8afb      	ldrh	r3, [r7, #22]
 8003520:	2b01      	cmp	r3, #1
 8003522:	d140      	bne.n	80035a6 <HAL_SPI_Transmit+0x210>
 8003524:	68fb      	ldr	r3, [r7, #12]
 8003526:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003528:	68fb      	ldr	r3, [r7, #12]
 800352a:	681b      	ldr	r3, [r3, #0]
 800352c:	330c      	adds	r3, #12
 800352e:	7812      	ldrb	r2, [r2, #0]
 8003530:	701a      	strb	r2, [r3, #0]
 8003532:	68fb      	ldr	r3, [r7, #12]
 8003534:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003536:	1c5a      	adds	r2, r3, #1
 8003538:	68fb      	ldr	r3, [r7, #12]
 800353a:	631a      	str	r2, [r3, #48]	; 0x30
 800353c:	68fb      	ldr	r3, [r7, #12]
 800353e:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8003540:	b29b      	uxth	r3, r3
 8003542:	3b01      	subs	r3, #1
 8003544:	b29a      	uxth	r2, r3
 8003546:	68fb      	ldr	r3, [r7, #12]
 8003548:	86da      	strh	r2, [r3, #54]	; 0x36
 800354a:	e02c      	b.n	80035a6 <HAL_SPI_Transmit+0x210>
 800354c:	68fb      	ldr	r3, [r7, #12]
 800354e:	681b      	ldr	r3, [r3, #0]
 8003550:	689b      	ldr	r3, [r3, #8]
 8003552:	f003 0302 	and.w	r3, r3, #2
 8003556:	2b02      	cmp	r3, #2
 8003558:	d113      	bne.n	8003582 <HAL_SPI_Transmit+0x1ec>
 800355a:	68fb      	ldr	r3, [r7, #12]
 800355c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800355e:	68fb      	ldr	r3, [r7, #12]
 8003560:	681b      	ldr	r3, [r3, #0]
 8003562:	330c      	adds	r3, #12
 8003564:	7812      	ldrb	r2, [r2, #0]
 8003566:	701a      	strb	r2, [r3, #0]
 8003568:	68fb      	ldr	r3, [r7, #12]
 800356a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800356c:	1c5a      	adds	r2, r3, #1
 800356e:	68fb      	ldr	r3, [r7, #12]
 8003570:	631a      	str	r2, [r3, #48]	; 0x30
 8003572:	68fb      	ldr	r3, [r7, #12]
 8003574:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8003576:	b29b      	uxth	r3, r3
 8003578:	3b01      	subs	r3, #1
 800357a:	b29a      	uxth	r2, r3
 800357c:	68fb      	ldr	r3, [r7, #12]
 800357e:	86da      	strh	r2, [r3, #54]	; 0x36
 8003580:	e011      	b.n	80035a6 <HAL_SPI_Transmit+0x210>
 8003582:	f7fe fe5d 	bl	8002240 <HAL_GetTick>
 8003586:	4602      	mov	r2, r0
 8003588:	69bb      	ldr	r3, [r7, #24]
 800358a:	1ad3      	subs	r3, r2, r3
 800358c:	683a      	ldr	r2, [r7, #0]
 800358e:	429a      	cmp	r2, r3
 8003590:	d803      	bhi.n	800359a <HAL_SPI_Transmit+0x204>
 8003592:	683b      	ldr	r3, [r7, #0]
 8003594:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003598:	d102      	bne.n	80035a0 <HAL_SPI_Transmit+0x20a>
 800359a:	683b      	ldr	r3, [r7, #0]
 800359c:	2b00      	cmp	r3, #0
 800359e:	d102      	bne.n	80035a6 <HAL_SPI_Transmit+0x210>
 80035a0:	2303      	movs	r3, #3
 80035a2:	77fb      	strb	r3, [r7, #31]
 80035a4:	e026      	b.n	80035f4 <HAL_SPI_Transmit+0x25e>
 80035a6:	68fb      	ldr	r3, [r7, #12]
 80035a8:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80035aa:	b29b      	uxth	r3, r3
 80035ac:	2b00      	cmp	r3, #0
 80035ae:	d1cd      	bne.n	800354c <HAL_SPI_Transmit+0x1b6>
 80035b0:	69ba      	ldr	r2, [r7, #24]
 80035b2:	6839      	ldr	r1, [r7, #0]
 80035b4:	68f8      	ldr	r0, [r7, #12]
 80035b6:	f000 fa55 	bl	8003a64 <SPI_EndRxTxTransaction>
 80035ba:	4603      	mov	r3, r0
 80035bc:	2b00      	cmp	r3, #0
 80035be:	d002      	beq.n	80035c6 <HAL_SPI_Transmit+0x230>
 80035c0:	68fb      	ldr	r3, [r7, #12]
 80035c2:	2220      	movs	r2, #32
 80035c4:	655a      	str	r2, [r3, #84]	; 0x54
 80035c6:	68fb      	ldr	r3, [r7, #12]
 80035c8:	689b      	ldr	r3, [r3, #8]
 80035ca:	2b00      	cmp	r3, #0
 80035cc:	d10a      	bne.n	80035e4 <HAL_SPI_Transmit+0x24e>
 80035ce:	2300      	movs	r3, #0
 80035d0:	613b      	str	r3, [r7, #16]
 80035d2:	68fb      	ldr	r3, [r7, #12]
 80035d4:	681b      	ldr	r3, [r3, #0]
 80035d6:	68db      	ldr	r3, [r3, #12]
 80035d8:	613b      	str	r3, [r7, #16]
 80035da:	68fb      	ldr	r3, [r7, #12]
 80035dc:	681b      	ldr	r3, [r3, #0]
 80035de:	689b      	ldr	r3, [r3, #8]
 80035e0:	613b      	str	r3, [r7, #16]
 80035e2:	693b      	ldr	r3, [r7, #16]
 80035e4:	68fb      	ldr	r3, [r7, #12]
 80035e6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80035e8:	2b00      	cmp	r3, #0
 80035ea:	d002      	beq.n	80035f2 <HAL_SPI_Transmit+0x25c>
 80035ec:	2301      	movs	r3, #1
 80035ee:	77fb      	strb	r3, [r7, #31]
 80035f0:	e000      	b.n	80035f4 <HAL_SPI_Transmit+0x25e>
 80035f2:	bf00      	nop
 80035f4:	68fb      	ldr	r3, [r7, #12]
 80035f6:	2201      	movs	r2, #1
 80035f8:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 80035fc:	68fb      	ldr	r3, [r7, #12]
 80035fe:	2200      	movs	r2, #0
 8003600:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8003604:	7ffb      	ldrb	r3, [r7, #31]
 8003606:	4618      	mov	r0, r3
 8003608:	3720      	adds	r7, #32
 800360a:	46bd      	mov	sp, r7
 800360c:	bd80      	pop	{r7, pc}

0800360e <HAL_SPI_TransmitReceive>:
 800360e:	b580      	push	{r7, lr}
 8003610:	b08c      	sub	sp, #48	; 0x30
 8003612:	af00      	add	r7, sp, #0
 8003614:	60f8      	str	r0, [r7, #12]
 8003616:	60b9      	str	r1, [r7, #8]
 8003618:	607a      	str	r2, [r7, #4]
 800361a:	807b      	strh	r3, [r7, #2]
 800361c:	2301      	movs	r3, #1
 800361e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003620:	2300      	movs	r3, #0
 8003622:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8003626:	68fb      	ldr	r3, [r7, #12]
 8003628:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 800362c:	2b01      	cmp	r3, #1
 800362e:	d101      	bne.n	8003634 <HAL_SPI_TransmitReceive+0x26>
 8003630:	2302      	movs	r3, #2
 8003632:	e18a      	b.n	800394a <HAL_SPI_TransmitReceive+0x33c>
 8003634:	68fb      	ldr	r3, [r7, #12]
 8003636:	2201      	movs	r2, #1
 8003638:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 800363c:	f7fe fe00 	bl	8002240 <HAL_GetTick>
 8003640:	6278      	str	r0, [r7, #36]	; 0x24
 8003642:	68fb      	ldr	r3, [r7, #12]
 8003644:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8003648:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800364c:	68fb      	ldr	r3, [r7, #12]
 800364e:	685b      	ldr	r3, [r3, #4]
 8003650:	61fb      	str	r3, [r7, #28]
 8003652:	887b      	ldrh	r3, [r7, #2]
 8003654:	837b      	strh	r3, [r7, #26]
 8003656:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 800365a:	2b01      	cmp	r3, #1
 800365c:	d00f      	beq.n	800367e <HAL_SPI_TransmitReceive+0x70>
 800365e:	69fb      	ldr	r3, [r7, #28]
 8003660:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8003664:	d107      	bne.n	8003676 <HAL_SPI_TransmitReceive+0x68>
 8003666:	68fb      	ldr	r3, [r7, #12]
 8003668:	689b      	ldr	r3, [r3, #8]
 800366a:	2b00      	cmp	r3, #0
 800366c:	d103      	bne.n	8003676 <HAL_SPI_TransmitReceive+0x68>
 800366e:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8003672:	2b04      	cmp	r3, #4
 8003674:	d003      	beq.n	800367e <HAL_SPI_TransmitReceive+0x70>
 8003676:	2302      	movs	r3, #2
 8003678:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800367c:	e15b      	b.n	8003936 <HAL_SPI_TransmitReceive+0x328>
 800367e:	68bb      	ldr	r3, [r7, #8]
 8003680:	2b00      	cmp	r3, #0
 8003682:	d005      	beq.n	8003690 <HAL_SPI_TransmitReceive+0x82>
 8003684:	687b      	ldr	r3, [r7, #4]
 8003686:	2b00      	cmp	r3, #0
 8003688:	d002      	beq.n	8003690 <HAL_SPI_TransmitReceive+0x82>
 800368a:	887b      	ldrh	r3, [r7, #2]
 800368c:	2b00      	cmp	r3, #0
 800368e:	d103      	bne.n	8003698 <HAL_SPI_TransmitReceive+0x8a>
 8003690:	2301      	movs	r3, #1
 8003692:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8003696:	e14e      	b.n	8003936 <HAL_SPI_TransmitReceive+0x328>
 8003698:	68fb      	ldr	r3, [r7, #12]
 800369a:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 800369e:	b2db      	uxtb	r3, r3
 80036a0:	2b04      	cmp	r3, #4
 80036a2:	d003      	beq.n	80036ac <HAL_SPI_TransmitReceive+0x9e>
 80036a4:	68fb      	ldr	r3, [r7, #12]
 80036a6:	2205      	movs	r2, #5
 80036a8:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 80036ac:	68fb      	ldr	r3, [r7, #12]
 80036ae:	2200      	movs	r2, #0
 80036b0:	655a      	str	r2, [r3, #84]	; 0x54
 80036b2:	68fb      	ldr	r3, [r7, #12]
 80036b4:	687a      	ldr	r2, [r7, #4]
 80036b6:	639a      	str	r2, [r3, #56]	; 0x38
 80036b8:	68fb      	ldr	r3, [r7, #12]
 80036ba:	887a      	ldrh	r2, [r7, #2]
 80036bc:	87da      	strh	r2, [r3, #62]	; 0x3e
 80036be:	68fb      	ldr	r3, [r7, #12]
 80036c0:	887a      	ldrh	r2, [r7, #2]
 80036c2:	879a      	strh	r2, [r3, #60]	; 0x3c
 80036c4:	68fb      	ldr	r3, [r7, #12]
 80036c6:	68ba      	ldr	r2, [r7, #8]
 80036c8:	631a      	str	r2, [r3, #48]	; 0x30
 80036ca:	68fb      	ldr	r3, [r7, #12]
 80036cc:	887a      	ldrh	r2, [r7, #2]
 80036ce:	86da      	strh	r2, [r3, #54]	; 0x36
 80036d0:	68fb      	ldr	r3, [r7, #12]
 80036d2:	887a      	ldrh	r2, [r7, #2]
 80036d4:	869a      	strh	r2, [r3, #52]	; 0x34
 80036d6:	68fb      	ldr	r3, [r7, #12]
 80036d8:	2200      	movs	r2, #0
 80036da:	641a      	str	r2, [r3, #64]	; 0x40
 80036dc:	68fb      	ldr	r3, [r7, #12]
 80036de:	2200      	movs	r2, #0
 80036e0:	645a      	str	r2, [r3, #68]	; 0x44
 80036e2:	68fb      	ldr	r3, [r7, #12]
 80036e4:	681b      	ldr	r3, [r3, #0]
 80036e6:	681b      	ldr	r3, [r3, #0]
 80036e8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80036ec:	2b40      	cmp	r3, #64	; 0x40
 80036ee:	d007      	beq.n	8003700 <HAL_SPI_TransmitReceive+0xf2>
 80036f0:	68fb      	ldr	r3, [r7, #12]
 80036f2:	681b      	ldr	r3, [r3, #0]
 80036f4:	681a      	ldr	r2, [r3, #0]
 80036f6:	68fb      	ldr	r3, [r7, #12]
 80036f8:	681b      	ldr	r3, [r3, #0]
 80036fa:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80036fe:	601a      	str	r2, [r3, #0]
 8003700:	68fb      	ldr	r3, [r7, #12]
 8003702:	68db      	ldr	r3, [r3, #12]
 8003704:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8003708:	d178      	bne.n	80037fc <HAL_SPI_TransmitReceive+0x1ee>
 800370a:	68fb      	ldr	r3, [r7, #12]
 800370c:	685b      	ldr	r3, [r3, #4]
 800370e:	2b00      	cmp	r3, #0
 8003710:	d002      	beq.n	8003718 <HAL_SPI_TransmitReceive+0x10a>
 8003712:	8b7b      	ldrh	r3, [r7, #26]
 8003714:	2b01      	cmp	r3, #1
 8003716:	d166      	bne.n	80037e6 <HAL_SPI_TransmitReceive+0x1d8>
 8003718:	68fb      	ldr	r3, [r7, #12]
 800371a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800371c:	881a      	ldrh	r2, [r3, #0]
 800371e:	68fb      	ldr	r3, [r7, #12]
 8003720:	681b      	ldr	r3, [r3, #0]
 8003722:	60da      	str	r2, [r3, #12]
 8003724:	68fb      	ldr	r3, [r7, #12]
 8003726:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003728:	1c9a      	adds	r2, r3, #2
 800372a:	68fb      	ldr	r3, [r7, #12]
 800372c:	631a      	str	r2, [r3, #48]	; 0x30
 800372e:	68fb      	ldr	r3, [r7, #12]
 8003730:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8003732:	b29b      	uxth	r3, r3
 8003734:	3b01      	subs	r3, #1
 8003736:	b29a      	uxth	r2, r3
 8003738:	68fb      	ldr	r3, [r7, #12]
 800373a:	86da      	strh	r2, [r3, #54]	; 0x36
 800373c:	e053      	b.n	80037e6 <HAL_SPI_TransmitReceive+0x1d8>
 800373e:	68fb      	ldr	r3, [r7, #12]
 8003740:	681b      	ldr	r3, [r3, #0]
 8003742:	689b      	ldr	r3, [r3, #8]
 8003744:	f003 0302 	and.w	r3, r3, #2
 8003748:	2b02      	cmp	r3, #2
 800374a:	d11b      	bne.n	8003784 <HAL_SPI_TransmitReceive+0x176>
 800374c:	68fb      	ldr	r3, [r7, #12]
 800374e:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8003750:	b29b      	uxth	r3, r3
 8003752:	2b00      	cmp	r3, #0
 8003754:	d016      	beq.n	8003784 <HAL_SPI_TransmitReceive+0x176>
 8003756:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003758:	2b01      	cmp	r3, #1
 800375a:	d113      	bne.n	8003784 <HAL_SPI_TransmitReceive+0x176>
 800375c:	68fb      	ldr	r3, [r7, #12]
 800375e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003760:	881a      	ldrh	r2, [r3, #0]
 8003762:	68fb      	ldr	r3, [r7, #12]
 8003764:	681b      	ldr	r3, [r3, #0]
 8003766:	60da      	str	r2, [r3, #12]
 8003768:	68fb      	ldr	r3, [r7, #12]
 800376a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800376c:	1c9a      	adds	r2, r3, #2
 800376e:	68fb      	ldr	r3, [r7, #12]
 8003770:	631a      	str	r2, [r3, #48]	; 0x30
 8003772:	68fb      	ldr	r3, [r7, #12]
 8003774:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8003776:	b29b      	uxth	r3, r3
 8003778:	3b01      	subs	r3, #1
 800377a:	b29a      	uxth	r2, r3
 800377c:	68fb      	ldr	r3, [r7, #12]
 800377e:	86da      	strh	r2, [r3, #54]	; 0x36
 8003780:	2300      	movs	r3, #0
 8003782:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003784:	68fb      	ldr	r3, [r7, #12]
 8003786:	681b      	ldr	r3, [r3, #0]
 8003788:	689b      	ldr	r3, [r3, #8]
 800378a:	f003 0301 	and.w	r3, r3, #1
 800378e:	2b01      	cmp	r3, #1
 8003790:	d119      	bne.n	80037c6 <HAL_SPI_TransmitReceive+0x1b8>
 8003792:	68fb      	ldr	r3, [r7, #12]
 8003794:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8003796:	b29b      	uxth	r3, r3
 8003798:	2b00      	cmp	r3, #0
 800379a:	d014      	beq.n	80037c6 <HAL_SPI_TransmitReceive+0x1b8>
 800379c:	68fb      	ldr	r3, [r7, #12]
 800379e:	681b      	ldr	r3, [r3, #0]
 80037a0:	68da      	ldr	r2, [r3, #12]
 80037a2:	68fb      	ldr	r3, [r7, #12]
 80037a4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80037a6:	b292      	uxth	r2, r2
 80037a8:	801a      	strh	r2, [r3, #0]
 80037aa:	68fb      	ldr	r3, [r7, #12]
 80037ac:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80037ae:	1c9a      	adds	r2, r3, #2
 80037b0:	68fb      	ldr	r3, [r7, #12]
 80037b2:	639a      	str	r2, [r3, #56]	; 0x38
 80037b4:	68fb      	ldr	r3, [r7, #12]
 80037b6:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80037b8:	b29b      	uxth	r3, r3
 80037ba:	3b01      	subs	r3, #1
 80037bc:	b29a      	uxth	r2, r3
 80037be:	68fb      	ldr	r3, [r7, #12]
 80037c0:	87da      	strh	r2, [r3, #62]	; 0x3e
 80037c2:	2301      	movs	r3, #1
 80037c4:	62fb      	str	r3, [r7, #44]	; 0x2c
 80037c6:	f7fe fd3b 	bl	8002240 <HAL_GetTick>
 80037ca:	4602      	mov	r2, r0
 80037cc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80037ce:	1ad3      	subs	r3, r2, r3
 80037d0:	6bba      	ldr	r2, [r7, #56]	; 0x38
 80037d2:	429a      	cmp	r2, r3
 80037d4:	d807      	bhi.n	80037e6 <HAL_SPI_TransmitReceive+0x1d8>
 80037d6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80037d8:	f1b3 3fff 	cmp.w	r3, #4294967295
 80037dc:	d003      	beq.n	80037e6 <HAL_SPI_TransmitReceive+0x1d8>
 80037de:	2303      	movs	r3, #3
 80037e0:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 80037e4:	e0a7      	b.n	8003936 <HAL_SPI_TransmitReceive+0x328>
 80037e6:	68fb      	ldr	r3, [r7, #12]
 80037e8:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80037ea:	b29b      	uxth	r3, r3
 80037ec:	2b00      	cmp	r3, #0
 80037ee:	d1a6      	bne.n	800373e <HAL_SPI_TransmitReceive+0x130>
 80037f0:	68fb      	ldr	r3, [r7, #12]
 80037f2:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80037f4:	b29b      	uxth	r3, r3
 80037f6:	2b00      	cmp	r3, #0
 80037f8:	d1a1      	bne.n	800373e <HAL_SPI_TransmitReceive+0x130>
 80037fa:	e07c      	b.n	80038f6 <HAL_SPI_TransmitReceive+0x2e8>
 80037fc:	68fb      	ldr	r3, [r7, #12]
 80037fe:	685b      	ldr	r3, [r3, #4]
 8003800:	2b00      	cmp	r3, #0
 8003802:	d002      	beq.n	800380a <HAL_SPI_TransmitReceive+0x1fc>
 8003804:	8b7b      	ldrh	r3, [r7, #26]
 8003806:	2b01      	cmp	r3, #1
 8003808:	d16b      	bne.n	80038e2 <HAL_SPI_TransmitReceive+0x2d4>
 800380a:	68fb      	ldr	r3, [r7, #12]
 800380c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800380e:	68fb      	ldr	r3, [r7, #12]
 8003810:	681b      	ldr	r3, [r3, #0]
 8003812:	330c      	adds	r3, #12
 8003814:	7812      	ldrb	r2, [r2, #0]
 8003816:	701a      	strb	r2, [r3, #0]
 8003818:	68fb      	ldr	r3, [r7, #12]
 800381a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800381c:	1c5a      	adds	r2, r3, #1
 800381e:	68fb      	ldr	r3, [r7, #12]
 8003820:	631a      	str	r2, [r3, #48]	; 0x30
 8003822:	68fb      	ldr	r3, [r7, #12]
 8003824:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8003826:	b29b      	uxth	r3, r3
 8003828:	3b01      	subs	r3, #1
 800382a:	b29a      	uxth	r2, r3
 800382c:	68fb      	ldr	r3, [r7, #12]
 800382e:	86da      	strh	r2, [r3, #54]	; 0x36
 8003830:	e057      	b.n	80038e2 <HAL_SPI_TransmitReceive+0x2d4>
 8003832:	68fb      	ldr	r3, [r7, #12]
 8003834:	681b      	ldr	r3, [r3, #0]
 8003836:	689b      	ldr	r3, [r3, #8]
 8003838:	f003 0302 	and.w	r3, r3, #2
 800383c:	2b02      	cmp	r3, #2
 800383e:	d11c      	bne.n	800387a <HAL_SPI_TransmitReceive+0x26c>
 8003840:	68fb      	ldr	r3, [r7, #12]
 8003842:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8003844:	b29b      	uxth	r3, r3
 8003846:	2b00      	cmp	r3, #0
 8003848:	d017      	beq.n	800387a <HAL_SPI_TransmitReceive+0x26c>
 800384a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800384c:	2b01      	cmp	r3, #1
 800384e:	d114      	bne.n	800387a <HAL_SPI_TransmitReceive+0x26c>
 8003850:	68fb      	ldr	r3, [r7, #12]
 8003852:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003854:	68fb      	ldr	r3, [r7, #12]
 8003856:	681b      	ldr	r3, [r3, #0]
 8003858:	330c      	adds	r3, #12
 800385a:	7812      	ldrb	r2, [r2, #0]
 800385c:	701a      	strb	r2, [r3, #0]
 800385e:	68fb      	ldr	r3, [r7, #12]
 8003860:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003862:	1c5a      	adds	r2, r3, #1
 8003864:	68fb      	ldr	r3, [r7, #12]
 8003866:	631a      	str	r2, [r3, #48]	; 0x30
 8003868:	68fb      	ldr	r3, [r7, #12]
 800386a:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800386c:	b29b      	uxth	r3, r3
 800386e:	3b01      	subs	r3, #1
 8003870:	b29a      	uxth	r2, r3
 8003872:	68fb      	ldr	r3, [r7, #12]
 8003874:	86da      	strh	r2, [r3, #54]	; 0x36
 8003876:	2300      	movs	r3, #0
 8003878:	62fb      	str	r3, [r7, #44]	; 0x2c
 800387a:	68fb      	ldr	r3, [r7, #12]
 800387c:	681b      	ldr	r3, [r3, #0]
 800387e:	689b      	ldr	r3, [r3, #8]
 8003880:	f003 0301 	and.w	r3, r3, #1
 8003884:	2b01      	cmp	r3, #1
 8003886:	d119      	bne.n	80038bc <HAL_SPI_TransmitReceive+0x2ae>
 8003888:	68fb      	ldr	r3, [r7, #12]
 800388a:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800388c:	b29b      	uxth	r3, r3
 800388e:	2b00      	cmp	r3, #0
 8003890:	d014      	beq.n	80038bc <HAL_SPI_TransmitReceive+0x2ae>
 8003892:	68fb      	ldr	r3, [r7, #12]
 8003894:	681b      	ldr	r3, [r3, #0]
 8003896:	68da      	ldr	r2, [r3, #12]
 8003898:	68fb      	ldr	r3, [r7, #12]
 800389a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800389c:	b2d2      	uxtb	r2, r2
 800389e:	701a      	strb	r2, [r3, #0]
 80038a0:	68fb      	ldr	r3, [r7, #12]
 80038a2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80038a4:	1c5a      	adds	r2, r3, #1
 80038a6:	68fb      	ldr	r3, [r7, #12]
 80038a8:	639a      	str	r2, [r3, #56]	; 0x38
 80038aa:	68fb      	ldr	r3, [r7, #12]
 80038ac:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80038ae:	b29b      	uxth	r3, r3
 80038b0:	3b01      	subs	r3, #1
 80038b2:	b29a      	uxth	r2, r3
 80038b4:	68fb      	ldr	r3, [r7, #12]
 80038b6:	87da      	strh	r2, [r3, #62]	; 0x3e
 80038b8:	2301      	movs	r3, #1
 80038ba:	62fb      	str	r3, [r7, #44]	; 0x2c
 80038bc:	f7fe fcc0 	bl	8002240 <HAL_GetTick>
 80038c0:	4602      	mov	r2, r0
 80038c2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80038c4:	1ad3      	subs	r3, r2, r3
 80038c6:	6bba      	ldr	r2, [r7, #56]	; 0x38
 80038c8:	429a      	cmp	r2, r3
 80038ca:	d803      	bhi.n	80038d4 <HAL_SPI_TransmitReceive+0x2c6>
 80038cc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80038ce:	f1b3 3fff 	cmp.w	r3, #4294967295
 80038d2:	d102      	bne.n	80038da <HAL_SPI_TransmitReceive+0x2cc>
 80038d4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80038d6:	2b00      	cmp	r3, #0
 80038d8:	d103      	bne.n	80038e2 <HAL_SPI_TransmitReceive+0x2d4>
 80038da:	2303      	movs	r3, #3
 80038dc:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 80038e0:	e029      	b.n	8003936 <HAL_SPI_TransmitReceive+0x328>
 80038e2:	68fb      	ldr	r3, [r7, #12]
 80038e4:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80038e6:	b29b      	uxth	r3, r3
 80038e8:	2b00      	cmp	r3, #0
 80038ea:	d1a2      	bne.n	8003832 <HAL_SPI_TransmitReceive+0x224>
 80038ec:	68fb      	ldr	r3, [r7, #12]
 80038ee:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80038f0:	b29b      	uxth	r3, r3
 80038f2:	2b00      	cmp	r3, #0
 80038f4:	d19d      	bne.n	8003832 <HAL_SPI_TransmitReceive+0x224>
 80038f6:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80038f8:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 80038fa:	68f8      	ldr	r0, [r7, #12]
 80038fc:	f000 f8b2 	bl	8003a64 <SPI_EndRxTxTransaction>
 8003900:	4603      	mov	r3, r0
 8003902:	2b00      	cmp	r3, #0
 8003904:	d006      	beq.n	8003914 <HAL_SPI_TransmitReceive+0x306>
 8003906:	2301      	movs	r3, #1
 8003908:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800390c:	68fb      	ldr	r3, [r7, #12]
 800390e:	2220      	movs	r2, #32
 8003910:	655a      	str	r2, [r3, #84]	; 0x54
 8003912:	e010      	b.n	8003936 <HAL_SPI_TransmitReceive+0x328>
 8003914:	68fb      	ldr	r3, [r7, #12]
 8003916:	689b      	ldr	r3, [r3, #8]
 8003918:	2b00      	cmp	r3, #0
 800391a:	d10b      	bne.n	8003934 <HAL_SPI_TransmitReceive+0x326>
 800391c:	2300      	movs	r3, #0
 800391e:	617b      	str	r3, [r7, #20]
 8003920:	68fb      	ldr	r3, [r7, #12]
 8003922:	681b      	ldr	r3, [r3, #0]
 8003924:	68db      	ldr	r3, [r3, #12]
 8003926:	617b      	str	r3, [r7, #20]
 8003928:	68fb      	ldr	r3, [r7, #12]
 800392a:	681b      	ldr	r3, [r3, #0]
 800392c:	689b      	ldr	r3, [r3, #8]
 800392e:	617b      	str	r3, [r7, #20]
 8003930:	697b      	ldr	r3, [r7, #20]
 8003932:	e000      	b.n	8003936 <HAL_SPI_TransmitReceive+0x328>
 8003934:	bf00      	nop
 8003936:	68fb      	ldr	r3, [r7, #12]
 8003938:	2201      	movs	r2, #1
 800393a:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800393e:	68fb      	ldr	r3, [r7, #12]
 8003940:	2200      	movs	r2, #0
 8003942:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8003946:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 800394a:	4618      	mov	r0, r3
 800394c:	3730      	adds	r7, #48	; 0x30
 800394e:	46bd      	mov	sp, r7
 8003950:	bd80      	pop	{r7, pc}
	...

08003954 <SPI_WaitFlagStateUntilTimeout>:
 8003954:	b580      	push	{r7, lr}
 8003956:	b088      	sub	sp, #32
 8003958:	af00      	add	r7, sp, #0
 800395a:	60f8      	str	r0, [r7, #12]
 800395c:	60b9      	str	r1, [r7, #8]
 800395e:	603b      	str	r3, [r7, #0]
 8003960:	4613      	mov	r3, r2
 8003962:	71fb      	strb	r3, [r7, #7]
 8003964:	f7fe fc6c 	bl	8002240 <HAL_GetTick>
 8003968:	4602      	mov	r2, r0
 800396a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800396c:	1a9b      	subs	r3, r3, r2
 800396e:	683a      	ldr	r2, [r7, #0]
 8003970:	4413      	add	r3, r2
 8003972:	61fb      	str	r3, [r7, #28]
 8003974:	f7fe fc64 	bl	8002240 <HAL_GetTick>
 8003978:	61b8      	str	r0, [r7, #24]
 800397a:	4b39      	ldr	r3, [pc, #228]	; (8003a60 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 800397c:	681b      	ldr	r3, [r3, #0]
 800397e:	015b      	lsls	r3, r3, #5
 8003980:	0d1b      	lsrs	r3, r3, #20
 8003982:	69fa      	ldr	r2, [r7, #28]
 8003984:	fb02 f303 	mul.w	r3, r2, r3
 8003988:	617b      	str	r3, [r7, #20]
 800398a:	e054      	b.n	8003a36 <SPI_WaitFlagStateUntilTimeout+0xe2>
 800398c:	683b      	ldr	r3, [r7, #0]
 800398e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003992:	d050      	beq.n	8003a36 <SPI_WaitFlagStateUntilTimeout+0xe2>
 8003994:	f7fe fc54 	bl	8002240 <HAL_GetTick>
 8003998:	4602      	mov	r2, r0
 800399a:	69bb      	ldr	r3, [r7, #24]
 800399c:	1ad3      	subs	r3, r2, r3
 800399e:	69fa      	ldr	r2, [r7, #28]
 80039a0:	429a      	cmp	r2, r3
 80039a2:	d902      	bls.n	80039aa <SPI_WaitFlagStateUntilTimeout+0x56>
 80039a4:	69fb      	ldr	r3, [r7, #28]
 80039a6:	2b00      	cmp	r3, #0
 80039a8:	d13d      	bne.n	8003a26 <SPI_WaitFlagStateUntilTimeout+0xd2>
 80039aa:	68fb      	ldr	r3, [r7, #12]
 80039ac:	681b      	ldr	r3, [r3, #0]
 80039ae:	685a      	ldr	r2, [r3, #4]
 80039b0:	68fb      	ldr	r3, [r7, #12]
 80039b2:	681b      	ldr	r3, [r3, #0]
 80039b4:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 80039b8:	605a      	str	r2, [r3, #4]
 80039ba:	68fb      	ldr	r3, [r7, #12]
 80039bc:	685b      	ldr	r3, [r3, #4]
 80039be:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 80039c2:	d111      	bne.n	80039e8 <SPI_WaitFlagStateUntilTimeout+0x94>
 80039c4:	68fb      	ldr	r3, [r7, #12]
 80039c6:	689b      	ldr	r3, [r3, #8]
 80039c8:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80039cc:	d004      	beq.n	80039d8 <SPI_WaitFlagStateUntilTimeout+0x84>
 80039ce:	68fb      	ldr	r3, [r7, #12]
 80039d0:	689b      	ldr	r3, [r3, #8]
 80039d2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80039d6:	d107      	bne.n	80039e8 <SPI_WaitFlagStateUntilTimeout+0x94>
 80039d8:	68fb      	ldr	r3, [r7, #12]
 80039da:	681b      	ldr	r3, [r3, #0]
 80039dc:	681a      	ldr	r2, [r3, #0]
 80039de:	68fb      	ldr	r3, [r7, #12]
 80039e0:	681b      	ldr	r3, [r3, #0]
 80039e2:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80039e6:	601a      	str	r2, [r3, #0]
 80039e8:	68fb      	ldr	r3, [r7, #12]
 80039ea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80039ec:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80039f0:	d10f      	bne.n	8003a12 <SPI_WaitFlagStateUntilTimeout+0xbe>
 80039f2:	68fb      	ldr	r3, [r7, #12]
 80039f4:	681b      	ldr	r3, [r3, #0]
 80039f6:	681a      	ldr	r2, [r3, #0]
 80039f8:	68fb      	ldr	r3, [r7, #12]
 80039fa:	681b      	ldr	r3, [r3, #0]
 80039fc:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8003a00:	601a      	str	r2, [r3, #0]
 8003a02:	68fb      	ldr	r3, [r7, #12]
 8003a04:	681b      	ldr	r3, [r3, #0]
 8003a06:	681a      	ldr	r2, [r3, #0]
 8003a08:	68fb      	ldr	r3, [r7, #12]
 8003a0a:	681b      	ldr	r3, [r3, #0]
 8003a0c:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8003a10:	601a      	str	r2, [r3, #0]
 8003a12:	68fb      	ldr	r3, [r7, #12]
 8003a14:	2201      	movs	r2, #1
 8003a16:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8003a1a:	68fb      	ldr	r3, [r7, #12]
 8003a1c:	2200      	movs	r2, #0
 8003a1e:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8003a22:	2303      	movs	r3, #3
 8003a24:	e017      	b.n	8003a56 <SPI_WaitFlagStateUntilTimeout+0x102>
 8003a26:	697b      	ldr	r3, [r7, #20]
 8003a28:	2b00      	cmp	r3, #0
 8003a2a:	d101      	bne.n	8003a30 <SPI_WaitFlagStateUntilTimeout+0xdc>
 8003a2c:	2300      	movs	r3, #0
 8003a2e:	61fb      	str	r3, [r7, #28]
 8003a30:	697b      	ldr	r3, [r7, #20]
 8003a32:	3b01      	subs	r3, #1
 8003a34:	617b      	str	r3, [r7, #20]
 8003a36:	68fb      	ldr	r3, [r7, #12]
 8003a38:	681b      	ldr	r3, [r3, #0]
 8003a3a:	689a      	ldr	r2, [r3, #8]
 8003a3c:	68bb      	ldr	r3, [r7, #8]
 8003a3e:	4013      	ands	r3, r2
 8003a40:	68ba      	ldr	r2, [r7, #8]
 8003a42:	429a      	cmp	r2, r3
 8003a44:	bf0c      	ite	eq
 8003a46:	2301      	moveq	r3, #1
 8003a48:	2300      	movne	r3, #0
 8003a4a:	b2db      	uxtb	r3, r3
 8003a4c:	461a      	mov	r2, r3
 8003a4e:	79fb      	ldrb	r3, [r7, #7]
 8003a50:	429a      	cmp	r2, r3
 8003a52:	d19b      	bne.n	800398c <SPI_WaitFlagStateUntilTimeout+0x38>
 8003a54:	2300      	movs	r3, #0
 8003a56:	4618      	mov	r0, r3
 8003a58:	3720      	adds	r7, #32
 8003a5a:	46bd      	mov	sp, r7
 8003a5c:	bd80      	pop	{r7, pc}
 8003a5e:	bf00      	nop
 8003a60:	20000004 	.word	0x20000004

08003a64 <SPI_EndRxTxTransaction>:
 8003a64:	b580      	push	{r7, lr}
 8003a66:	b088      	sub	sp, #32
 8003a68:	af02      	add	r7, sp, #8
 8003a6a:	60f8      	str	r0, [r7, #12]
 8003a6c:	60b9      	str	r1, [r7, #8]
 8003a6e:	607a      	str	r2, [r7, #4]
 8003a70:	4b1b      	ldr	r3, [pc, #108]	; (8003ae0 <SPI_EndRxTxTransaction+0x7c>)
 8003a72:	681b      	ldr	r3, [r3, #0]
 8003a74:	4a1b      	ldr	r2, [pc, #108]	; (8003ae4 <SPI_EndRxTxTransaction+0x80>)
 8003a76:	fba2 2303 	umull	r2, r3, r2, r3
 8003a7a:	0d5b      	lsrs	r3, r3, #21
 8003a7c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8003a80:	fb02 f303 	mul.w	r3, r2, r3
 8003a84:	617b      	str	r3, [r7, #20]
 8003a86:	68fb      	ldr	r3, [r7, #12]
 8003a88:	685b      	ldr	r3, [r3, #4]
 8003a8a:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8003a8e:	d112      	bne.n	8003ab6 <SPI_EndRxTxTransaction+0x52>
 8003a90:	687b      	ldr	r3, [r7, #4]
 8003a92:	9300      	str	r3, [sp, #0]
 8003a94:	68bb      	ldr	r3, [r7, #8]
 8003a96:	2200      	movs	r2, #0
 8003a98:	2180      	movs	r1, #128	; 0x80
 8003a9a:	68f8      	ldr	r0, [r7, #12]
 8003a9c:	f7ff ff5a 	bl	8003954 <SPI_WaitFlagStateUntilTimeout>
 8003aa0:	4603      	mov	r3, r0
 8003aa2:	2b00      	cmp	r3, #0
 8003aa4:	d016      	beq.n	8003ad4 <SPI_EndRxTxTransaction+0x70>
 8003aa6:	68fb      	ldr	r3, [r7, #12]
 8003aa8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003aaa:	f043 0220 	orr.w	r2, r3, #32
 8003aae:	68fb      	ldr	r3, [r7, #12]
 8003ab0:	655a      	str	r2, [r3, #84]	; 0x54
 8003ab2:	2303      	movs	r3, #3
 8003ab4:	e00f      	b.n	8003ad6 <SPI_EndRxTxTransaction+0x72>
 8003ab6:	697b      	ldr	r3, [r7, #20]
 8003ab8:	2b00      	cmp	r3, #0
 8003aba:	d00a      	beq.n	8003ad2 <SPI_EndRxTxTransaction+0x6e>
 8003abc:	697b      	ldr	r3, [r7, #20]
 8003abe:	3b01      	subs	r3, #1
 8003ac0:	617b      	str	r3, [r7, #20]
 8003ac2:	68fb      	ldr	r3, [r7, #12]
 8003ac4:	681b      	ldr	r3, [r3, #0]
 8003ac6:	689b      	ldr	r3, [r3, #8]
 8003ac8:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003acc:	2b80      	cmp	r3, #128	; 0x80
 8003ace:	d0f2      	beq.n	8003ab6 <SPI_EndRxTxTransaction+0x52>
 8003ad0:	e000      	b.n	8003ad4 <SPI_EndRxTxTransaction+0x70>
 8003ad2:	bf00      	nop
 8003ad4:	2300      	movs	r3, #0
 8003ad6:	4618      	mov	r0, r3
 8003ad8:	3718      	adds	r7, #24
 8003ada:	46bd      	mov	sp, r7
 8003adc:	bd80      	pop	{r7, pc}
 8003ade:	bf00      	nop
 8003ae0:	20000004 	.word	0x20000004
 8003ae4:	165e9f81 	.word	0x165e9f81

08003ae8 <HAL_TIM_Base_Init>:
 8003ae8:	b580      	push	{r7, lr}
 8003aea:	b082      	sub	sp, #8
 8003aec:	af00      	add	r7, sp, #0
 8003aee:	6078      	str	r0, [r7, #4]
 8003af0:	687b      	ldr	r3, [r7, #4]
 8003af2:	2b00      	cmp	r3, #0
 8003af4:	d101      	bne.n	8003afa <HAL_TIM_Base_Init+0x12>
 8003af6:	2301      	movs	r3, #1
 8003af8:	e041      	b.n	8003b7e <HAL_TIM_Base_Init+0x96>
 8003afa:	687b      	ldr	r3, [r7, #4]
 8003afc:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003b00:	b2db      	uxtb	r3, r3
 8003b02:	2b00      	cmp	r3, #0
 8003b04:	d106      	bne.n	8003b14 <HAL_TIM_Base_Init+0x2c>
 8003b06:	687b      	ldr	r3, [r7, #4]
 8003b08:	2200      	movs	r2, #0
 8003b0a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003b0e:	6878      	ldr	r0, [r7, #4]
 8003b10:	f7fd fd62 	bl	80015d8 <HAL_TIM_Base_MspInit>
 8003b14:	687b      	ldr	r3, [r7, #4]
 8003b16:	2202      	movs	r2, #2
 8003b18:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003b1c:	687b      	ldr	r3, [r7, #4]
 8003b1e:	681a      	ldr	r2, [r3, #0]
 8003b20:	687b      	ldr	r3, [r7, #4]
 8003b22:	3304      	adds	r3, #4
 8003b24:	4619      	mov	r1, r3
 8003b26:	4610      	mov	r0, r2
 8003b28:	f000 f95e 	bl	8003de8 <TIM_Base_SetConfig>
 8003b2c:	687b      	ldr	r3, [r7, #4]
 8003b2e:	2201      	movs	r2, #1
 8003b30:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8003b34:	687b      	ldr	r3, [r7, #4]
 8003b36:	2201      	movs	r2, #1
 8003b38:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003b3c:	687b      	ldr	r3, [r7, #4]
 8003b3e:	2201      	movs	r2, #1
 8003b40:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8003b44:	687b      	ldr	r3, [r7, #4]
 8003b46:	2201      	movs	r2, #1
 8003b48:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8003b4c:	687b      	ldr	r3, [r7, #4]
 8003b4e:	2201      	movs	r2, #1
 8003b50:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003b54:	687b      	ldr	r3, [r7, #4]
 8003b56:	2201      	movs	r2, #1
 8003b58:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8003b5c:	687b      	ldr	r3, [r7, #4]
 8003b5e:	2201      	movs	r2, #1
 8003b60:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8003b64:	687b      	ldr	r3, [r7, #4]
 8003b66:	2201      	movs	r2, #1
 8003b68:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8003b6c:	687b      	ldr	r3, [r7, #4]
 8003b6e:	2201      	movs	r2, #1
 8003b70:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8003b74:	687b      	ldr	r3, [r7, #4]
 8003b76:	2201      	movs	r2, #1
 8003b78:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003b7c:	2300      	movs	r3, #0
 8003b7e:	4618      	mov	r0, r3
 8003b80:	3708      	adds	r7, #8
 8003b82:	46bd      	mov	sp, r7
 8003b84:	bd80      	pop	{r7, pc}
	...

08003b88 <HAL_TIM_Base_Start>:
 8003b88:	b480      	push	{r7}
 8003b8a:	b085      	sub	sp, #20
 8003b8c:	af00      	add	r7, sp, #0
 8003b8e:	6078      	str	r0, [r7, #4]
 8003b90:	687b      	ldr	r3, [r7, #4]
 8003b92:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003b96:	b2db      	uxtb	r3, r3
 8003b98:	2b01      	cmp	r3, #1
 8003b9a:	d001      	beq.n	8003ba0 <HAL_TIM_Base_Start+0x18>
 8003b9c:	2301      	movs	r3, #1
 8003b9e:	e046      	b.n	8003c2e <HAL_TIM_Base_Start+0xa6>
 8003ba0:	687b      	ldr	r3, [r7, #4]
 8003ba2:	2202      	movs	r2, #2
 8003ba4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003ba8:	687b      	ldr	r3, [r7, #4]
 8003baa:	681b      	ldr	r3, [r3, #0]
 8003bac:	4a23      	ldr	r2, [pc, #140]	; (8003c3c <HAL_TIM_Base_Start+0xb4>)
 8003bae:	4293      	cmp	r3, r2
 8003bb0:	d022      	beq.n	8003bf8 <HAL_TIM_Base_Start+0x70>
 8003bb2:	687b      	ldr	r3, [r7, #4]
 8003bb4:	681b      	ldr	r3, [r3, #0]
 8003bb6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003bba:	d01d      	beq.n	8003bf8 <HAL_TIM_Base_Start+0x70>
 8003bbc:	687b      	ldr	r3, [r7, #4]
 8003bbe:	681b      	ldr	r3, [r3, #0]
 8003bc0:	4a1f      	ldr	r2, [pc, #124]	; (8003c40 <HAL_TIM_Base_Start+0xb8>)
 8003bc2:	4293      	cmp	r3, r2
 8003bc4:	d018      	beq.n	8003bf8 <HAL_TIM_Base_Start+0x70>
 8003bc6:	687b      	ldr	r3, [r7, #4]
 8003bc8:	681b      	ldr	r3, [r3, #0]
 8003bca:	4a1e      	ldr	r2, [pc, #120]	; (8003c44 <HAL_TIM_Base_Start+0xbc>)
 8003bcc:	4293      	cmp	r3, r2
 8003bce:	d013      	beq.n	8003bf8 <HAL_TIM_Base_Start+0x70>
 8003bd0:	687b      	ldr	r3, [r7, #4]
 8003bd2:	681b      	ldr	r3, [r3, #0]
 8003bd4:	4a1c      	ldr	r2, [pc, #112]	; (8003c48 <HAL_TIM_Base_Start+0xc0>)
 8003bd6:	4293      	cmp	r3, r2
 8003bd8:	d00e      	beq.n	8003bf8 <HAL_TIM_Base_Start+0x70>
 8003bda:	687b      	ldr	r3, [r7, #4]
 8003bdc:	681b      	ldr	r3, [r3, #0]
 8003bde:	4a1b      	ldr	r2, [pc, #108]	; (8003c4c <HAL_TIM_Base_Start+0xc4>)
 8003be0:	4293      	cmp	r3, r2
 8003be2:	d009      	beq.n	8003bf8 <HAL_TIM_Base_Start+0x70>
 8003be4:	687b      	ldr	r3, [r7, #4]
 8003be6:	681b      	ldr	r3, [r3, #0]
 8003be8:	4a19      	ldr	r2, [pc, #100]	; (8003c50 <HAL_TIM_Base_Start+0xc8>)
 8003bea:	4293      	cmp	r3, r2
 8003bec:	d004      	beq.n	8003bf8 <HAL_TIM_Base_Start+0x70>
 8003bee:	687b      	ldr	r3, [r7, #4]
 8003bf0:	681b      	ldr	r3, [r3, #0]
 8003bf2:	4a18      	ldr	r2, [pc, #96]	; (8003c54 <HAL_TIM_Base_Start+0xcc>)
 8003bf4:	4293      	cmp	r3, r2
 8003bf6:	d111      	bne.n	8003c1c <HAL_TIM_Base_Start+0x94>
 8003bf8:	687b      	ldr	r3, [r7, #4]
 8003bfa:	681b      	ldr	r3, [r3, #0]
 8003bfc:	689b      	ldr	r3, [r3, #8]
 8003bfe:	f003 0307 	and.w	r3, r3, #7
 8003c02:	60fb      	str	r3, [r7, #12]
 8003c04:	68fb      	ldr	r3, [r7, #12]
 8003c06:	2b06      	cmp	r3, #6
 8003c08:	d010      	beq.n	8003c2c <HAL_TIM_Base_Start+0xa4>
 8003c0a:	687b      	ldr	r3, [r7, #4]
 8003c0c:	681b      	ldr	r3, [r3, #0]
 8003c0e:	681a      	ldr	r2, [r3, #0]
 8003c10:	687b      	ldr	r3, [r7, #4]
 8003c12:	681b      	ldr	r3, [r3, #0]
 8003c14:	f042 0201 	orr.w	r2, r2, #1
 8003c18:	601a      	str	r2, [r3, #0]
 8003c1a:	e007      	b.n	8003c2c <HAL_TIM_Base_Start+0xa4>
 8003c1c:	687b      	ldr	r3, [r7, #4]
 8003c1e:	681b      	ldr	r3, [r3, #0]
 8003c20:	681a      	ldr	r2, [r3, #0]
 8003c22:	687b      	ldr	r3, [r7, #4]
 8003c24:	681b      	ldr	r3, [r3, #0]
 8003c26:	f042 0201 	orr.w	r2, r2, #1
 8003c2a:	601a      	str	r2, [r3, #0]
 8003c2c:	2300      	movs	r3, #0
 8003c2e:	4618      	mov	r0, r3
 8003c30:	3714      	adds	r7, #20
 8003c32:	46bd      	mov	sp, r7
 8003c34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c38:	4770      	bx	lr
 8003c3a:	bf00      	nop
 8003c3c:	40010000 	.word	0x40010000
 8003c40:	40000400 	.word	0x40000400
 8003c44:	40000800 	.word	0x40000800
 8003c48:	40000c00 	.word	0x40000c00
 8003c4c:	40010400 	.word	0x40010400
 8003c50:	40014000 	.word	0x40014000
 8003c54:	40001800 	.word	0x40001800

08003c58 <HAL_TIM_ConfigClockSource>:
 8003c58:	b580      	push	{r7, lr}
 8003c5a:	b084      	sub	sp, #16
 8003c5c:	af00      	add	r7, sp, #0
 8003c5e:	6078      	str	r0, [r7, #4]
 8003c60:	6039      	str	r1, [r7, #0]
 8003c62:	2300      	movs	r3, #0
 8003c64:	73fb      	strb	r3, [r7, #15]
 8003c66:	687b      	ldr	r3, [r7, #4]
 8003c68:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8003c6c:	2b01      	cmp	r3, #1
 8003c6e:	d101      	bne.n	8003c74 <HAL_TIM_ConfigClockSource+0x1c>
 8003c70:	2302      	movs	r3, #2
 8003c72:	e0b4      	b.n	8003dde <HAL_TIM_ConfigClockSource+0x186>
 8003c74:	687b      	ldr	r3, [r7, #4]
 8003c76:	2201      	movs	r2, #1
 8003c78:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003c7c:	687b      	ldr	r3, [r7, #4]
 8003c7e:	2202      	movs	r2, #2
 8003c80:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003c84:	687b      	ldr	r3, [r7, #4]
 8003c86:	681b      	ldr	r3, [r3, #0]
 8003c88:	689b      	ldr	r3, [r3, #8]
 8003c8a:	60bb      	str	r3, [r7, #8]
 8003c8c:	68bb      	ldr	r3, [r7, #8]
 8003c8e:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8003c92:	60bb      	str	r3, [r7, #8]
 8003c94:	68bb      	ldr	r3, [r7, #8]
 8003c96:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8003c9a:	60bb      	str	r3, [r7, #8]
 8003c9c:	687b      	ldr	r3, [r7, #4]
 8003c9e:	681b      	ldr	r3, [r3, #0]
 8003ca0:	68ba      	ldr	r2, [r7, #8]
 8003ca2:	609a      	str	r2, [r3, #8]
 8003ca4:	683b      	ldr	r3, [r7, #0]
 8003ca6:	681b      	ldr	r3, [r3, #0]
 8003ca8:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8003cac:	d03e      	beq.n	8003d2c <HAL_TIM_ConfigClockSource+0xd4>
 8003cae:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8003cb2:	f200 8087 	bhi.w	8003dc4 <HAL_TIM_ConfigClockSource+0x16c>
 8003cb6:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003cba:	f000 8086 	beq.w	8003dca <HAL_TIM_ConfigClockSource+0x172>
 8003cbe:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003cc2:	d87f      	bhi.n	8003dc4 <HAL_TIM_ConfigClockSource+0x16c>
 8003cc4:	2b70      	cmp	r3, #112	; 0x70
 8003cc6:	d01a      	beq.n	8003cfe <HAL_TIM_ConfigClockSource+0xa6>
 8003cc8:	2b70      	cmp	r3, #112	; 0x70
 8003cca:	d87b      	bhi.n	8003dc4 <HAL_TIM_ConfigClockSource+0x16c>
 8003ccc:	2b60      	cmp	r3, #96	; 0x60
 8003cce:	d050      	beq.n	8003d72 <HAL_TIM_ConfigClockSource+0x11a>
 8003cd0:	2b60      	cmp	r3, #96	; 0x60
 8003cd2:	d877      	bhi.n	8003dc4 <HAL_TIM_ConfigClockSource+0x16c>
 8003cd4:	2b50      	cmp	r3, #80	; 0x50
 8003cd6:	d03c      	beq.n	8003d52 <HAL_TIM_ConfigClockSource+0xfa>
 8003cd8:	2b50      	cmp	r3, #80	; 0x50
 8003cda:	d873      	bhi.n	8003dc4 <HAL_TIM_ConfigClockSource+0x16c>
 8003cdc:	2b40      	cmp	r3, #64	; 0x40
 8003cde:	d058      	beq.n	8003d92 <HAL_TIM_ConfigClockSource+0x13a>
 8003ce0:	2b40      	cmp	r3, #64	; 0x40
 8003ce2:	d86f      	bhi.n	8003dc4 <HAL_TIM_ConfigClockSource+0x16c>
 8003ce4:	2b30      	cmp	r3, #48	; 0x30
 8003ce6:	d064      	beq.n	8003db2 <HAL_TIM_ConfigClockSource+0x15a>
 8003ce8:	2b30      	cmp	r3, #48	; 0x30
 8003cea:	d86b      	bhi.n	8003dc4 <HAL_TIM_ConfigClockSource+0x16c>
 8003cec:	2b20      	cmp	r3, #32
 8003cee:	d060      	beq.n	8003db2 <HAL_TIM_ConfigClockSource+0x15a>
 8003cf0:	2b20      	cmp	r3, #32
 8003cf2:	d867      	bhi.n	8003dc4 <HAL_TIM_ConfigClockSource+0x16c>
 8003cf4:	2b00      	cmp	r3, #0
 8003cf6:	d05c      	beq.n	8003db2 <HAL_TIM_ConfigClockSource+0x15a>
 8003cf8:	2b10      	cmp	r3, #16
 8003cfa:	d05a      	beq.n	8003db2 <HAL_TIM_ConfigClockSource+0x15a>
 8003cfc:	e062      	b.n	8003dc4 <HAL_TIM_ConfigClockSource+0x16c>
 8003cfe:	687b      	ldr	r3, [r7, #4]
 8003d00:	6818      	ldr	r0, [r3, #0]
 8003d02:	683b      	ldr	r3, [r7, #0]
 8003d04:	6899      	ldr	r1, [r3, #8]
 8003d06:	683b      	ldr	r3, [r7, #0]
 8003d08:	685a      	ldr	r2, [r3, #4]
 8003d0a:	683b      	ldr	r3, [r7, #0]
 8003d0c:	68db      	ldr	r3, [r3, #12]
 8003d0e:	f000 f985 	bl	800401c <TIM_ETR_SetConfig>
 8003d12:	687b      	ldr	r3, [r7, #4]
 8003d14:	681b      	ldr	r3, [r3, #0]
 8003d16:	689b      	ldr	r3, [r3, #8]
 8003d18:	60bb      	str	r3, [r7, #8]
 8003d1a:	68bb      	ldr	r3, [r7, #8]
 8003d1c:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8003d20:	60bb      	str	r3, [r7, #8]
 8003d22:	687b      	ldr	r3, [r7, #4]
 8003d24:	681b      	ldr	r3, [r3, #0]
 8003d26:	68ba      	ldr	r2, [r7, #8]
 8003d28:	609a      	str	r2, [r3, #8]
 8003d2a:	e04f      	b.n	8003dcc <HAL_TIM_ConfigClockSource+0x174>
 8003d2c:	687b      	ldr	r3, [r7, #4]
 8003d2e:	6818      	ldr	r0, [r3, #0]
 8003d30:	683b      	ldr	r3, [r7, #0]
 8003d32:	6899      	ldr	r1, [r3, #8]
 8003d34:	683b      	ldr	r3, [r7, #0]
 8003d36:	685a      	ldr	r2, [r3, #4]
 8003d38:	683b      	ldr	r3, [r7, #0]
 8003d3a:	68db      	ldr	r3, [r3, #12]
 8003d3c:	f000 f96e 	bl	800401c <TIM_ETR_SetConfig>
 8003d40:	687b      	ldr	r3, [r7, #4]
 8003d42:	681b      	ldr	r3, [r3, #0]
 8003d44:	689a      	ldr	r2, [r3, #8]
 8003d46:	687b      	ldr	r3, [r7, #4]
 8003d48:	681b      	ldr	r3, [r3, #0]
 8003d4a:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8003d4e:	609a      	str	r2, [r3, #8]
 8003d50:	e03c      	b.n	8003dcc <HAL_TIM_ConfigClockSource+0x174>
 8003d52:	687b      	ldr	r3, [r7, #4]
 8003d54:	6818      	ldr	r0, [r3, #0]
 8003d56:	683b      	ldr	r3, [r7, #0]
 8003d58:	6859      	ldr	r1, [r3, #4]
 8003d5a:	683b      	ldr	r3, [r7, #0]
 8003d5c:	68db      	ldr	r3, [r3, #12]
 8003d5e:	461a      	mov	r2, r3
 8003d60:	f000 f8e2 	bl	8003f28 <TIM_TI1_ConfigInputStage>
 8003d64:	687b      	ldr	r3, [r7, #4]
 8003d66:	681b      	ldr	r3, [r3, #0]
 8003d68:	2150      	movs	r1, #80	; 0x50
 8003d6a:	4618      	mov	r0, r3
 8003d6c:	f000 f93b 	bl	8003fe6 <TIM_ITRx_SetConfig>
 8003d70:	e02c      	b.n	8003dcc <HAL_TIM_ConfigClockSource+0x174>
 8003d72:	687b      	ldr	r3, [r7, #4]
 8003d74:	6818      	ldr	r0, [r3, #0]
 8003d76:	683b      	ldr	r3, [r7, #0]
 8003d78:	6859      	ldr	r1, [r3, #4]
 8003d7a:	683b      	ldr	r3, [r7, #0]
 8003d7c:	68db      	ldr	r3, [r3, #12]
 8003d7e:	461a      	mov	r2, r3
 8003d80:	f000 f901 	bl	8003f86 <TIM_TI2_ConfigInputStage>
 8003d84:	687b      	ldr	r3, [r7, #4]
 8003d86:	681b      	ldr	r3, [r3, #0]
 8003d88:	2160      	movs	r1, #96	; 0x60
 8003d8a:	4618      	mov	r0, r3
 8003d8c:	f000 f92b 	bl	8003fe6 <TIM_ITRx_SetConfig>
 8003d90:	e01c      	b.n	8003dcc <HAL_TIM_ConfigClockSource+0x174>
 8003d92:	687b      	ldr	r3, [r7, #4]
 8003d94:	6818      	ldr	r0, [r3, #0]
 8003d96:	683b      	ldr	r3, [r7, #0]
 8003d98:	6859      	ldr	r1, [r3, #4]
 8003d9a:	683b      	ldr	r3, [r7, #0]
 8003d9c:	68db      	ldr	r3, [r3, #12]
 8003d9e:	461a      	mov	r2, r3
 8003da0:	f000 f8c2 	bl	8003f28 <TIM_TI1_ConfigInputStage>
 8003da4:	687b      	ldr	r3, [r7, #4]
 8003da6:	681b      	ldr	r3, [r3, #0]
 8003da8:	2140      	movs	r1, #64	; 0x40
 8003daa:	4618      	mov	r0, r3
 8003dac:	f000 f91b 	bl	8003fe6 <TIM_ITRx_SetConfig>
 8003db0:	e00c      	b.n	8003dcc <HAL_TIM_ConfigClockSource+0x174>
 8003db2:	687b      	ldr	r3, [r7, #4]
 8003db4:	681a      	ldr	r2, [r3, #0]
 8003db6:	683b      	ldr	r3, [r7, #0]
 8003db8:	681b      	ldr	r3, [r3, #0]
 8003dba:	4619      	mov	r1, r3
 8003dbc:	4610      	mov	r0, r2
 8003dbe:	f000 f912 	bl	8003fe6 <TIM_ITRx_SetConfig>
 8003dc2:	e003      	b.n	8003dcc <HAL_TIM_ConfigClockSource+0x174>
 8003dc4:	2301      	movs	r3, #1
 8003dc6:	73fb      	strb	r3, [r7, #15]
 8003dc8:	e000      	b.n	8003dcc <HAL_TIM_ConfigClockSource+0x174>
 8003dca:	bf00      	nop
 8003dcc:	687b      	ldr	r3, [r7, #4]
 8003dce:	2201      	movs	r2, #1
 8003dd0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003dd4:	687b      	ldr	r3, [r7, #4]
 8003dd6:	2200      	movs	r2, #0
 8003dd8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003ddc:	7bfb      	ldrb	r3, [r7, #15]
 8003dde:	4618      	mov	r0, r3
 8003de0:	3710      	adds	r7, #16
 8003de2:	46bd      	mov	sp, r7
 8003de4:	bd80      	pop	{r7, pc}
	...

08003de8 <TIM_Base_SetConfig>:
 8003de8:	b480      	push	{r7}
 8003dea:	b085      	sub	sp, #20
 8003dec:	af00      	add	r7, sp, #0
 8003dee:	6078      	str	r0, [r7, #4]
 8003df0:	6039      	str	r1, [r7, #0]
 8003df2:	687b      	ldr	r3, [r7, #4]
 8003df4:	681b      	ldr	r3, [r3, #0]
 8003df6:	60fb      	str	r3, [r7, #12]
 8003df8:	687b      	ldr	r3, [r7, #4]
 8003dfa:	4a40      	ldr	r2, [pc, #256]	; (8003efc <TIM_Base_SetConfig+0x114>)
 8003dfc:	4293      	cmp	r3, r2
 8003dfe:	d013      	beq.n	8003e28 <TIM_Base_SetConfig+0x40>
 8003e00:	687b      	ldr	r3, [r7, #4]
 8003e02:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003e06:	d00f      	beq.n	8003e28 <TIM_Base_SetConfig+0x40>
 8003e08:	687b      	ldr	r3, [r7, #4]
 8003e0a:	4a3d      	ldr	r2, [pc, #244]	; (8003f00 <TIM_Base_SetConfig+0x118>)
 8003e0c:	4293      	cmp	r3, r2
 8003e0e:	d00b      	beq.n	8003e28 <TIM_Base_SetConfig+0x40>
 8003e10:	687b      	ldr	r3, [r7, #4]
 8003e12:	4a3c      	ldr	r2, [pc, #240]	; (8003f04 <TIM_Base_SetConfig+0x11c>)
 8003e14:	4293      	cmp	r3, r2
 8003e16:	d007      	beq.n	8003e28 <TIM_Base_SetConfig+0x40>
 8003e18:	687b      	ldr	r3, [r7, #4]
 8003e1a:	4a3b      	ldr	r2, [pc, #236]	; (8003f08 <TIM_Base_SetConfig+0x120>)
 8003e1c:	4293      	cmp	r3, r2
 8003e1e:	d003      	beq.n	8003e28 <TIM_Base_SetConfig+0x40>
 8003e20:	687b      	ldr	r3, [r7, #4]
 8003e22:	4a3a      	ldr	r2, [pc, #232]	; (8003f0c <TIM_Base_SetConfig+0x124>)
 8003e24:	4293      	cmp	r3, r2
 8003e26:	d108      	bne.n	8003e3a <TIM_Base_SetConfig+0x52>
 8003e28:	68fb      	ldr	r3, [r7, #12]
 8003e2a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003e2e:	60fb      	str	r3, [r7, #12]
 8003e30:	683b      	ldr	r3, [r7, #0]
 8003e32:	685b      	ldr	r3, [r3, #4]
 8003e34:	68fa      	ldr	r2, [r7, #12]
 8003e36:	4313      	orrs	r3, r2
 8003e38:	60fb      	str	r3, [r7, #12]
 8003e3a:	687b      	ldr	r3, [r7, #4]
 8003e3c:	4a2f      	ldr	r2, [pc, #188]	; (8003efc <TIM_Base_SetConfig+0x114>)
 8003e3e:	4293      	cmp	r3, r2
 8003e40:	d02b      	beq.n	8003e9a <TIM_Base_SetConfig+0xb2>
 8003e42:	687b      	ldr	r3, [r7, #4]
 8003e44:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003e48:	d027      	beq.n	8003e9a <TIM_Base_SetConfig+0xb2>
 8003e4a:	687b      	ldr	r3, [r7, #4]
 8003e4c:	4a2c      	ldr	r2, [pc, #176]	; (8003f00 <TIM_Base_SetConfig+0x118>)
 8003e4e:	4293      	cmp	r3, r2
 8003e50:	d023      	beq.n	8003e9a <TIM_Base_SetConfig+0xb2>
 8003e52:	687b      	ldr	r3, [r7, #4]
 8003e54:	4a2b      	ldr	r2, [pc, #172]	; (8003f04 <TIM_Base_SetConfig+0x11c>)
 8003e56:	4293      	cmp	r3, r2
 8003e58:	d01f      	beq.n	8003e9a <TIM_Base_SetConfig+0xb2>
 8003e5a:	687b      	ldr	r3, [r7, #4]
 8003e5c:	4a2a      	ldr	r2, [pc, #168]	; (8003f08 <TIM_Base_SetConfig+0x120>)
 8003e5e:	4293      	cmp	r3, r2
 8003e60:	d01b      	beq.n	8003e9a <TIM_Base_SetConfig+0xb2>
 8003e62:	687b      	ldr	r3, [r7, #4]
 8003e64:	4a29      	ldr	r2, [pc, #164]	; (8003f0c <TIM_Base_SetConfig+0x124>)
 8003e66:	4293      	cmp	r3, r2
 8003e68:	d017      	beq.n	8003e9a <TIM_Base_SetConfig+0xb2>
 8003e6a:	687b      	ldr	r3, [r7, #4]
 8003e6c:	4a28      	ldr	r2, [pc, #160]	; (8003f10 <TIM_Base_SetConfig+0x128>)
 8003e6e:	4293      	cmp	r3, r2
 8003e70:	d013      	beq.n	8003e9a <TIM_Base_SetConfig+0xb2>
 8003e72:	687b      	ldr	r3, [r7, #4]
 8003e74:	4a27      	ldr	r2, [pc, #156]	; (8003f14 <TIM_Base_SetConfig+0x12c>)
 8003e76:	4293      	cmp	r3, r2
 8003e78:	d00f      	beq.n	8003e9a <TIM_Base_SetConfig+0xb2>
 8003e7a:	687b      	ldr	r3, [r7, #4]
 8003e7c:	4a26      	ldr	r2, [pc, #152]	; (8003f18 <TIM_Base_SetConfig+0x130>)
 8003e7e:	4293      	cmp	r3, r2
 8003e80:	d00b      	beq.n	8003e9a <TIM_Base_SetConfig+0xb2>
 8003e82:	687b      	ldr	r3, [r7, #4]
 8003e84:	4a25      	ldr	r2, [pc, #148]	; (8003f1c <TIM_Base_SetConfig+0x134>)
 8003e86:	4293      	cmp	r3, r2
 8003e88:	d007      	beq.n	8003e9a <TIM_Base_SetConfig+0xb2>
 8003e8a:	687b      	ldr	r3, [r7, #4]
 8003e8c:	4a24      	ldr	r2, [pc, #144]	; (8003f20 <TIM_Base_SetConfig+0x138>)
 8003e8e:	4293      	cmp	r3, r2
 8003e90:	d003      	beq.n	8003e9a <TIM_Base_SetConfig+0xb2>
 8003e92:	687b      	ldr	r3, [r7, #4]
 8003e94:	4a23      	ldr	r2, [pc, #140]	; (8003f24 <TIM_Base_SetConfig+0x13c>)
 8003e96:	4293      	cmp	r3, r2
 8003e98:	d108      	bne.n	8003eac <TIM_Base_SetConfig+0xc4>
 8003e9a:	68fb      	ldr	r3, [r7, #12]
 8003e9c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8003ea0:	60fb      	str	r3, [r7, #12]
 8003ea2:	683b      	ldr	r3, [r7, #0]
 8003ea4:	68db      	ldr	r3, [r3, #12]
 8003ea6:	68fa      	ldr	r2, [r7, #12]
 8003ea8:	4313      	orrs	r3, r2
 8003eaa:	60fb      	str	r3, [r7, #12]
 8003eac:	68fb      	ldr	r3, [r7, #12]
 8003eae:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8003eb2:	683b      	ldr	r3, [r7, #0]
 8003eb4:	695b      	ldr	r3, [r3, #20]
 8003eb6:	4313      	orrs	r3, r2
 8003eb8:	60fb      	str	r3, [r7, #12]
 8003eba:	687b      	ldr	r3, [r7, #4]
 8003ebc:	68fa      	ldr	r2, [r7, #12]
 8003ebe:	601a      	str	r2, [r3, #0]
 8003ec0:	683b      	ldr	r3, [r7, #0]
 8003ec2:	689a      	ldr	r2, [r3, #8]
 8003ec4:	687b      	ldr	r3, [r7, #4]
 8003ec6:	62da      	str	r2, [r3, #44]	; 0x2c
 8003ec8:	683b      	ldr	r3, [r7, #0]
 8003eca:	681a      	ldr	r2, [r3, #0]
 8003ecc:	687b      	ldr	r3, [r7, #4]
 8003ece:	629a      	str	r2, [r3, #40]	; 0x28
 8003ed0:	687b      	ldr	r3, [r7, #4]
 8003ed2:	4a0a      	ldr	r2, [pc, #40]	; (8003efc <TIM_Base_SetConfig+0x114>)
 8003ed4:	4293      	cmp	r3, r2
 8003ed6:	d003      	beq.n	8003ee0 <TIM_Base_SetConfig+0xf8>
 8003ed8:	687b      	ldr	r3, [r7, #4]
 8003eda:	4a0c      	ldr	r2, [pc, #48]	; (8003f0c <TIM_Base_SetConfig+0x124>)
 8003edc:	4293      	cmp	r3, r2
 8003ede:	d103      	bne.n	8003ee8 <TIM_Base_SetConfig+0x100>
 8003ee0:	683b      	ldr	r3, [r7, #0]
 8003ee2:	691a      	ldr	r2, [r3, #16]
 8003ee4:	687b      	ldr	r3, [r7, #4]
 8003ee6:	631a      	str	r2, [r3, #48]	; 0x30
 8003ee8:	687b      	ldr	r3, [r7, #4]
 8003eea:	2201      	movs	r2, #1
 8003eec:	615a      	str	r2, [r3, #20]
 8003eee:	bf00      	nop
 8003ef0:	3714      	adds	r7, #20
 8003ef2:	46bd      	mov	sp, r7
 8003ef4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ef8:	4770      	bx	lr
 8003efa:	bf00      	nop
 8003efc:	40010000 	.word	0x40010000
 8003f00:	40000400 	.word	0x40000400
 8003f04:	40000800 	.word	0x40000800
 8003f08:	40000c00 	.word	0x40000c00
 8003f0c:	40010400 	.word	0x40010400
 8003f10:	40014000 	.word	0x40014000
 8003f14:	40014400 	.word	0x40014400
 8003f18:	40014800 	.word	0x40014800
 8003f1c:	40001800 	.word	0x40001800
 8003f20:	40001c00 	.word	0x40001c00
 8003f24:	40002000 	.word	0x40002000

08003f28 <TIM_TI1_ConfigInputStage>:
 8003f28:	b480      	push	{r7}
 8003f2a:	b087      	sub	sp, #28
 8003f2c:	af00      	add	r7, sp, #0
 8003f2e:	60f8      	str	r0, [r7, #12]
 8003f30:	60b9      	str	r1, [r7, #8]
 8003f32:	607a      	str	r2, [r7, #4]
 8003f34:	68fb      	ldr	r3, [r7, #12]
 8003f36:	6a1b      	ldr	r3, [r3, #32]
 8003f38:	617b      	str	r3, [r7, #20]
 8003f3a:	68fb      	ldr	r3, [r7, #12]
 8003f3c:	6a1b      	ldr	r3, [r3, #32]
 8003f3e:	f023 0201 	bic.w	r2, r3, #1
 8003f42:	68fb      	ldr	r3, [r7, #12]
 8003f44:	621a      	str	r2, [r3, #32]
 8003f46:	68fb      	ldr	r3, [r7, #12]
 8003f48:	699b      	ldr	r3, [r3, #24]
 8003f4a:	613b      	str	r3, [r7, #16]
 8003f4c:	693b      	ldr	r3, [r7, #16]
 8003f4e:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8003f52:	613b      	str	r3, [r7, #16]
 8003f54:	687b      	ldr	r3, [r7, #4]
 8003f56:	011b      	lsls	r3, r3, #4
 8003f58:	693a      	ldr	r2, [r7, #16]
 8003f5a:	4313      	orrs	r3, r2
 8003f5c:	613b      	str	r3, [r7, #16]
 8003f5e:	697b      	ldr	r3, [r7, #20]
 8003f60:	f023 030a 	bic.w	r3, r3, #10
 8003f64:	617b      	str	r3, [r7, #20]
 8003f66:	697a      	ldr	r2, [r7, #20]
 8003f68:	68bb      	ldr	r3, [r7, #8]
 8003f6a:	4313      	orrs	r3, r2
 8003f6c:	617b      	str	r3, [r7, #20]
 8003f6e:	68fb      	ldr	r3, [r7, #12]
 8003f70:	693a      	ldr	r2, [r7, #16]
 8003f72:	619a      	str	r2, [r3, #24]
 8003f74:	68fb      	ldr	r3, [r7, #12]
 8003f76:	697a      	ldr	r2, [r7, #20]
 8003f78:	621a      	str	r2, [r3, #32]
 8003f7a:	bf00      	nop
 8003f7c:	371c      	adds	r7, #28
 8003f7e:	46bd      	mov	sp, r7
 8003f80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f84:	4770      	bx	lr

08003f86 <TIM_TI2_ConfigInputStage>:
 8003f86:	b480      	push	{r7}
 8003f88:	b087      	sub	sp, #28
 8003f8a:	af00      	add	r7, sp, #0
 8003f8c:	60f8      	str	r0, [r7, #12]
 8003f8e:	60b9      	str	r1, [r7, #8]
 8003f90:	607a      	str	r2, [r7, #4]
 8003f92:	68fb      	ldr	r3, [r7, #12]
 8003f94:	6a1b      	ldr	r3, [r3, #32]
 8003f96:	f023 0210 	bic.w	r2, r3, #16
 8003f9a:	68fb      	ldr	r3, [r7, #12]
 8003f9c:	621a      	str	r2, [r3, #32]
 8003f9e:	68fb      	ldr	r3, [r7, #12]
 8003fa0:	699b      	ldr	r3, [r3, #24]
 8003fa2:	617b      	str	r3, [r7, #20]
 8003fa4:	68fb      	ldr	r3, [r7, #12]
 8003fa6:	6a1b      	ldr	r3, [r3, #32]
 8003fa8:	613b      	str	r3, [r7, #16]
 8003faa:	697b      	ldr	r3, [r7, #20]
 8003fac:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8003fb0:	617b      	str	r3, [r7, #20]
 8003fb2:	687b      	ldr	r3, [r7, #4]
 8003fb4:	031b      	lsls	r3, r3, #12
 8003fb6:	697a      	ldr	r2, [r7, #20]
 8003fb8:	4313      	orrs	r3, r2
 8003fba:	617b      	str	r3, [r7, #20]
 8003fbc:	693b      	ldr	r3, [r7, #16]
 8003fbe:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8003fc2:	613b      	str	r3, [r7, #16]
 8003fc4:	68bb      	ldr	r3, [r7, #8]
 8003fc6:	011b      	lsls	r3, r3, #4
 8003fc8:	693a      	ldr	r2, [r7, #16]
 8003fca:	4313      	orrs	r3, r2
 8003fcc:	613b      	str	r3, [r7, #16]
 8003fce:	68fb      	ldr	r3, [r7, #12]
 8003fd0:	697a      	ldr	r2, [r7, #20]
 8003fd2:	619a      	str	r2, [r3, #24]
 8003fd4:	68fb      	ldr	r3, [r7, #12]
 8003fd6:	693a      	ldr	r2, [r7, #16]
 8003fd8:	621a      	str	r2, [r3, #32]
 8003fda:	bf00      	nop
 8003fdc:	371c      	adds	r7, #28
 8003fde:	46bd      	mov	sp, r7
 8003fe0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003fe4:	4770      	bx	lr

08003fe6 <TIM_ITRx_SetConfig>:
 8003fe6:	b480      	push	{r7}
 8003fe8:	b085      	sub	sp, #20
 8003fea:	af00      	add	r7, sp, #0
 8003fec:	6078      	str	r0, [r7, #4]
 8003fee:	6039      	str	r1, [r7, #0]
 8003ff0:	687b      	ldr	r3, [r7, #4]
 8003ff2:	689b      	ldr	r3, [r3, #8]
 8003ff4:	60fb      	str	r3, [r7, #12]
 8003ff6:	68fb      	ldr	r3, [r7, #12]
 8003ff8:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003ffc:	60fb      	str	r3, [r7, #12]
 8003ffe:	683a      	ldr	r2, [r7, #0]
 8004000:	68fb      	ldr	r3, [r7, #12]
 8004002:	4313      	orrs	r3, r2
 8004004:	f043 0307 	orr.w	r3, r3, #7
 8004008:	60fb      	str	r3, [r7, #12]
 800400a:	687b      	ldr	r3, [r7, #4]
 800400c:	68fa      	ldr	r2, [r7, #12]
 800400e:	609a      	str	r2, [r3, #8]
 8004010:	bf00      	nop
 8004012:	3714      	adds	r7, #20
 8004014:	46bd      	mov	sp, r7
 8004016:	f85d 7b04 	ldr.w	r7, [sp], #4
 800401a:	4770      	bx	lr

0800401c <TIM_ETR_SetConfig>:
 800401c:	b480      	push	{r7}
 800401e:	b087      	sub	sp, #28
 8004020:	af00      	add	r7, sp, #0
 8004022:	60f8      	str	r0, [r7, #12]
 8004024:	60b9      	str	r1, [r7, #8]
 8004026:	607a      	str	r2, [r7, #4]
 8004028:	603b      	str	r3, [r7, #0]
 800402a:	68fb      	ldr	r3, [r7, #12]
 800402c:	689b      	ldr	r3, [r3, #8]
 800402e:	617b      	str	r3, [r7, #20]
 8004030:	697b      	ldr	r3, [r7, #20]
 8004032:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8004036:	617b      	str	r3, [r7, #20]
 8004038:	683b      	ldr	r3, [r7, #0]
 800403a:	021a      	lsls	r2, r3, #8
 800403c:	687b      	ldr	r3, [r7, #4]
 800403e:	431a      	orrs	r2, r3
 8004040:	68bb      	ldr	r3, [r7, #8]
 8004042:	4313      	orrs	r3, r2
 8004044:	697a      	ldr	r2, [r7, #20]
 8004046:	4313      	orrs	r3, r2
 8004048:	617b      	str	r3, [r7, #20]
 800404a:	68fb      	ldr	r3, [r7, #12]
 800404c:	697a      	ldr	r2, [r7, #20]
 800404e:	609a      	str	r2, [r3, #8]
 8004050:	bf00      	nop
 8004052:	371c      	adds	r7, #28
 8004054:	46bd      	mov	sp, r7
 8004056:	f85d 7b04 	ldr.w	r7, [sp], #4
 800405a:	4770      	bx	lr

0800405c <HAL_TIMEx_MasterConfigSynchronization>:
 800405c:	b480      	push	{r7}
 800405e:	b085      	sub	sp, #20
 8004060:	af00      	add	r7, sp, #0
 8004062:	6078      	str	r0, [r7, #4]
 8004064:	6039      	str	r1, [r7, #0]
 8004066:	687b      	ldr	r3, [r7, #4]
 8004068:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800406c:	2b01      	cmp	r3, #1
 800406e:	d101      	bne.n	8004074 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8004070:	2302      	movs	r3, #2
 8004072:	e05a      	b.n	800412a <HAL_TIMEx_MasterConfigSynchronization+0xce>
 8004074:	687b      	ldr	r3, [r7, #4]
 8004076:	2201      	movs	r2, #1
 8004078:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800407c:	687b      	ldr	r3, [r7, #4]
 800407e:	2202      	movs	r2, #2
 8004080:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004084:	687b      	ldr	r3, [r7, #4]
 8004086:	681b      	ldr	r3, [r3, #0]
 8004088:	685b      	ldr	r3, [r3, #4]
 800408a:	60fb      	str	r3, [r7, #12]
 800408c:	687b      	ldr	r3, [r7, #4]
 800408e:	681b      	ldr	r3, [r3, #0]
 8004090:	689b      	ldr	r3, [r3, #8]
 8004092:	60bb      	str	r3, [r7, #8]
 8004094:	68fb      	ldr	r3, [r7, #12]
 8004096:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800409a:	60fb      	str	r3, [r7, #12]
 800409c:	683b      	ldr	r3, [r7, #0]
 800409e:	681b      	ldr	r3, [r3, #0]
 80040a0:	68fa      	ldr	r2, [r7, #12]
 80040a2:	4313      	orrs	r3, r2
 80040a4:	60fb      	str	r3, [r7, #12]
 80040a6:	687b      	ldr	r3, [r7, #4]
 80040a8:	681b      	ldr	r3, [r3, #0]
 80040aa:	68fa      	ldr	r2, [r7, #12]
 80040ac:	605a      	str	r2, [r3, #4]
 80040ae:	687b      	ldr	r3, [r7, #4]
 80040b0:	681b      	ldr	r3, [r3, #0]
 80040b2:	4a21      	ldr	r2, [pc, #132]	; (8004138 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 80040b4:	4293      	cmp	r3, r2
 80040b6:	d022      	beq.n	80040fe <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80040b8:	687b      	ldr	r3, [r7, #4]
 80040ba:	681b      	ldr	r3, [r3, #0]
 80040bc:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80040c0:	d01d      	beq.n	80040fe <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80040c2:	687b      	ldr	r3, [r7, #4]
 80040c4:	681b      	ldr	r3, [r3, #0]
 80040c6:	4a1d      	ldr	r2, [pc, #116]	; (800413c <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 80040c8:	4293      	cmp	r3, r2
 80040ca:	d018      	beq.n	80040fe <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80040cc:	687b      	ldr	r3, [r7, #4]
 80040ce:	681b      	ldr	r3, [r3, #0]
 80040d0:	4a1b      	ldr	r2, [pc, #108]	; (8004140 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 80040d2:	4293      	cmp	r3, r2
 80040d4:	d013      	beq.n	80040fe <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80040d6:	687b      	ldr	r3, [r7, #4]
 80040d8:	681b      	ldr	r3, [r3, #0]
 80040da:	4a1a      	ldr	r2, [pc, #104]	; (8004144 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 80040dc:	4293      	cmp	r3, r2
 80040de:	d00e      	beq.n	80040fe <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80040e0:	687b      	ldr	r3, [r7, #4]
 80040e2:	681b      	ldr	r3, [r3, #0]
 80040e4:	4a18      	ldr	r2, [pc, #96]	; (8004148 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 80040e6:	4293      	cmp	r3, r2
 80040e8:	d009      	beq.n	80040fe <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80040ea:	687b      	ldr	r3, [r7, #4]
 80040ec:	681b      	ldr	r3, [r3, #0]
 80040ee:	4a17      	ldr	r2, [pc, #92]	; (800414c <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 80040f0:	4293      	cmp	r3, r2
 80040f2:	d004      	beq.n	80040fe <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80040f4:	687b      	ldr	r3, [r7, #4]
 80040f6:	681b      	ldr	r3, [r3, #0]
 80040f8:	4a15      	ldr	r2, [pc, #84]	; (8004150 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 80040fa:	4293      	cmp	r3, r2
 80040fc:	d10c      	bne.n	8004118 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 80040fe:	68bb      	ldr	r3, [r7, #8]
 8004100:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8004104:	60bb      	str	r3, [r7, #8]
 8004106:	683b      	ldr	r3, [r7, #0]
 8004108:	685b      	ldr	r3, [r3, #4]
 800410a:	68ba      	ldr	r2, [r7, #8]
 800410c:	4313      	orrs	r3, r2
 800410e:	60bb      	str	r3, [r7, #8]
 8004110:	687b      	ldr	r3, [r7, #4]
 8004112:	681b      	ldr	r3, [r3, #0]
 8004114:	68ba      	ldr	r2, [r7, #8]
 8004116:	609a      	str	r2, [r3, #8]
 8004118:	687b      	ldr	r3, [r7, #4]
 800411a:	2201      	movs	r2, #1
 800411c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004120:	687b      	ldr	r3, [r7, #4]
 8004122:	2200      	movs	r2, #0
 8004124:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004128:	2300      	movs	r3, #0
 800412a:	4618      	mov	r0, r3
 800412c:	3714      	adds	r7, #20
 800412e:	46bd      	mov	sp, r7
 8004130:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004134:	4770      	bx	lr
 8004136:	bf00      	nop
 8004138:	40010000 	.word	0x40010000
 800413c:	40000400 	.word	0x40000400
 8004140:	40000800 	.word	0x40000800
 8004144:	40000c00 	.word	0x40000c00
 8004148:	40010400 	.word	0x40010400
 800414c:	40014000 	.word	0x40014000
 8004150:	40001800 	.word	0x40001800

08004154 <HAL_UART_Init>:
 8004154:	b580      	push	{r7, lr}
 8004156:	b082      	sub	sp, #8
 8004158:	af00      	add	r7, sp, #0
 800415a:	6078      	str	r0, [r7, #4]
 800415c:	687b      	ldr	r3, [r7, #4]
 800415e:	2b00      	cmp	r3, #0
 8004160:	d101      	bne.n	8004166 <HAL_UART_Init+0x12>
 8004162:	2301      	movs	r3, #1
 8004164:	e03f      	b.n	80041e6 <HAL_UART_Init+0x92>
 8004166:	687b      	ldr	r3, [r7, #4]
 8004168:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800416c:	b2db      	uxtb	r3, r3
 800416e:	2b00      	cmp	r3, #0
 8004170:	d106      	bne.n	8004180 <HAL_UART_Init+0x2c>
 8004172:	687b      	ldr	r3, [r7, #4]
 8004174:	2200      	movs	r2, #0
 8004176:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800417a:	6878      	ldr	r0, [r7, #4]
 800417c:	f7fd fa4e 	bl	800161c <HAL_UART_MspInit>
 8004180:	687b      	ldr	r3, [r7, #4]
 8004182:	2224      	movs	r2, #36	; 0x24
 8004184:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004188:	687b      	ldr	r3, [r7, #4]
 800418a:	681b      	ldr	r3, [r3, #0]
 800418c:	68da      	ldr	r2, [r3, #12]
 800418e:	687b      	ldr	r3, [r7, #4]
 8004190:	681b      	ldr	r3, [r3, #0]
 8004192:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8004196:	60da      	str	r2, [r3, #12]
 8004198:	6878      	ldr	r0, [r7, #4]
 800419a:	f000 fc7b 	bl	8004a94 <UART_SetConfig>
 800419e:	687b      	ldr	r3, [r7, #4]
 80041a0:	681b      	ldr	r3, [r3, #0]
 80041a2:	691a      	ldr	r2, [r3, #16]
 80041a4:	687b      	ldr	r3, [r7, #4]
 80041a6:	681b      	ldr	r3, [r3, #0]
 80041a8:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 80041ac:	611a      	str	r2, [r3, #16]
 80041ae:	687b      	ldr	r3, [r7, #4]
 80041b0:	681b      	ldr	r3, [r3, #0]
 80041b2:	695a      	ldr	r2, [r3, #20]
 80041b4:	687b      	ldr	r3, [r7, #4]
 80041b6:	681b      	ldr	r3, [r3, #0]
 80041b8:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 80041bc:	615a      	str	r2, [r3, #20]
 80041be:	687b      	ldr	r3, [r7, #4]
 80041c0:	681b      	ldr	r3, [r3, #0]
 80041c2:	68da      	ldr	r2, [r3, #12]
 80041c4:	687b      	ldr	r3, [r7, #4]
 80041c6:	681b      	ldr	r3, [r3, #0]
 80041c8:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80041cc:	60da      	str	r2, [r3, #12]
 80041ce:	687b      	ldr	r3, [r7, #4]
 80041d0:	2200      	movs	r2, #0
 80041d2:	641a      	str	r2, [r3, #64]	; 0x40
 80041d4:	687b      	ldr	r3, [r7, #4]
 80041d6:	2220      	movs	r2, #32
 80041d8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80041dc:	687b      	ldr	r3, [r7, #4]
 80041de:	2220      	movs	r2, #32
 80041e0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80041e4:	2300      	movs	r3, #0
 80041e6:	4618      	mov	r0, r3
 80041e8:	3708      	adds	r7, #8
 80041ea:	46bd      	mov	sp, r7
 80041ec:	bd80      	pop	{r7, pc}
	...

080041f0 <HAL_UART_IRQHandler>:
 80041f0:	b580      	push	{r7, lr}
 80041f2:	b0ba      	sub	sp, #232	; 0xe8
 80041f4:	af00      	add	r7, sp, #0
 80041f6:	6078      	str	r0, [r7, #4]
 80041f8:	687b      	ldr	r3, [r7, #4]
 80041fa:	681b      	ldr	r3, [r3, #0]
 80041fc:	681b      	ldr	r3, [r3, #0]
 80041fe:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 8004202:	687b      	ldr	r3, [r7, #4]
 8004204:	681b      	ldr	r3, [r3, #0]
 8004206:	68db      	ldr	r3, [r3, #12]
 8004208:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 800420c:	687b      	ldr	r3, [r7, #4]
 800420e:	681b      	ldr	r3, [r3, #0]
 8004210:	695b      	ldr	r3, [r3, #20]
 8004212:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 8004216:	2300      	movs	r3, #0
 8004218:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800421c:	2300      	movs	r3, #0
 800421e:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 8004222:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8004226:	f003 030f 	and.w	r3, r3, #15
 800422a:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800422e:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 8004232:	2b00      	cmp	r3, #0
 8004234:	d10f      	bne.n	8004256 <HAL_UART_IRQHandler+0x66>
 8004236:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800423a:	f003 0320 	and.w	r3, r3, #32
 800423e:	2b00      	cmp	r3, #0
 8004240:	d009      	beq.n	8004256 <HAL_UART_IRQHandler+0x66>
 8004242:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8004246:	f003 0320 	and.w	r3, r3, #32
 800424a:	2b00      	cmp	r3, #0
 800424c:	d003      	beq.n	8004256 <HAL_UART_IRQHandler+0x66>
 800424e:	6878      	ldr	r0, [r7, #4]
 8004250:	f000 fb65 	bl	800491e <UART_Receive_IT>
 8004254:	e256      	b.n	8004704 <HAL_UART_IRQHandler+0x514>
 8004256:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800425a:	2b00      	cmp	r3, #0
 800425c:	f000 80de 	beq.w	800441c <HAL_UART_IRQHandler+0x22c>
 8004260:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8004264:	f003 0301 	and.w	r3, r3, #1
 8004268:	2b00      	cmp	r3, #0
 800426a:	d106      	bne.n	800427a <HAL_UART_IRQHandler+0x8a>
 800426c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8004270:	f403 7390 	and.w	r3, r3, #288	; 0x120
 8004274:	2b00      	cmp	r3, #0
 8004276:	f000 80d1 	beq.w	800441c <HAL_UART_IRQHandler+0x22c>
 800427a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800427e:	f003 0301 	and.w	r3, r3, #1
 8004282:	2b00      	cmp	r3, #0
 8004284:	d00b      	beq.n	800429e <HAL_UART_IRQHandler+0xae>
 8004286:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800428a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800428e:	2b00      	cmp	r3, #0
 8004290:	d005      	beq.n	800429e <HAL_UART_IRQHandler+0xae>
 8004292:	687b      	ldr	r3, [r7, #4]
 8004294:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004296:	f043 0201 	orr.w	r2, r3, #1
 800429a:	687b      	ldr	r3, [r7, #4]
 800429c:	641a      	str	r2, [r3, #64]	; 0x40
 800429e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80042a2:	f003 0304 	and.w	r3, r3, #4
 80042a6:	2b00      	cmp	r3, #0
 80042a8:	d00b      	beq.n	80042c2 <HAL_UART_IRQHandler+0xd2>
 80042aa:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 80042ae:	f003 0301 	and.w	r3, r3, #1
 80042b2:	2b00      	cmp	r3, #0
 80042b4:	d005      	beq.n	80042c2 <HAL_UART_IRQHandler+0xd2>
 80042b6:	687b      	ldr	r3, [r7, #4]
 80042b8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80042ba:	f043 0202 	orr.w	r2, r3, #2
 80042be:	687b      	ldr	r3, [r7, #4]
 80042c0:	641a      	str	r2, [r3, #64]	; 0x40
 80042c2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80042c6:	f003 0302 	and.w	r3, r3, #2
 80042ca:	2b00      	cmp	r3, #0
 80042cc:	d00b      	beq.n	80042e6 <HAL_UART_IRQHandler+0xf6>
 80042ce:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 80042d2:	f003 0301 	and.w	r3, r3, #1
 80042d6:	2b00      	cmp	r3, #0
 80042d8:	d005      	beq.n	80042e6 <HAL_UART_IRQHandler+0xf6>
 80042da:	687b      	ldr	r3, [r7, #4]
 80042dc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80042de:	f043 0204 	orr.w	r2, r3, #4
 80042e2:	687b      	ldr	r3, [r7, #4]
 80042e4:	641a      	str	r2, [r3, #64]	; 0x40
 80042e6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80042ea:	f003 0308 	and.w	r3, r3, #8
 80042ee:	2b00      	cmp	r3, #0
 80042f0:	d011      	beq.n	8004316 <HAL_UART_IRQHandler+0x126>
 80042f2:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80042f6:	f003 0320 	and.w	r3, r3, #32
 80042fa:	2b00      	cmp	r3, #0
 80042fc:	d105      	bne.n	800430a <HAL_UART_IRQHandler+0x11a>
 80042fe:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8004302:	f003 0301 	and.w	r3, r3, #1
 8004306:	2b00      	cmp	r3, #0
 8004308:	d005      	beq.n	8004316 <HAL_UART_IRQHandler+0x126>
 800430a:	687b      	ldr	r3, [r7, #4]
 800430c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800430e:	f043 0208 	orr.w	r2, r3, #8
 8004312:	687b      	ldr	r3, [r7, #4]
 8004314:	641a      	str	r2, [r3, #64]	; 0x40
 8004316:	687b      	ldr	r3, [r7, #4]
 8004318:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800431a:	2b00      	cmp	r3, #0
 800431c:	f000 81ed 	beq.w	80046fa <HAL_UART_IRQHandler+0x50a>
 8004320:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8004324:	f003 0320 	and.w	r3, r3, #32
 8004328:	2b00      	cmp	r3, #0
 800432a:	d008      	beq.n	800433e <HAL_UART_IRQHandler+0x14e>
 800432c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8004330:	f003 0320 	and.w	r3, r3, #32
 8004334:	2b00      	cmp	r3, #0
 8004336:	d002      	beq.n	800433e <HAL_UART_IRQHandler+0x14e>
 8004338:	6878      	ldr	r0, [r7, #4]
 800433a:	f000 faf0 	bl	800491e <UART_Receive_IT>
 800433e:	687b      	ldr	r3, [r7, #4]
 8004340:	681b      	ldr	r3, [r3, #0]
 8004342:	695b      	ldr	r3, [r3, #20]
 8004344:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004348:	2b40      	cmp	r3, #64	; 0x40
 800434a:	bf0c      	ite	eq
 800434c:	2301      	moveq	r3, #1
 800434e:	2300      	movne	r3, #0
 8004350:	b2db      	uxtb	r3, r3
 8004352:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 8004356:	687b      	ldr	r3, [r7, #4]
 8004358:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800435a:	f003 0308 	and.w	r3, r3, #8
 800435e:	2b00      	cmp	r3, #0
 8004360:	d103      	bne.n	800436a <HAL_UART_IRQHandler+0x17a>
 8004362:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 8004366:	2b00      	cmp	r3, #0
 8004368:	d04f      	beq.n	800440a <HAL_UART_IRQHandler+0x21a>
 800436a:	6878      	ldr	r0, [r7, #4]
 800436c:	f000 f9f8 	bl	8004760 <UART_EndRxTransfer>
 8004370:	687b      	ldr	r3, [r7, #4]
 8004372:	681b      	ldr	r3, [r3, #0]
 8004374:	695b      	ldr	r3, [r3, #20]
 8004376:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800437a:	2b40      	cmp	r3, #64	; 0x40
 800437c:	d141      	bne.n	8004402 <HAL_UART_IRQHandler+0x212>
 800437e:	687b      	ldr	r3, [r7, #4]
 8004380:	681b      	ldr	r3, [r3, #0]
 8004382:	3314      	adds	r3, #20
 8004384:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 8004388:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 800438c:	e853 3f00 	ldrex	r3, [r3]
 8004390:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 8004394:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8004398:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800439c:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 80043a0:	687b      	ldr	r3, [r7, #4]
 80043a2:	681b      	ldr	r3, [r3, #0]
 80043a4:	3314      	adds	r3, #20
 80043a6:	f8d7 20d0 	ldr.w	r2, [r7, #208]	; 0xd0
 80043aa:	f8c7 20a8 	str.w	r2, [r7, #168]	; 0xa8
 80043ae:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 80043b2:	f8d7 10a4 	ldr.w	r1, [r7, #164]	; 0xa4
 80043b6:	f8d7 20a8 	ldr.w	r2, [r7, #168]	; 0xa8
 80043ba:	e841 2300 	strex	r3, r2, [r1]
 80043be:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 80043c2:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 80043c6:	2b00      	cmp	r3, #0
 80043c8:	d1d9      	bne.n	800437e <HAL_UART_IRQHandler+0x18e>
 80043ca:	687b      	ldr	r3, [r7, #4]
 80043cc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80043ce:	2b00      	cmp	r3, #0
 80043d0:	d013      	beq.n	80043fa <HAL_UART_IRQHandler+0x20a>
 80043d2:	687b      	ldr	r3, [r7, #4]
 80043d4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80043d6:	4a7d      	ldr	r2, [pc, #500]	; (80045cc <HAL_UART_IRQHandler+0x3dc>)
 80043d8:	651a      	str	r2, [r3, #80]	; 0x50
 80043da:	687b      	ldr	r3, [r7, #4]
 80043dc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80043de:	4618      	mov	r0, r3
 80043e0:	f7fe f8df 	bl	80025a2 <HAL_DMA_Abort_IT>
 80043e4:	4603      	mov	r3, r0
 80043e6:	2b00      	cmp	r3, #0
 80043e8:	d016      	beq.n	8004418 <HAL_UART_IRQHandler+0x228>
 80043ea:	687b      	ldr	r3, [r7, #4]
 80043ec:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80043ee:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80043f0:	687a      	ldr	r2, [r7, #4]
 80043f2:	6b92      	ldr	r2, [r2, #56]	; 0x38
 80043f4:	4610      	mov	r0, r2
 80043f6:	4798      	blx	r3
 80043f8:	e00e      	b.n	8004418 <HAL_UART_IRQHandler+0x228>
 80043fa:	6878      	ldr	r0, [r7, #4]
 80043fc:	f000 f99a 	bl	8004734 <HAL_UART_ErrorCallback>
 8004400:	e00a      	b.n	8004418 <HAL_UART_IRQHandler+0x228>
 8004402:	6878      	ldr	r0, [r7, #4]
 8004404:	f000 f996 	bl	8004734 <HAL_UART_ErrorCallback>
 8004408:	e006      	b.n	8004418 <HAL_UART_IRQHandler+0x228>
 800440a:	6878      	ldr	r0, [r7, #4]
 800440c:	f000 f992 	bl	8004734 <HAL_UART_ErrorCallback>
 8004410:	687b      	ldr	r3, [r7, #4]
 8004412:	2200      	movs	r2, #0
 8004414:	641a      	str	r2, [r3, #64]	; 0x40
 8004416:	e170      	b.n	80046fa <HAL_UART_IRQHandler+0x50a>
 8004418:	bf00      	nop
 800441a:	e16e      	b.n	80046fa <HAL_UART_IRQHandler+0x50a>
 800441c:	687b      	ldr	r3, [r7, #4]
 800441e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004420:	2b01      	cmp	r3, #1
 8004422:	f040 814a 	bne.w	80046ba <HAL_UART_IRQHandler+0x4ca>
 8004426:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800442a:	f003 0310 	and.w	r3, r3, #16
 800442e:	2b00      	cmp	r3, #0
 8004430:	f000 8143 	beq.w	80046ba <HAL_UART_IRQHandler+0x4ca>
 8004434:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8004438:	f003 0310 	and.w	r3, r3, #16
 800443c:	2b00      	cmp	r3, #0
 800443e:	f000 813c 	beq.w	80046ba <HAL_UART_IRQHandler+0x4ca>
 8004442:	2300      	movs	r3, #0
 8004444:	60bb      	str	r3, [r7, #8]
 8004446:	687b      	ldr	r3, [r7, #4]
 8004448:	681b      	ldr	r3, [r3, #0]
 800444a:	681b      	ldr	r3, [r3, #0]
 800444c:	60bb      	str	r3, [r7, #8]
 800444e:	687b      	ldr	r3, [r7, #4]
 8004450:	681b      	ldr	r3, [r3, #0]
 8004452:	685b      	ldr	r3, [r3, #4]
 8004454:	60bb      	str	r3, [r7, #8]
 8004456:	68bb      	ldr	r3, [r7, #8]
 8004458:	687b      	ldr	r3, [r7, #4]
 800445a:	681b      	ldr	r3, [r3, #0]
 800445c:	695b      	ldr	r3, [r3, #20]
 800445e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004462:	2b40      	cmp	r3, #64	; 0x40
 8004464:	f040 80b4 	bne.w	80045d0 <HAL_UART_IRQHandler+0x3e0>
 8004468:	687b      	ldr	r3, [r7, #4]
 800446a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800446c:	681b      	ldr	r3, [r3, #0]
 800446e:	685b      	ldr	r3, [r3, #4]
 8004470:	f8a7 30be 	strh.w	r3, [r7, #190]	; 0xbe
 8004474:	f8b7 30be 	ldrh.w	r3, [r7, #190]	; 0xbe
 8004478:	2b00      	cmp	r3, #0
 800447a:	f000 8140 	beq.w	80046fe <HAL_UART_IRQHandler+0x50e>
 800447e:	687b      	ldr	r3, [r7, #4]
 8004480:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8004482:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 8004486:	429a      	cmp	r2, r3
 8004488:	f080 8139 	bcs.w	80046fe <HAL_UART_IRQHandler+0x50e>
 800448c:	687b      	ldr	r3, [r7, #4]
 800448e:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 8004492:	85da      	strh	r2, [r3, #46]	; 0x2e
 8004494:	687b      	ldr	r3, [r7, #4]
 8004496:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004498:	69db      	ldr	r3, [r3, #28]
 800449a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800449e:	f000 8088 	beq.w	80045b2 <HAL_UART_IRQHandler+0x3c2>
 80044a2:	687b      	ldr	r3, [r7, #4]
 80044a4:	681b      	ldr	r3, [r3, #0]
 80044a6:	330c      	adds	r3, #12
 80044a8:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 80044ac:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 80044b0:	e853 3f00 	ldrex	r3, [r3]
 80044b4:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 80044b8:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 80044bc:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80044c0:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 80044c4:	687b      	ldr	r3, [r7, #4]
 80044c6:	681b      	ldr	r3, [r3, #0]
 80044c8:	330c      	adds	r3, #12
 80044ca:	f8d7 20b8 	ldr.w	r2, [r7, #184]	; 0xb8
 80044ce:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 80044d2:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 80044d6:	f8d7 1090 	ldr.w	r1, [r7, #144]	; 0x90
 80044da:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 80044de:	e841 2300 	strex	r3, r2, [r1]
 80044e2:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 80044e6:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 80044ea:	2b00      	cmp	r3, #0
 80044ec:	d1d9      	bne.n	80044a2 <HAL_UART_IRQHandler+0x2b2>
 80044ee:	687b      	ldr	r3, [r7, #4]
 80044f0:	681b      	ldr	r3, [r3, #0]
 80044f2:	3314      	adds	r3, #20
 80044f4:	677b      	str	r3, [r7, #116]	; 0x74
 80044f6:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 80044f8:	e853 3f00 	ldrex	r3, [r3]
 80044fc:	673b      	str	r3, [r7, #112]	; 0x70
 80044fe:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8004500:	f023 0301 	bic.w	r3, r3, #1
 8004504:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8004508:	687b      	ldr	r3, [r7, #4]
 800450a:	681b      	ldr	r3, [r3, #0]
 800450c:	3314      	adds	r3, #20
 800450e:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 8004512:	f8c7 2080 	str.w	r2, [r7, #128]	; 0x80
 8004516:	67fb      	str	r3, [r7, #124]	; 0x7c
 8004518:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 800451a:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 800451e:	e841 2300 	strex	r3, r2, [r1]
 8004522:	67bb      	str	r3, [r7, #120]	; 0x78
 8004524:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8004526:	2b00      	cmp	r3, #0
 8004528:	d1e1      	bne.n	80044ee <HAL_UART_IRQHandler+0x2fe>
 800452a:	687b      	ldr	r3, [r7, #4]
 800452c:	681b      	ldr	r3, [r3, #0]
 800452e:	3314      	adds	r3, #20
 8004530:	663b      	str	r3, [r7, #96]	; 0x60
 8004532:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8004534:	e853 3f00 	ldrex	r3, [r3]
 8004538:	65fb      	str	r3, [r7, #92]	; 0x5c
 800453a:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800453c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8004540:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8004544:	687b      	ldr	r3, [r7, #4]
 8004546:	681b      	ldr	r3, [r3, #0]
 8004548:	3314      	adds	r3, #20
 800454a:	f8d7 20b0 	ldr.w	r2, [r7, #176]	; 0xb0
 800454e:	66fa      	str	r2, [r7, #108]	; 0x6c
 8004550:	66bb      	str	r3, [r7, #104]	; 0x68
 8004552:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 8004554:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8004556:	e841 2300 	strex	r3, r2, [r1]
 800455a:	667b      	str	r3, [r7, #100]	; 0x64
 800455c:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800455e:	2b00      	cmp	r3, #0
 8004560:	d1e3      	bne.n	800452a <HAL_UART_IRQHandler+0x33a>
 8004562:	687b      	ldr	r3, [r7, #4]
 8004564:	2220      	movs	r2, #32
 8004566:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800456a:	687b      	ldr	r3, [r7, #4]
 800456c:	2200      	movs	r2, #0
 800456e:	631a      	str	r2, [r3, #48]	; 0x30
 8004570:	687b      	ldr	r3, [r7, #4]
 8004572:	681b      	ldr	r3, [r3, #0]
 8004574:	330c      	adds	r3, #12
 8004576:	64fb      	str	r3, [r7, #76]	; 0x4c
 8004578:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800457a:	e853 3f00 	ldrex	r3, [r3]
 800457e:	64bb      	str	r3, [r7, #72]	; 0x48
 8004580:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8004582:	f023 0310 	bic.w	r3, r3, #16
 8004586:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 800458a:	687b      	ldr	r3, [r7, #4]
 800458c:	681b      	ldr	r3, [r3, #0]
 800458e:	330c      	adds	r3, #12
 8004590:	f8d7 20ac 	ldr.w	r2, [r7, #172]	; 0xac
 8004594:	65ba      	str	r2, [r7, #88]	; 0x58
 8004596:	657b      	str	r3, [r7, #84]	; 0x54
 8004598:	6d79      	ldr	r1, [r7, #84]	; 0x54
 800459a:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800459c:	e841 2300 	strex	r3, r2, [r1]
 80045a0:	653b      	str	r3, [r7, #80]	; 0x50
 80045a2:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80045a4:	2b00      	cmp	r3, #0
 80045a6:	d1e3      	bne.n	8004570 <HAL_UART_IRQHandler+0x380>
 80045a8:	687b      	ldr	r3, [r7, #4]
 80045aa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80045ac:	4618      	mov	r0, r3
 80045ae:	f7fd ff88 	bl	80024c2 <HAL_DMA_Abort>
 80045b2:	687b      	ldr	r3, [r7, #4]
 80045b4:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 80045b6:	687b      	ldr	r3, [r7, #4]
 80045b8:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 80045ba:	b29b      	uxth	r3, r3
 80045bc:	1ad3      	subs	r3, r2, r3
 80045be:	b29b      	uxth	r3, r3
 80045c0:	4619      	mov	r1, r3
 80045c2:	6878      	ldr	r0, [r7, #4]
 80045c4:	f000 f8c0 	bl	8004748 <HAL_UARTEx_RxEventCallback>
 80045c8:	e099      	b.n	80046fe <HAL_UART_IRQHandler+0x50e>
 80045ca:	bf00      	nop
 80045cc:	08004827 	.word	0x08004827
 80045d0:	687b      	ldr	r3, [r7, #4]
 80045d2:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 80045d4:	687b      	ldr	r3, [r7, #4]
 80045d6:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 80045d8:	b29b      	uxth	r3, r3
 80045da:	1ad3      	subs	r3, r2, r3
 80045dc:	f8a7 30ce 	strh.w	r3, [r7, #206]	; 0xce
 80045e0:	687b      	ldr	r3, [r7, #4]
 80045e2:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 80045e4:	b29b      	uxth	r3, r3
 80045e6:	2b00      	cmp	r3, #0
 80045e8:	f000 808b 	beq.w	8004702 <HAL_UART_IRQHandler+0x512>
 80045ec:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 80045f0:	2b00      	cmp	r3, #0
 80045f2:	f000 8086 	beq.w	8004702 <HAL_UART_IRQHandler+0x512>
 80045f6:	687b      	ldr	r3, [r7, #4]
 80045f8:	681b      	ldr	r3, [r3, #0]
 80045fa:	330c      	adds	r3, #12
 80045fc:	63bb      	str	r3, [r7, #56]	; 0x38
 80045fe:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004600:	e853 3f00 	ldrex	r3, [r3]
 8004604:	637b      	str	r3, [r7, #52]	; 0x34
 8004606:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8004608:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800460c:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 8004610:	687b      	ldr	r3, [r7, #4]
 8004612:	681b      	ldr	r3, [r3, #0]
 8004614:	330c      	adds	r3, #12
 8004616:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 800461a:	647a      	str	r2, [r7, #68]	; 0x44
 800461c:	643b      	str	r3, [r7, #64]	; 0x40
 800461e:	6c39      	ldr	r1, [r7, #64]	; 0x40
 8004620:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8004622:	e841 2300 	strex	r3, r2, [r1]
 8004626:	63fb      	str	r3, [r7, #60]	; 0x3c
 8004628:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800462a:	2b00      	cmp	r3, #0
 800462c:	d1e3      	bne.n	80045f6 <HAL_UART_IRQHandler+0x406>
 800462e:	687b      	ldr	r3, [r7, #4]
 8004630:	681b      	ldr	r3, [r3, #0]
 8004632:	3314      	adds	r3, #20
 8004634:	627b      	str	r3, [r7, #36]	; 0x24
 8004636:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004638:	e853 3f00 	ldrex	r3, [r3]
 800463c:	623b      	str	r3, [r7, #32]
 800463e:	6a3b      	ldr	r3, [r7, #32]
 8004640:	f023 0301 	bic.w	r3, r3, #1
 8004644:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 8004648:	687b      	ldr	r3, [r7, #4]
 800464a:	681b      	ldr	r3, [r3, #0]
 800464c:	3314      	adds	r3, #20
 800464e:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 8004652:	633a      	str	r2, [r7, #48]	; 0x30
 8004654:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004656:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8004658:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800465a:	e841 2300 	strex	r3, r2, [r1]
 800465e:	62bb      	str	r3, [r7, #40]	; 0x28
 8004660:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004662:	2b00      	cmp	r3, #0
 8004664:	d1e3      	bne.n	800462e <HAL_UART_IRQHandler+0x43e>
 8004666:	687b      	ldr	r3, [r7, #4]
 8004668:	2220      	movs	r2, #32
 800466a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800466e:	687b      	ldr	r3, [r7, #4]
 8004670:	2200      	movs	r2, #0
 8004672:	631a      	str	r2, [r3, #48]	; 0x30
 8004674:	687b      	ldr	r3, [r7, #4]
 8004676:	681b      	ldr	r3, [r3, #0]
 8004678:	330c      	adds	r3, #12
 800467a:	613b      	str	r3, [r7, #16]
 800467c:	693b      	ldr	r3, [r7, #16]
 800467e:	e853 3f00 	ldrex	r3, [r3]
 8004682:	60fb      	str	r3, [r7, #12]
 8004684:	68fb      	ldr	r3, [r7, #12]
 8004686:	f023 0310 	bic.w	r3, r3, #16
 800468a:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 800468e:	687b      	ldr	r3, [r7, #4]
 8004690:	681b      	ldr	r3, [r3, #0]
 8004692:	330c      	adds	r3, #12
 8004694:	f8d7 20c0 	ldr.w	r2, [r7, #192]	; 0xc0
 8004698:	61fa      	str	r2, [r7, #28]
 800469a:	61bb      	str	r3, [r7, #24]
 800469c:	69b9      	ldr	r1, [r7, #24]
 800469e:	69fa      	ldr	r2, [r7, #28]
 80046a0:	e841 2300 	strex	r3, r2, [r1]
 80046a4:	617b      	str	r3, [r7, #20]
 80046a6:	697b      	ldr	r3, [r7, #20]
 80046a8:	2b00      	cmp	r3, #0
 80046aa:	d1e3      	bne.n	8004674 <HAL_UART_IRQHandler+0x484>
 80046ac:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 80046b0:	4619      	mov	r1, r3
 80046b2:	6878      	ldr	r0, [r7, #4]
 80046b4:	f000 f848 	bl	8004748 <HAL_UARTEx_RxEventCallback>
 80046b8:	e023      	b.n	8004702 <HAL_UART_IRQHandler+0x512>
 80046ba:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80046be:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80046c2:	2b00      	cmp	r3, #0
 80046c4:	d009      	beq.n	80046da <HAL_UART_IRQHandler+0x4ea>
 80046c6:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80046ca:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80046ce:	2b00      	cmp	r3, #0
 80046d0:	d003      	beq.n	80046da <HAL_UART_IRQHandler+0x4ea>
 80046d2:	6878      	ldr	r0, [r7, #4]
 80046d4:	f000 f8bb 	bl	800484e <UART_Transmit_IT>
 80046d8:	e014      	b.n	8004704 <HAL_UART_IRQHandler+0x514>
 80046da:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80046de:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80046e2:	2b00      	cmp	r3, #0
 80046e4:	d00e      	beq.n	8004704 <HAL_UART_IRQHandler+0x514>
 80046e6:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80046ea:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80046ee:	2b00      	cmp	r3, #0
 80046f0:	d008      	beq.n	8004704 <HAL_UART_IRQHandler+0x514>
 80046f2:	6878      	ldr	r0, [r7, #4]
 80046f4:	f000 f8fb 	bl	80048ee <UART_EndTransmit_IT>
 80046f8:	e004      	b.n	8004704 <HAL_UART_IRQHandler+0x514>
 80046fa:	bf00      	nop
 80046fc:	e002      	b.n	8004704 <HAL_UART_IRQHandler+0x514>
 80046fe:	bf00      	nop
 8004700:	e000      	b.n	8004704 <HAL_UART_IRQHandler+0x514>
 8004702:	bf00      	nop
 8004704:	37e8      	adds	r7, #232	; 0xe8
 8004706:	46bd      	mov	sp, r7
 8004708:	bd80      	pop	{r7, pc}
 800470a:	bf00      	nop

0800470c <HAL_UART_TxCpltCallback>:
 800470c:	b480      	push	{r7}
 800470e:	b083      	sub	sp, #12
 8004710:	af00      	add	r7, sp, #0
 8004712:	6078      	str	r0, [r7, #4]
 8004714:	bf00      	nop
 8004716:	370c      	adds	r7, #12
 8004718:	46bd      	mov	sp, r7
 800471a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800471e:	4770      	bx	lr

08004720 <HAL_UART_RxCpltCallback>:
 8004720:	b480      	push	{r7}
 8004722:	b083      	sub	sp, #12
 8004724:	af00      	add	r7, sp, #0
 8004726:	6078      	str	r0, [r7, #4]
 8004728:	bf00      	nop
 800472a:	370c      	adds	r7, #12
 800472c:	46bd      	mov	sp, r7
 800472e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004732:	4770      	bx	lr

08004734 <HAL_UART_ErrorCallback>:
 8004734:	b480      	push	{r7}
 8004736:	b083      	sub	sp, #12
 8004738:	af00      	add	r7, sp, #0
 800473a:	6078      	str	r0, [r7, #4]
 800473c:	bf00      	nop
 800473e:	370c      	adds	r7, #12
 8004740:	46bd      	mov	sp, r7
 8004742:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004746:	4770      	bx	lr

08004748 <HAL_UARTEx_RxEventCallback>:
 8004748:	b480      	push	{r7}
 800474a:	b083      	sub	sp, #12
 800474c:	af00      	add	r7, sp, #0
 800474e:	6078      	str	r0, [r7, #4]
 8004750:	460b      	mov	r3, r1
 8004752:	807b      	strh	r3, [r7, #2]
 8004754:	bf00      	nop
 8004756:	370c      	adds	r7, #12
 8004758:	46bd      	mov	sp, r7
 800475a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800475e:	4770      	bx	lr

08004760 <UART_EndRxTransfer>:
 8004760:	b480      	push	{r7}
 8004762:	b095      	sub	sp, #84	; 0x54
 8004764:	af00      	add	r7, sp, #0
 8004766:	6078      	str	r0, [r7, #4]
 8004768:	687b      	ldr	r3, [r7, #4]
 800476a:	681b      	ldr	r3, [r3, #0]
 800476c:	330c      	adds	r3, #12
 800476e:	637b      	str	r3, [r7, #52]	; 0x34
 8004770:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8004772:	e853 3f00 	ldrex	r3, [r3]
 8004776:	633b      	str	r3, [r7, #48]	; 0x30
 8004778:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800477a:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800477e:	64fb      	str	r3, [r7, #76]	; 0x4c
 8004780:	687b      	ldr	r3, [r7, #4]
 8004782:	681b      	ldr	r3, [r3, #0]
 8004784:	330c      	adds	r3, #12
 8004786:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8004788:	643a      	str	r2, [r7, #64]	; 0x40
 800478a:	63fb      	str	r3, [r7, #60]	; 0x3c
 800478c:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 800478e:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8004790:	e841 2300 	strex	r3, r2, [r1]
 8004794:	63bb      	str	r3, [r7, #56]	; 0x38
 8004796:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004798:	2b00      	cmp	r3, #0
 800479a:	d1e5      	bne.n	8004768 <UART_EndRxTransfer+0x8>
 800479c:	687b      	ldr	r3, [r7, #4]
 800479e:	681b      	ldr	r3, [r3, #0]
 80047a0:	3314      	adds	r3, #20
 80047a2:	623b      	str	r3, [r7, #32]
 80047a4:	6a3b      	ldr	r3, [r7, #32]
 80047a6:	e853 3f00 	ldrex	r3, [r3]
 80047aa:	61fb      	str	r3, [r7, #28]
 80047ac:	69fb      	ldr	r3, [r7, #28]
 80047ae:	f023 0301 	bic.w	r3, r3, #1
 80047b2:	64bb      	str	r3, [r7, #72]	; 0x48
 80047b4:	687b      	ldr	r3, [r7, #4]
 80047b6:	681b      	ldr	r3, [r3, #0]
 80047b8:	3314      	adds	r3, #20
 80047ba:	6cba      	ldr	r2, [r7, #72]	; 0x48
 80047bc:	62fa      	str	r2, [r7, #44]	; 0x2c
 80047be:	62bb      	str	r3, [r7, #40]	; 0x28
 80047c0:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 80047c2:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80047c4:	e841 2300 	strex	r3, r2, [r1]
 80047c8:	627b      	str	r3, [r7, #36]	; 0x24
 80047ca:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80047cc:	2b00      	cmp	r3, #0
 80047ce:	d1e5      	bne.n	800479c <UART_EndRxTransfer+0x3c>
 80047d0:	687b      	ldr	r3, [r7, #4]
 80047d2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80047d4:	2b01      	cmp	r3, #1
 80047d6:	d119      	bne.n	800480c <UART_EndRxTransfer+0xac>
 80047d8:	687b      	ldr	r3, [r7, #4]
 80047da:	681b      	ldr	r3, [r3, #0]
 80047dc:	330c      	adds	r3, #12
 80047de:	60fb      	str	r3, [r7, #12]
 80047e0:	68fb      	ldr	r3, [r7, #12]
 80047e2:	e853 3f00 	ldrex	r3, [r3]
 80047e6:	60bb      	str	r3, [r7, #8]
 80047e8:	68bb      	ldr	r3, [r7, #8]
 80047ea:	f023 0310 	bic.w	r3, r3, #16
 80047ee:	647b      	str	r3, [r7, #68]	; 0x44
 80047f0:	687b      	ldr	r3, [r7, #4]
 80047f2:	681b      	ldr	r3, [r3, #0]
 80047f4:	330c      	adds	r3, #12
 80047f6:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 80047f8:	61ba      	str	r2, [r7, #24]
 80047fa:	617b      	str	r3, [r7, #20]
 80047fc:	6979      	ldr	r1, [r7, #20]
 80047fe:	69ba      	ldr	r2, [r7, #24]
 8004800:	e841 2300 	strex	r3, r2, [r1]
 8004804:	613b      	str	r3, [r7, #16]
 8004806:	693b      	ldr	r3, [r7, #16]
 8004808:	2b00      	cmp	r3, #0
 800480a:	d1e5      	bne.n	80047d8 <UART_EndRxTransfer+0x78>
 800480c:	687b      	ldr	r3, [r7, #4]
 800480e:	2220      	movs	r2, #32
 8004810:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004814:	687b      	ldr	r3, [r7, #4]
 8004816:	2200      	movs	r2, #0
 8004818:	631a      	str	r2, [r3, #48]	; 0x30
 800481a:	bf00      	nop
 800481c:	3754      	adds	r7, #84	; 0x54
 800481e:	46bd      	mov	sp, r7
 8004820:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004824:	4770      	bx	lr

08004826 <UART_DMAAbortOnError>:
 8004826:	b580      	push	{r7, lr}
 8004828:	b084      	sub	sp, #16
 800482a:	af00      	add	r7, sp, #0
 800482c:	6078      	str	r0, [r7, #4]
 800482e:	687b      	ldr	r3, [r7, #4]
 8004830:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004832:	60fb      	str	r3, [r7, #12]
 8004834:	68fb      	ldr	r3, [r7, #12]
 8004836:	2200      	movs	r2, #0
 8004838:	85da      	strh	r2, [r3, #46]	; 0x2e
 800483a:	68fb      	ldr	r3, [r7, #12]
 800483c:	2200      	movs	r2, #0
 800483e:	84da      	strh	r2, [r3, #38]	; 0x26
 8004840:	68f8      	ldr	r0, [r7, #12]
 8004842:	f7ff ff77 	bl	8004734 <HAL_UART_ErrorCallback>
 8004846:	bf00      	nop
 8004848:	3710      	adds	r7, #16
 800484a:	46bd      	mov	sp, r7
 800484c:	bd80      	pop	{r7, pc}

0800484e <UART_Transmit_IT>:
 800484e:	b480      	push	{r7}
 8004850:	b085      	sub	sp, #20
 8004852:	af00      	add	r7, sp, #0
 8004854:	6078      	str	r0, [r7, #4]
 8004856:	687b      	ldr	r3, [r7, #4]
 8004858:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800485c:	b2db      	uxtb	r3, r3
 800485e:	2b21      	cmp	r3, #33	; 0x21
 8004860:	d13e      	bne.n	80048e0 <UART_Transmit_IT+0x92>
 8004862:	687b      	ldr	r3, [r7, #4]
 8004864:	689b      	ldr	r3, [r3, #8]
 8004866:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800486a:	d114      	bne.n	8004896 <UART_Transmit_IT+0x48>
 800486c:	687b      	ldr	r3, [r7, #4]
 800486e:	691b      	ldr	r3, [r3, #16]
 8004870:	2b00      	cmp	r3, #0
 8004872:	d110      	bne.n	8004896 <UART_Transmit_IT+0x48>
 8004874:	687b      	ldr	r3, [r7, #4]
 8004876:	6a1b      	ldr	r3, [r3, #32]
 8004878:	60fb      	str	r3, [r7, #12]
 800487a:	68fb      	ldr	r3, [r7, #12]
 800487c:	881b      	ldrh	r3, [r3, #0]
 800487e:	461a      	mov	r2, r3
 8004880:	687b      	ldr	r3, [r7, #4]
 8004882:	681b      	ldr	r3, [r3, #0]
 8004884:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8004888:	605a      	str	r2, [r3, #4]
 800488a:	687b      	ldr	r3, [r7, #4]
 800488c:	6a1b      	ldr	r3, [r3, #32]
 800488e:	1c9a      	adds	r2, r3, #2
 8004890:	687b      	ldr	r3, [r7, #4]
 8004892:	621a      	str	r2, [r3, #32]
 8004894:	e008      	b.n	80048a8 <UART_Transmit_IT+0x5a>
 8004896:	687b      	ldr	r3, [r7, #4]
 8004898:	6a1b      	ldr	r3, [r3, #32]
 800489a:	1c59      	adds	r1, r3, #1
 800489c:	687a      	ldr	r2, [r7, #4]
 800489e:	6211      	str	r1, [r2, #32]
 80048a0:	781a      	ldrb	r2, [r3, #0]
 80048a2:	687b      	ldr	r3, [r7, #4]
 80048a4:	681b      	ldr	r3, [r3, #0]
 80048a6:	605a      	str	r2, [r3, #4]
 80048a8:	687b      	ldr	r3, [r7, #4]
 80048aa:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80048ac:	b29b      	uxth	r3, r3
 80048ae:	3b01      	subs	r3, #1
 80048b0:	b29b      	uxth	r3, r3
 80048b2:	687a      	ldr	r2, [r7, #4]
 80048b4:	4619      	mov	r1, r3
 80048b6:	84d1      	strh	r1, [r2, #38]	; 0x26
 80048b8:	2b00      	cmp	r3, #0
 80048ba:	d10f      	bne.n	80048dc <UART_Transmit_IT+0x8e>
 80048bc:	687b      	ldr	r3, [r7, #4]
 80048be:	681b      	ldr	r3, [r3, #0]
 80048c0:	68da      	ldr	r2, [r3, #12]
 80048c2:	687b      	ldr	r3, [r7, #4]
 80048c4:	681b      	ldr	r3, [r3, #0]
 80048c6:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80048ca:	60da      	str	r2, [r3, #12]
 80048cc:	687b      	ldr	r3, [r7, #4]
 80048ce:	681b      	ldr	r3, [r3, #0]
 80048d0:	68da      	ldr	r2, [r3, #12]
 80048d2:	687b      	ldr	r3, [r7, #4]
 80048d4:	681b      	ldr	r3, [r3, #0]
 80048d6:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80048da:	60da      	str	r2, [r3, #12]
 80048dc:	2300      	movs	r3, #0
 80048de:	e000      	b.n	80048e2 <UART_Transmit_IT+0x94>
 80048e0:	2302      	movs	r3, #2
 80048e2:	4618      	mov	r0, r3
 80048e4:	3714      	adds	r7, #20
 80048e6:	46bd      	mov	sp, r7
 80048e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80048ec:	4770      	bx	lr

080048ee <UART_EndTransmit_IT>:
 80048ee:	b580      	push	{r7, lr}
 80048f0:	b082      	sub	sp, #8
 80048f2:	af00      	add	r7, sp, #0
 80048f4:	6078      	str	r0, [r7, #4]
 80048f6:	687b      	ldr	r3, [r7, #4]
 80048f8:	681b      	ldr	r3, [r3, #0]
 80048fa:	68da      	ldr	r2, [r3, #12]
 80048fc:	687b      	ldr	r3, [r7, #4]
 80048fe:	681b      	ldr	r3, [r3, #0]
 8004900:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8004904:	60da      	str	r2, [r3, #12]
 8004906:	687b      	ldr	r3, [r7, #4]
 8004908:	2220      	movs	r2, #32
 800490a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800490e:	6878      	ldr	r0, [r7, #4]
 8004910:	f7ff fefc 	bl	800470c <HAL_UART_TxCpltCallback>
 8004914:	2300      	movs	r3, #0
 8004916:	4618      	mov	r0, r3
 8004918:	3708      	adds	r7, #8
 800491a:	46bd      	mov	sp, r7
 800491c:	bd80      	pop	{r7, pc}

0800491e <UART_Receive_IT>:
 800491e:	b580      	push	{r7, lr}
 8004920:	b08c      	sub	sp, #48	; 0x30
 8004922:	af00      	add	r7, sp, #0
 8004924:	6078      	str	r0, [r7, #4]
 8004926:	687b      	ldr	r3, [r7, #4]
 8004928:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800492c:	b2db      	uxtb	r3, r3
 800492e:	2b22      	cmp	r3, #34	; 0x22
 8004930:	f040 80ab 	bne.w	8004a8a <UART_Receive_IT+0x16c>
 8004934:	687b      	ldr	r3, [r7, #4]
 8004936:	689b      	ldr	r3, [r3, #8]
 8004938:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800493c:	d117      	bne.n	800496e <UART_Receive_IT+0x50>
 800493e:	687b      	ldr	r3, [r7, #4]
 8004940:	691b      	ldr	r3, [r3, #16]
 8004942:	2b00      	cmp	r3, #0
 8004944:	d113      	bne.n	800496e <UART_Receive_IT+0x50>
 8004946:	2300      	movs	r3, #0
 8004948:	62fb      	str	r3, [r7, #44]	; 0x2c
 800494a:	687b      	ldr	r3, [r7, #4]
 800494c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800494e:	62bb      	str	r3, [r7, #40]	; 0x28
 8004950:	687b      	ldr	r3, [r7, #4]
 8004952:	681b      	ldr	r3, [r3, #0]
 8004954:	685b      	ldr	r3, [r3, #4]
 8004956:	b29b      	uxth	r3, r3
 8004958:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800495c:	b29a      	uxth	r2, r3
 800495e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004960:	801a      	strh	r2, [r3, #0]
 8004962:	687b      	ldr	r3, [r7, #4]
 8004964:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004966:	1c9a      	adds	r2, r3, #2
 8004968:	687b      	ldr	r3, [r7, #4]
 800496a:	629a      	str	r2, [r3, #40]	; 0x28
 800496c:	e026      	b.n	80049bc <UART_Receive_IT+0x9e>
 800496e:	687b      	ldr	r3, [r7, #4]
 8004970:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004972:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004974:	2300      	movs	r3, #0
 8004976:	62bb      	str	r3, [r7, #40]	; 0x28
 8004978:	687b      	ldr	r3, [r7, #4]
 800497a:	689b      	ldr	r3, [r3, #8]
 800497c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8004980:	d007      	beq.n	8004992 <UART_Receive_IT+0x74>
 8004982:	687b      	ldr	r3, [r7, #4]
 8004984:	689b      	ldr	r3, [r3, #8]
 8004986:	2b00      	cmp	r3, #0
 8004988:	d10a      	bne.n	80049a0 <UART_Receive_IT+0x82>
 800498a:	687b      	ldr	r3, [r7, #4]
 800498c:	691b      	ldr	r3, [r3, #16]
 800498e:	2b00      	cmp	r3, #0
 8004990:	d106      	bne.n	80049a0 <UART_Receive_IT+0x82>
 8004992:	687b      	ldr	r3, [r7, #4]
 8004994:	681b      	ldr	r3, [r3, #0]
 8004996:	685b      	ldr	r3, [r3, #4]
 8004998:	b2da      	uxtb	r2, r3
 800499a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800499c:	701a      	strb	r2, [r3, #0]
 800499e:	e008      	b.n	80049b2 <UART_Receive_IT+0x94>
 80049a0:	687b      	ldr	r3, [r7, #4]
 80049a2:	681b      	ldr	r3, [r3, #0]
 80049a4:	685b      	ldr	r3, [r3, #4]
 80049a6:	b2db      	uxtb	r3, r3
 80049a8:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 80049ac:	b2da      	uxtb	r2, r3
 80049ae:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80049b0:	701a      	strb	r2, [r3, #0]
 80049b2:	687b      	ldr	r3, [r7, #4]
 80049b4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80049b6:	1c5a      	adds	r2, r3, #1
 80049b8:	687b      	ldr	r3, [r7, #4]
 80049ba:	629a      	str	r2, [r3, #40]	; 0x28
 80049bc:	687b      	ldr	r3, [r7, #4]
 80049be:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 80049c0:	b29b      	uxth	r3, r3
 80049c2:	3b01      	subs	r3, #1
 80049c4:	b29b      	uxth	r3, r3
 80049c6:	687a      	ldr	r2, [r7, #4]
 80049c8:	4619      	mov	r1, r3
 80049ca:	85d1      	strh	r1, [r2, #46]	; 0x2e
 80049cc:	2b00      	cmp	r3, #0
 80049ce:	d15a      	bne.n	8004a86 <UART_Receive_IT+0x168>
 80049d0:	687b      	ldr	r3, [r7, #4]
 80049d2:	681b      	ldr	r3, [r3, #0]
 80049d4:	68da      	ldr	r2, [r3, #12]
 80049d6:	687b      	ldr	r3, [r7, #4]
 80049d8:	681b      	ldr	r3, [r3, #0]
 80049da:	f022 0220 	bic.w	r2, r2, #32
 80049de:	60da      	str	r2, [r3, #12]
 80049e0:	687b      	ldr	r3, [r7, #4]
 80049e2:	681b      	ldr	r3, [r3, #0]
 80049e4:	68da      	ldr	r2, [r3, #12]
 80049e6:	687b      	ldr	r3, [r7, #4]
 80049e8:	681b      	ldr	r3, [r3, #0]
 80049ea:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80049ee:	60da      	str	r2, [r3, #12]
 80049f0:	687b      	ldr	r3, [r7, #4]
 80049f2:	681b      	ldr	r3, [r3, #0]
 80049f4:	695a      	ldr	r2, [r3, #20]
 80049f6:	687b      	ldr	r3, [r7, #4]
 80049f8:	681b      	ldr	r3, [r3, #0]
 80049fa:	f022 0201 	bic.w	r2, r2, #1
 80049fe:	615a      	str	r2, [r3, #20]
 8004a00:	687b      	ldr	r3, [r7, #4]
 8004a02:	2220      	movs	r2, #32
 8004a04:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004a08:	687b      	ldr	r3, [r7, #4]
 8004a0a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004a0c:	2b01      	cmp	r3, #1
 8004a0e:	d135      	bne.n	8004a7c <UART_Receive_IT+0x15e>
 8004a10:	687b      	ldr	r3, [r7, #4]
 8004a12:	2200      	movs	r2, #0
 8004a14:	631a      	str	r2, [r3, #48]	; 0x30
 8004a16:	687b      	ldr	r3, [r7, #4]
 8004a18:	681b      	ldr	r3, [r3, #0]
 8004a1a:	330c      	adds	r3, #12
 8004a1c:	617b      	str	r3, [r7, #20]
 8004a1e:	697b      	ldr	r3, [r7, #20]
 8004a20:	e853 3f00 	ldrex	r3, [r3]
 8004a24:	613b      	str	r3, [r7, #16]
 8004a26:	693b      	ldr	r3, [r7, #16]
 8004a28:	f023 0310 	bic.w	r3, r3, #16
 8004a2c:	627b      	str	r3, [r7, #36]	; 0x24
 8004a2e:	687b      	ldr	r3, [r7, #4]
 8004a30:	681b      	ldr	r3, [r3, #0]
 8004a32:	330c      	adds	r3, #12
 8004a34:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8004a36:	623a      	str	r2, [r7, #32]
 8004a38:	61fb      	str	r3, [r7, #28]
 8004a3a:	69f9      	ldr	r1, [r7, #28]
 8004a3c:	6a3a      	ldr	r2, [r7, #32]
 8004a3e:	e841 2300 	strex	r3, r2, [r1]
 8004a42:	61bb      	str	r3, [r7, #24]
 8004a44:	69bb      	ldr	r3, [r7, #24]
 8004a46:	2b00      	cmp	r3, #0
 8004a48:	d1e5      	bne.n	8004a16 <UART_Receive_IT+0xf8>
 8004a4a:	687b      	ldr	r3, [r7, #4]
 8004a4c:	681b      	ldr	r3, [r3, #0]
 8004a4e:	681b      	ldr	r3, [r3, #0]
 8004a50:	f003 0310 	and.w	r3, r3, #16
 8004a54:	2b10      	cmp	r3, #16
 8004a56:	d10a      	bne.n	8004a6e <UART_Receive_IT+0x150>
 8004a58:	2300      	movs	r3, #0
 8004a5a:	60fb      	str	r3, [r7, #12]
 8004a5c:	687b      	ldr	r3, [r7, #4]
 8004a5e:	681b      	ldr	r3, [r3, #0]
 8004a60:	681b      	ldr	r3, [r3, #0]
 8004a62:	60fb      	str	r3, [r7, #12]
 8004a64:	687b      	ldr	r3, [r7, #4]
 8004a66:	681b      	ldr	r3, [r3, #0]
 8004a68:	685b      	ldr	r3, [r3, #4]
 8004a6a:	60fb      	str	r3, [r7, #12]
 8004a6c:	68fb      	ldr	r3, [r7, #12]
 8004a6e:	687b      	ldr	r3, [r7, #4]
 8004a70:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8004a72:	4619      	mov	r1, r3
 8004a74:	6878      	ldr	r0, [r7, #4]
 8004a76:	f7ff fe67 	bl	8004748 <HAL_UARTEx_RxEventCallback>
 8004a7a:	e002      	b.n	8004a82 <UART_Receive_IT+0x164>
 8004a7c:	6878      	ldr	r0, [r7, #4]
 8004a7e:	f7ff fe4f 	bl	8004720 <HAL_UART_RxCpltCallback>
 8004a82:	2300      	movs	r3, #0
 8004a84:	e002      	b.n	8004a8c <UART_Receive_IT+0x16e>
 8004a86:	2300      	movs	r3, #0
 8004a88:	e000      	b.n	8004a8c <UART_Receive_IT+0x16e>
 8004a8a:	2302      	movs	r3, #2
 8004a8c:	4618      	mov	r0, r3
 8004a8e:	3730      	adds	r7, #48	; 0x30
 8004a90:	46bd      	mov	sp, r7
 8004a92:	bd80      	pop	{r7, pc}

08004a94 <UART_SetConfig>:
 8004a94:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8004a98:	b0c0      	sub	sp, #256	; 0x100
 8004a9a:	af00      	add	r7, sp, #0
 8004a9c:	f8c7 00f4 	str.w	r0, [r7, #244]	; 0xf4
 8004aa0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8004aa4:	681b      	ldr	r3, [r3, #0]
 8004aa6:	691b      	ldr	r3, [r3, #16]
 8004aa8:	f423 5040 	bic.w	r0, r3, #12288	; 0x3000
 8004aac:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8004ab0:	68d9      	ldr	r1, [r3, #12]
 8004ab2:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8004ab6:	681a      	ldr	r2, [r3, #0]
 8004ab8:	ea40 0301 	orr.w	r3, r0, r1
 8004abc:	6113      	str	r3, [r2, #16]
 8004abe:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8004ac2:	689a      	ldr	r2, [r3, #8]
 8004ac4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8004ac8:	691b      	ldr	r3, [r3, #16]
 8004aca:	431a      	orrs	r2, r3
 8004acc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8004ad0:	695b      	ldr	r3, [r3, #20]
 8004ad2:	431a      	orrs	r2, r3
 8004ad4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8004ad8:	69db      	ldr	r3, [r3, #28]
 8004ada:	4313      	orrs	r3, r2
 8004adc:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 8004ae0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8004ae4:	681b      	ldr	r3, [r3, #0]
 8004ae6:	68db      	ldr	r3, [r3, #12]
 8004ae8:	f423 4116 	bic.w	r1, r3, #38400	; 0x9600
 8004aec:	f021 010c 	bic.w	r1, r1, #12
 8004af0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8004af4:	681a      	ldr	r2, [r3, #0]
 8004af6:	f8d7 30f8 	ldr.w	r3, [r7, #248]	; 0xf8
 8004afa:	430b      	orrs	r3, r1
 8004afc:	60d3      	str	r3, [r2, #12]
 8004afe:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8004b02:	681b      	ldr	r3, [r3, #0]
 8004b04:	695b      	ldr	r3, [r3, #20]
 8004b06:	f423 7040 	bic.w	r0, r3, #768	; 0x300
 8004b0a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8004b0e:	6999      	ldr	r1, [r3, #24]
 8004b10:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8004b14:	681a      	ldr	r2, [r3, #0]
 8004b16:	ea40 0301 	orr.w	r3, r0, r1
 8004b1a:	6153      	str	r3, [r2, #20]
 8004b1c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8004b20:	681a      	ldr	r2, [r3, #0]
 8004b22:	4b8f      	ldr	r3, [pc, #572]	; (8004d60 <UART_SetConfig+0x2cc>)
 8004b24:	429a      	cmp	r2, r3
 8004b26:	d005      	beq.n	8004b34 <UART_SetConfig+0xa0>
 8004b28:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8004b2c:	681a      	ldr	r2, [r3, #0]
 8004b2e:	4b8d      	ldr	r3, [pc, #564]	; (8004d64 <UART_SetConfig+0x2d0>)
 8004b30:	429a      	cmp	r2, r3
 8004b32:	d104      	bne.n	8004b3e <UART_SetConfig+0xaa>
 8004b34:	f7fe fb92 	bl	800325c <HAL_RCC_GetPCLK2Freq>
 8004b38:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 8004b3c:	e003      	b.n	8004b46 <UART_SetConfig+0xb2>
 8004b3e:	f7fe fb79 	bl	8003234 <HAL_RCC_GetPCLK1Freq>
 8004b42:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 8004b46:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8004b4a:	69db      	ldr	r3, [r3, #28]
 8004b4c:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8004b50:	f040 810c 	bne.w	8004d6c <UART_SetConfig+0x2d8>
 8004b54:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8004b58:	2200      	movs	r2, #0
 8004b5a:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 8004b5e:	f8c7 20ec 	str.w	r2, [r7, #236]	; 0xec
 8004b62:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	; 0xe8
 8004b66:	4622      	mov	r2, r4
 8004b68:	462b      	mov	r3, r5
 8004b6a:	1891      	adds	r1, r2, r2
 8004b6c:	65b9      	str	r1, [r7, #88]	; 0x58
 8004b6e:	415b      	adcs	r3, r3
 8004b70:	65fb      	str	r3, [r7, #92]	; 0x5c
 8004b72:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 8004b76:	4621      	mov	r1, r4
 8004b78:	eb12 0801 	adds.w	r8, r2, r1
 8004b7c:	4629      	mov	r1, r5
 8004b7e:	eb43 0901 	adc.w	r9, r3, r1
 8004b82:	f04f 0200 	mov.w	r2, #0
 8004b86:	f04f 0300 	mov.w	r3, #0
 8004b8a:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8004b8e:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8004b92:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8004b96:	4690      	mov	r8, r2
 8004b98:	4699      	mov	r9, r3
 8004b9a:	4623      	mov	r3, r4
 8004b9c:	eb18 0303 	adds.w	r3, r8, r3
 8004ba0:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 8004ba4:	462b      	mov	r3, r5
 8004ba6:	eb49 0303 	adc.w	r3, r9, r3
 8004baa:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 8004bae:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8004bb2:	685b      	ldr	r3, [r3, #4]
 8004bb4:	2200      	movs	r2, #0
 8004bb6:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 8004bba:	f8c7 20dc 	str.w	r2, [r7, #220]	; 0xdc
 8004bbe:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	; 0xd8
 8004bc2:	460b      	mov	r3, r1
 8004bc4:	18db      	adds	r3, r3, r3
 8004bc6:	653b      	str	r3, [r7, #80]	; 0x50
 8004bc8:	4613      	mov	r3, r2
 8004bca:	eb42 0303 	adc.w	r3, r2, r3
 8004bce:	657b      	str	r3, [r7, #84]	; 0x54
 8004bd0:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 8004bd4:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 8004bd8:	f7fb ffe6 	bl	8000ba8 <__aeabi_uldivmod>
 8004bdc:	4602      	mov	r2, r0
 8004bde:	460b      	mov	r3, r1
 8004be0:	4b61      	ldr	r3, [pc, #388]	; (8004d68 <UART_SetConfig+0x2d4>)
 8004be2:	fba3 2302 	umull	r2, r3, r3, r2
 8004be6:	095b      	lsrs	r3, r3, #5
 8004be8:	011c      	lsls	r4, r3, #4
 8004bea:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8004bee:	2200      	movs	r2, #0
 8004bf0:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 8004bf4:	f8c7 20d4 	str.w	r2, [r7, #212]	; 0xd4
 8004bf8:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	; 0xd0
 8004bfc:	4642      	mov	r2, r8
 8004bfe:	464b      	mov	r3, r9
 8004c00:	1891      	adds	r1, r2, r2
 8004c02:	64b9      	str	r1, [r7, #72]	; 0x48
 8004c04:	415b      	adcs	r3, r3
 8004c06:	64fb      	str	r3, [r7, #76]	; 0x4c
 8004c08:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 8004c0c:	4641      	mov	r1, r8
 8004c0e:	eb12 0a01 	adds.w	sl, r2, r1
 8004c12:	4649      	mov	r1, r9
 8004c14:	eb43 0b01 	adc.w	fp, r3, r1
 8004c18:	f04f 0200 	mov.w	r2, #0
 8004c1c:	f04f 0300 	mov.w	r3, #0
 8004c20:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8004c24:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8004c28:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8004c2c:	4692      	mov	sl, r2
 8004c2e:	469b      	mov	fp, r3
 8004c30:	4643      	mov	r3, r8
 8004c32:	eb1a 0303 	adds.w	r3, sl, r3
 8004c36:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 8004c3a:	464b      	mov	r3, r9
 8004c3c:	eb4b 0303 	adc.w	r3, fp, r3
 8004c40:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
 8004c44:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8004c48:	685b      	ldr	r3, [r3, #4]
 8004c4a:	2200      	movs	r2, #0
 8004c4c:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 8004c50:	f8c7 20c4 	str.w	r2, [r7, #196]	; 0xc4
 8004c54:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	; 0xc0
 8004c58:	460b      	mov	r3, r1
 8004c5a:	18db      	adds	r3, r3, r3
 8004c5c:	643b      	str	r3, [r7, #64]	; 0x40
 8004c5e:	4613      	mov	r3, r2
 8004c60:	eb42 0303 	adc.w	r3, r2, r3
 8004c64:	647b      	str	r3, [r7, #68]	; 0x44
 8004c66:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 8004c6a:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	; 0xc8
 8004c6e:	f7fb ff9b 	bl	8000ba8 <__aeabi_uldivmod>
 8004c72:	4602      	mov	r2, r0
 8004c74:	460b      	mov	r3, r1
 8004c76:	4611      	mov	r1, r2
 8004c78:	4b3b      	ldr	r3, [pc, #236]	; (8004d68 <UART_SetConfig+0x2d4>)
 8004c7a:	fba3 2301 	umull	r2, r3, r3, r1
 8004c7e:	095b      	lsrs	r3, r3, #5
 8004c80:	2264      	movs	r2, #100	; 0x64
 8004c82:	fb02 f303 	mul.w	r3, r2, r3
 8004c86:	1acb      	subs	r3, r1, r3
 8004c88:	00db      	lsls	r3, r3, #3
 8004c8a:	f103 0232 	add.w	r2, r3, #50	; 0x32
 8004c8e:	4b36      	ldr	r3, [pc, #216]	; (8004d68 <UART_SetConfig+0x2d4>)
 8004c90:	fba3 2302 	umull	r2, r3, r3, r2
 8004c94:	095b      	lsrs	r3, r3, #5
 8004c96:	005b      	lsls	r3, r3, #1
 8004c98:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 8004c9c:	441c      	add	r4, r3
 8004c9e:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8004ca2:	2200      	movs	r2, #0
 8004ca4:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 8004ca8:	f8c7 20bc 	str.w	r2, [r7, #188]	; 0xbc
 8004cac:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	; 0xb8
 8004cb0:	4642      	mov	r2, r8
 8004cb2:	464b      	mov	r3, r9
 8004cb4:	1891      	adds	r1, r2, r2
 8004cb6:	63b9      	str	r1, [r7, #56]	; 0x38
 8004cb8:	415b      	adcs	r3, r3
 8004cba:	63fb      	str	r3, [r7, #60]	; 0x3c
 8004cbc:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 8004cc0:	4641      	mov	r1, r8
 8004cc2:	1851      	adds	r1, r2, r1
 8004cc4:	6339      	str	r1, [r7, #48]	; 0x30
 8004cc6:	4649      	mov	r1, r9
 8004cc8:	414b      	adcs	r3, r1
 8004cca:	637b      	str	r3, [r7, #52]	; 0x34
 8004ccc:	f04f 0200 	mov.w	r2, #0
 8004cd0:	f04f 0300 	mov.w	r3, #0
 8004cd4:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	; 0x30
 8004cd8:	4659      	mov	r1, fp
 8004cda:	00cb      	lsls	r3, r1, #3
 8004cdc:	4651      	mov	r1, sl
 8004cde:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8004ce2:	4651      	mov	r1, sl
 8004ce4:	00ca      	lsls	r2, r1, #3
 8004ce6:	4610      	mov	r0, r2
 8004ce8:	4619      	mov	r1, r3
 8004cea:	4603      	mov	r3, r0
 8004cec:	4642      	mov	r2, r8
 8004cee:	189b      	adds	r3, r3, r2
 8004cf0:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8004cf4:	464b      	mov	r3, r9
 8004cf6:	460a      	mov	r2, r1
 8004cf8:	eb42 0303 	adc.w	r3, r2, r3
 8004cfc:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8004d00:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8004d04:	685b      	ldr	r3, [r3, #4]
 8004d06:	2200      	movs	r2, #0
 8004d08:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 8004d0c:	f8c7 20ac 	str.w	r2, [r7, #172]	; 0xac
 8004d10:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	; 0xa8
 8004d14:	460b      	mov	r3, r1
 8004d16:	18db      	adds	r3, r3, r3
 8004d18:	62bb      	str	r3, [r7, #40]	; 0x28
 8004d1a:	4613      	mov	r3, r2
 8004d1c:	eb42 0303 	adc.w	r3, r2, r3
 8004d20:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004d22:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8004d26:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	; 0xb0
 8004d2a:	f7fb ff3d 	bl	8000ba8 <__aeabi_uldivmod>
 8004d2e:	4602      	mov	r2, r0
 8004d30:	460b      	mov	r3, r1
 8004d32:	4b0d      	ldr	r3, [pc, #52]	; (8004d68 <UART_SetConfig+0x2d4>)
 8004d34:	fba3 1302 	umull	r1, r3, r3, r2
 8004d38:	095b      	lsrs	r3, r3, #5
 8004d3a:	2164      	movs	r1, #100	; 0x64
 8004d3c:	fb01 f303 	mul.w	r3, r1, r3
 8004d40:	1ad3      	subs	r3, r2, r3
 8004d42:	00db      	lsls	r3, r3, #3
 8004d44:	3332      	adds	r3, #50	; 0x32
 8004d46:	4a08      	ldr	r2, [pc, #32]	; (8004d68 <UART_SetConfig+0x2d4>)
 8004d48:	fba2 2303 	umull	r2, r3, r2, r3
 8004d4c:	095b      	lsrs	r3, r3, #5
 8004d4e:	f003 0207 	and.w	r2, r3, #7
 8004d52:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8004d56:	681b      	ldr	r3, [r3, #0]
 8004d58:	4422      	add	r2, r4
 8004d5a:	609a      	str	r2, [r3, #8]
 8004d5c:	e105      	b.n	8004f6a <UART_SetConfig+0x4d6>
 8004d5e:	bf00      	nop
 8004d60:	40011000 	.word	0x40011000
 8004d64:	40011400 	.word	0x40011400
 8004d68:	51eb851f 	.word	0x51eb851f
 8004d6c:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8004d70:	2200      	movs	r2, #0
 8004d72:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 8004d76:	f8c7 20a4 	str.w	r2, [r7, #164]	; 0xa4
 8004d7a:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	; 0xa0
 8004d7e:	4642      	mov	r2, r8
 8004d80:	464b      	mov	r3, r9
 8004d82:	1891      	adds	r1, r2, r2
 8004d84:	6239      	str	r1, [r7, #32]
 8004d86:	415b      	adcs	r3, r3
 8004d88:	627b      	str	r3, [r7, #36]	; 0x24
 8004d8a:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8004d8e:	4641      	mov	r1, r8
 8004d90:	1854      	adds	r4, r2, r1
 8004d92:	4649      	mov	r1, r9
 8004d94:	eb43 0501 	adc.w	r5, r3, r1
 8004d98:	f04f 0200 	mov.w	r2, #0
 8004d9c:	f04f 0300 	mov.w	r3, #0
 8004da0:	00eb      	lsls	r3, r5, #3
 8004da2:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8004da6:	00e2      	lsls	r2, r4, #3
 8004da8:	4614      	mov	r4, r2
 8004daa:	461d      	mov	r5, r3
 8004dac:	4643      	mov	r3, r8
 8004dae:	18e3      	adds	r3, r4, r3
 8004db0:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 8004db4:	464b      	mov	r3, r9
 8004db6:	eb45 0303 	adc.w	r3, r5, r3
 8004dba:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 8004dbe:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8004dc2:	685b      	ldr	r3, [r3, #4]
 8004dc4:	2200      	movs	r2, #0
 8004dc6:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8004dca:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 8004dce:	f04f 0200 	mov.w	r2, #0
 8004dd2:	f04f 0300 	mov.w	r3, #0
 8004dd6:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	; 0x90
 8004dda:	4629      	mov	r1, r5
 8004ddc:	008b      	lsls	r3, r1, #2
 8004dde:	4621      	mov	r1, r4
 8004de0:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8004de4:	4621      	mov	r1, r4
 8004de6:	008a      	lsls	r2, r1, #2
 8004de8:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	; 0x98
 8004dec:	f7fb fedc 	bl	8000ba8 <__aeabi_uldivmod>
 8004df0:	4602      	mov	r2, r0
 8004df2:	460b      	mov	r3, r1
 8004df4:	4b60      	ldr	r3, [pc, #384]	; (8004f78 <UART_SetConfig+0x4e4>)
 8004df6:	fba3 2302 	umull	r2, r3, r3, r2
 8004dfa:	095b      	lsrs	r3, r3, #5
 8004dfc:	011c      	lsls	r4, r3, #4
 8004dfe:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8004e02:	2200      	movs	r2, #0
 8004e04:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8004e08:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 8004e0c:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	; 0x88
 8004e10:	4642      	mov	r2, r8
 8004e12:	464b      	mov	r3, r9
 8004e14:	1891      	adds	r1, r2, r2
 8004e16:	61b9      	str	r1, [r7, #24]
 8004e18:	415b      	adcs	r3, r3
 8004e1a:	61fb      	str	r3, [r7, #28]
 8004e1c:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8004e20:	4641      	mov	r1, r8
 8004e22:	1851      	adds	r1, r2, r1
 8004e24:	6139      	str	r1, [r7, #16]
 8004e26:	4649      	mov	r1, r9
 8004e28:	414b      	adcs	r3, r1
 8004e2a:	617b      	str	r3, [r7, #20]
 8004e2c:	f04f 0200 	mov.w	r2, #0
 8004e30:	f04f 0300 	mov.w	r3, #0
 8004e34:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8004e38:	4659      	mov	r1, fp
 8004e3a:	00cb      	lsls	r3, r1, #3
 8004e3c:	4651      	mov	r1, sl
 8004e3e:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8004e42:	4651      	mov	r1, sl
 8004e44:	00ca      	lsls	r2, r1, #3
 8004e46:	4610      	mov	r0, r2
 8004e48:	4619      	mov	r1, r3
 8004e4a:	4603      	mov	r3, r0
 8004e4c:	4642      	mov	r2, r8
 8004e4e:	189b      	adds	r3, r3, r2
 8004e50:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 8004e54:	464b      	mov	r3, r9
 8004e56:	460a      	mov	r2, r1
 8004e58:	eb42 0303 	adc.w	r3, r2, r3
 8004e5c:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8004e60:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8004e64:	685b      	ldr	r3, [r3, #4]
 8004e66:	2200      	movs	r2, #0
 8004e68:	67bb      	str	r3, [r7, #120]	; 0x78
 8004e6a:	67fa      	str	r2, [r7, #124]	; 0x7c
 8004e6c:	f04f 0200 	mov.w	r2, #0
 8004e70:	f04f 0300 	mov.w	r3, #0
 8004e74:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	; 0x78
 8004e78:	4649      	mov	r1, r9
 8004e7a:	008b      	lsls	r3, r1, #2
 8004e7c:	4641      	mov	r1, r8
 8004e7e:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8004e82:	4641      	mov	r1, r8
 8004e84:	008a      	lsls	r2, r1, #2
 8004e86:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	; 0x80
 8004e8a:	f7fb fe8d 	bl	8000ba8 <__aeabi_uldivmod>
 8004e8e:	4602      	mov	r2, r0
 8004e90:	460b      	mov	r3, r1
 8004e92:	4b39      	ldr	r3, [pc, #228]	; (8004f78 <UART_SetConfig+0x4e4>)
 8004e94:	fba3 1302 	umull	r1, r3, r3, r2
 8004e98:	095b      	lsrs	r3, r3, #5
 8004e9a:	2164      	movs	r1, #100	; 0x64
 8004e9c:	fb01 f303 	mul.w	r3, r1, r3
 8004ea0:	1ad3      	subs	r3, r2, r3
 8004ea2:	011b      	lsls	r3, r3, #4
 8004ea4:	3332      	adds	r3, #50	; 0x32
 8004ea6:	4a34      	ldr	r2, [pc, #208]	; (8004f78 <UART_SetConfig+0x4e4>)
 8004ea8:	fba2 2303 	umull	r2, r3, r2, r3
 8004eac:	095b      	lsrs	r3, r3, #5
 8004eae:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8004eb2:	441c      	add	r4, r3
 8004eb4:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8004eb8:	2200      	movs	r2, #0
 8004eba:	673b      	str	r3, [r7, #112]	; 0x70
 8004ebc:	677a      	str	r2, [r7, #116]	; 0x74
 8004ebe:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	; 0x70
 8004ec2:	4642      	mov	r2, r8
 8004ec4:	464b      	mov	r3, r9
 8004ec6:	1891      	adds	r1, r2, r2
 8004ec8:	60b9      	str	r1, [r7, #8]
 8004eca:	415b      	adcs	r3, r3
 8004ecc:	60fb      	str	r3, [r7, #12]
 8004ece:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8004ed2:	4641      	mov	r1, r8
 8004ed4:	1851      	adds	r1, r2, r1
 8004ed6:	6039      	str	r1, [r7, #0]
 8004ed8:	4649      	mov	r1, r9
 8004eda:	414b      	adcs	r3, r1
 8004edc:	607b      	str	r3, [r7, #4]
 8004ede:	f04f 0200 	mov.w	r2, #0
 8004ee2:	f04f 0300 	mov.w	r3, #0
 8004ee6:	e9d7 ab00 	ldrd	sl, fp, [r7]
 8004eea:	4659      	mov	r1, fp
 8004eec:	00cb      	lsls	r3, r1, #3
 8004eee:	4651      	mov	r1, sl
 8004ef0:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8004ef4:	4651      	mov	r1, sl
 8004ef6:	00ca      	lsls	r2, r1, #3
 8004ef8:	4610      	mov	r0, r2
 8004efa:	4619      	mov	r1, r3
 8004efc:	4603      	mov	r3, r0
 8004efe:	4642      	mov	r2, r8
 8004f00:	189b      	adds	r3, r3, r2
 8004f02:	66bb      	str	r3, [r7, #104]	; 0x68
 8004f04:	464b      	mov	r3, r9
 8004f06:	460a      	mov	r2, r1
 8004f08:	eb42 0303 	adc.w	r3, r2, r3
 8004f0c:	66fb      	str	r3, [r7, #108]	; 0x6c
 8004f0e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8004f12:	685b      	ldr	r3, [r3, #4]
 8004f14:	2200      	movs	r2, #0
 8004f16:	663b      	str	r3, [r7, #96]	; 0x60
 8004f18:	667a      	str	r2, [r7, #100]	; 0x64
 8004f1a:	f04f 0200 	mov.w	r2, #0
 8004f1e:	f04f 0300 	mov.w	r3, #0
 8004f22:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	; 0x60
 8004f26:	4649      	mov	r1, r9
 8004f28:	008b      	lsls	r3, r1, #2
 8004f2a:	4641      	mov	r1, r8
 8004f2c:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8004f30:	4641      	mov	r1, r8
 8004f32:	008a      	lsls	r2, r1, #2
 8004f34:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 8004f38:	f7fb fe36 	bl	8000ba8 <__aeabi_uldivmod>
 8004f3c:	4602      	mov	r2, r0
 8004f3e:	460b      	mov	r3, r1
 8004f40:	4b0d      	ldr	r3, [pc, #52]	; (8004f78 <UART_SetConfig+0x4e4>)
 8004f42:	fba3 1302 	umull	r1, r3, r3, r2
 8004f46:	095b      	lsrs	r3, r3, #5
 8004f48:	2164      	movs	r1, #100	; 0x64
 8004f4a:	fb01 f303 	mul.w	r3, r1, r3
 8004f4e:	1ad3      	subs	r3, r2, r3
 8004f50:	011b      	lsls	r3, r3, #4
 8004f52:	3332      	adds	r3, #50	; 0x32
 8004f54:	4a08      	ldr	r2, [pc, #32]	; (8004f78 <UART_SetConfig+0x4e4>)
 8004f56:	fba2 2303 	umull	r2, r3, r2, r3
 8004f5a:	095b      	lsrs	r3, r3, #5
 8004f5c:	f003 020f 	and.w	r2, r3, #15
 8004f60:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8004f64:	681b      	ldr	r3, [r3, #0]
 8004f66:	4422      	add	r2, r4
 8004f68:	609a      	str	r2, [r3, #8]
 8004f6a:	bf00      	nop
 8004f6c:	f507 7780 	add.w	r7, r7, #256	; 0x100
 8004f70:	46bd      	mov	sp, r7
 8004f72:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8004f76:	bf00      	nop
 8004f78:	51eb851f 	.word	0x51eb851f

08004f7c <__errno>:
 8004f7c:	4b01      	ldr	r3, [pc, #4]	; (8004f84 <__errno+0x8>)
 8004f7e:	6818      	ldr	r0, [r3, #0]
 8004f80:	4770      	bx	lr
 8004f82:	bf00      	nop
 8004f84:	20000010 	.word	0x20000010

08004f88 <__libc_init_array>:
 8004f88:	b570      	push	{r4, r5, r6, lr}
 8004f8a:	4d0d      	ldr	r5, [pc, #52]	; (8004fc0 <__libc_init_array+0x38>)
 8004f8c:	4c0d      	ldr	r4, [pc, #52]	; (8004fc4 <__libc_init_array+0x3c>)
 8004f8e:	1b64      	subs	r4, r4, r5
 8004f90:	10a4      	asrs	r4, r4, #2
 8004f92:	2600      	movs	r6, #0
 8004f94:	42a6      	cmp	r6, r4
 8004f96:	d109      	bne.n	8004fac <__libc_init_array+0x24>
 8004f98:	4d0b      	ldr	r5, [pc, #44]	; (8004fc8 <__libc_init_array+0x40>)
 8004f9a:	4c0c      	ldr	r4, [pc, #48]	; (8004fcc <__libc_init_array+0x44>)
 8004f9c:	f002 ff04 	bl	8007da8 <_init>
 8004fa0:	1b64      	subs	r4, r4, r5
 8004fa2:	10a4      	asrs	r4, r4, #2
 8004fa4:	2600      	movs	r6, #0
 8004fa6:	42a6      	cmp	r6, r4
 8004fa8:	d105      	bne.n	8004fb6 <__libc_init_array+0x2e>
 8004faa:	bd70      	pop	{r4, r5, r6, pc}
 8004fac:	f855 3b04 	ldr.w	r3, [r5], #4
 8004fb0:	4798      	blx	r3
 8004fb2:	3601      	adds	r6, #1
 8004fb4:	e7ee      	b.n	8004f94 <__libc_init_array+0xc>
 8004fb6:	f855 3b04 	ldr.w	r3, [r5], #4
 8004fba:	4798      	blx	r3
 8004fbc:	3601      	adds	r6, #1
 8004fbe:	e7f2      	b.n	8004fa6 <__libc_init_array+0x1e>
 8004fc0:	0800829c 	.word	0x0800829c
 8004fc4:	0800829c 	.word	0x0800829c
 8004fc8:	0800829c 	.word	0x0800829c
 8004fcc:	080082a0 	.word	0x080082a0

08004fd0 <memset>:
 8004fd0:	4402      	add	r2, r0
 8004fd2:	4603      	mov	r3, r0
 8004fd4:	4293      	cmp	r3, r2
 8004fd6:	d100      	bne.n	8004fda <memset+0xa>
 8004fd8:	4770      	bx	lr
 8004fda:	f803 1b01 	strb.w	r1, [r3], #1
 8004fde:	e7f9      	b.n	8004fd4 <memset+0x4>

08004fe0 <__cvt>:
 8004fe0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8004fe4:	ec55 4b10 	vmov	r4, r5, d0
 8004fe8:	2d00      	cmp	r5, #0
 8004fea:	460e      	mov	r6, r1
 8004fec:	4619      	mov	r1, r3
 8004fee:	462b      	mov	r3, r5
 8004ff0:	bfbb      	ittet	lt
 8004ff2:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 8004ff6:	461d      	movlt	r5, r3
 8004ff8:	2300      	movge	r3, #0
 8004ffa:	232d      	movlt	r3, #45	; 0x2d
 8004ffc:	700b      	strb	r3, [r1, #0]
 8004ffe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005000:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8005004:	4691      	mov	r9, r2
 8005006:	f023 0820 	bic.w	r8, r3, #32
 800500a:	bfbc      	itt	lt
 800500c:	4622      	movlt	r2, r4
 800500e:	4614      	movlt	r4, r2
 8005010:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8005014:	d005      	beq.n	8005022 <__cvt+0x42>
 8005016:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 800501a:	d100      	bne.n	800501e <__cvt+0x3e>
 800501c:	3601      	adds	r6, #1
 800501e:	2102      	movs	r1, #2
 8005020:	e000      	b.n	8005024 <__cvt+0x44>
 8005022:	2103      	movs	r1, #3
 8005024:	ab03      	add	r3, sp, #12
 8005026:	9301      	str	r3, [sp, #4]
 8005028:	ab02      	add	r3, sp, #8
 800502a:	9300      	str	r3, [sp, #0]
 800502c:	ec45 4b10 	vmov	d0, r4, r5
 8005030:	4653      	mov	r3, sl
 8005032:	4632      	mov	r2, r6
 8005034:	f000 fcec 	bl	8005a10 <_dtoa_r>
 8005038:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 800503c:	4607      	mov	r7, r0
 800503e:	d102      	bne.n	8005046 <__cvt+0x66>
 8005040:	f019 0f01 	tst.w	r9, #1
 8005044:	d022      	beq.n	800508c <__cvt+0xac>
 8005046:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800504a:	eb07 0906 	add.w	r9, r7, r6
 800504e:	d110      	bne.n	8005072 <__cvt+0x92>
 8005050:	783b      	ldrb	r3, [r7, #0]
 8005052:	2b30      	cmp	r3, #48	; 0x30
 8005054:	d10a      	bne.n	800506c <__cvt+0x8c>
 8005056:	2200      	movs	r2, #0
 8005058:	2300      	movs	r3, #0
 800505a:	4620      	mov	r0, r4
 800505c:	4629      	mov	r1, r5
 800505e:	f7fb fd33 	bl	8000ac8 <__aeabi_dcmpeq>
 8005062:	b918      	cbnz	r0, 800506c <__cvt+0x8c>
 8005064:	f1c6 0601 	rsb	r6, r6, #1
 8005068:	f8ca 6000 	str.w	r6, [sl]
 800506c:	f8da 3000 	ldr.w	r3, [sl]
 8005070:	4499      	add	r9, r3
 8005072:	2200      	movs	r2, #0
 8005074:	2300      	movs	r3, #0
 8005076:	4620      	mov	r0, r4
 8005078:	4629      	mov	r1, r5
 800507a:	f7fb fd25 	bl	8000ac8 <__aeabi_dcmpeq>
 800507e:	b108      	cbz	r0, 8005084 <__cvt+0xa4>
 8005080:	f8cd 900c 	str.w	r9, [sp, #12]
 8005084:	2230      	movs	r2, #48	; 0x30
 8005086:	9b03      	ldr	r3, [sp, #12]
 8005088:	454b      	cmp	r3, r9
 800508a:	d307      	bcc.n	800509c <__cvt+0xbc>
 800508c:	9b03      	ldr	r3, [sp, #12]
 800508e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8005090:	1bdb      	subs	r3, r3, r7
 8005092:	4638      	mov	r0, r7
 8005094:	6013      	str	r3, [r2, #0]
 8005096:	b004      	add	sp, #16
 8005098:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800509c:	1c59      	adds	r1, r3, #1
 800509e:	9103      	str	r1, [sp, #12]
 80050a0:	701a      	strb	r2, [r3, #0]
 80050a2:	e7f0      	b.n	8005086 <__cvt+0xa6>

080050a4 <__exponent>:
 80050a4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80050a6:	4603      	mov	r3, r0
 80050a8:	2900      	cmp	r1, #0
 80050aa:	bfb8      	it	lt
 80050ac:	4249      	neglt	r1, r1
 80050ae:	f803 2b02 	strb.w	r2, [r3], #2
 80050b2:	bfb4      	ite	lt
 80050b4:	222d      	movlt	r2, #45	; 0x2d
 80050b6:	222b      	movge	r2, #43	; 0x2b
 80050b8:	2909      	cmp	r1, #9
 80050ba:	7042      	strb	r2, [r0, #1]
 80050bc:	dd2a      	ble.n	8005114 <__exponent+0x70>
 80050be:	f10d 0407 	add.w	r4, sp, #7
 80050c2:	46a4      	mov	ip, r4
 80050c4:	270a      	movs	r7, #10
 80050c6:	46a6      	mov	lr, r4
 80050c8:	460a      	mov	r2, r1
 80050ca:	fb91 f6f7 	sdiv	r6, r1, r7
 80050ce:	fb07 1516 	mls	r5, r7, r6, r1
 80050d2:	3530      	adds	r5, #48	; 0x30
 80050d4:	2a63      	cmp	r2, #99	; 0x63
 80050d6:	f104 34ff 	add.w	r4, r4, #4294967295
 80050da:	f80e 5c01 	strb.w	r5, [lr, #-1]
 80050de:	4631      	mov	r1, r6
 80050e0:	dcf1      	bgt.n	80050c6 <__exponent+0x22>
 80050e2:	3130      	adds	r1, #48	; 0x30
 80050e4:	f1ae 0502 	sub.w	r5, lr, #2
 80050e8:	f804 1c01 	strb.w	r1, [r4, #-1]
 80050ec:	1c44      	adds	r4, r0, #1
 80050ee:	4629      	mov	r1, r5
 80050f0:	4561      	cmp	r1, ip
 80050f2:	d30a      	bcc.n	800510a <__exponent+0x66>
 80050f4:	f10d 0209 	add.w	r2, sp, #9
 80050f8:	eba2 020e 	sub.w	r2, r2, lr
 80050fc:	4565      	cmp	r5, ip
 80050fe:	bf88      	it	hi
 8005100:	2200      	movhi	r2, #0
 8005102:	4413      	add	r3, r2
 8005104:	1a18      	subs	r0, r3, r0
 8005106:	b003      	add	sp, #12
 8005108:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800510a:	f811 2b01 	ldrb.w	r2, [r1], #1
 800510e:	f804 2f01 	strb.w	r2, [r4, #1]!
 8005112:	e7ed      	b.n	80050f0 <__exponent+0x4c>
 8005114:	2330      	movs	r3, #48	; 0x30
 8005116:	3130      	adds	r1, #48	; 0x30
 8005118:	7083      	strb	r3, [r0, #2]
 800511a:	70c1      	strb	r1, [r0, #3]
 800511c:	1d03      	adds	r3, r0, #4
 800511e:	e7f1      	b.n	8005104 <__exponent+0x60>

08005120 <_printf_float>:
 8005120:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005124:	ed2d 8b02 	vpush	{d8}
 8005128:	b08d      	sub	sp, #52	; 0x34
 800512a:	460c      	mov	r4, r1
 800512c:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8005130:	4616      	mov	r6, r2
 8005132:	461f      	mov	r7, r3
 8005134:	4605      	mov	r5, r0
 8005136:	f001 fa59 	bl	80065ec <_localeconv_r>
 800513a:	f8d0 a000 	ldr.w	sl, [r0]
 800513e:	4650      	mov	r0, sl
 8005140:	f7fb f846 	bl	80001d0 <strlen>
 8005144:	2300      	movs	r3, #0
 8005146:	930a      	str	r3, [sp, #40]	; 0x28
 8005148:	6823      	ldr	r3, [r4, #0]
 800514a:	9305      	str	r3, [sp, #20]
 800514c:	f8d8 3000 	ldr.w	r3, [r8]
 8005150:	f894 b018 	ldrb.w	fp, [r4, #24]
 8005154:	3307      	adds	r3, #7
 8005156:	f023 0307 	bic.w	r3, r3, #7
 800515a:	f103 0208 	add.w	r2, r3, #8
 800515e:	f8c8 2000 	str.w	r2, [r8]
 8005162:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005166:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 800516a:	e9d4 8912 	ldrd	r8, r9, [r4, #72]	; 0x48
 800516e:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8005172:	9307      	str	r3, [sp, #28]
 8005174:	f8cd 8018 	str.w	r8, [sp, #24]
 8005178:	ee08 0a10 	vmov	s16, r0
 800517c:	4b9f      	ldr	r3, [pc, #636]	; (80053fc <_printf_float+0x2dc>)
 800517e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8005182:	f04f 32ff 	mov.w	r2, #4294967295
 8005186:	f7fb fcd1 	bl	8000b2c <__aeabi_dcmpun>
 800518a:	bb88      	cbnz	r0, 80051f0 <_printf_float+0xd0>
 800518c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8005190:	4b9a      	ldr	r3, [pc, #616]	; (80053fc <_printf_float+0x2dc>)
 8005192:	f04f 32ff 	mov.w	r2, #4294967295
 8005196:	f7fb fcab 	bl	8000af0 <__aeabi_dcmple>
 800519a:	bb48      	cbnz	r0, 80051f0 <_printf_float+0xd0>
 800519c:	2200      	movs	r2, #0
 800519e:	2300      	movs	r3, #0
 80051a0:	4640      	mov	r0, r8
 80051a2:	4649      	mov	r1, r9
 80051a4:	f7fb fc9a 	bl	8000adc <__aeabi_dcmplt>
 80051a8:	b110      	cbz	r0, 80051b0 <_printf_float+0x90>
 80051aa:	232d      	movs	r3, #45	; 0x2d
 80051ac:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80051b0:	4b93      	ldr	r3, [pc, #588]	; (8005400 <_printf_float+0x2e0>)
 80051b2:	4894      	ldr	r0, [pc, #592]	; (8005404 <_printf_float+0x2e4>)
 80051b4:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 80051b8:	bf94      	ite	ls
 80051ba:	4698      	movls	r8, r3
 80051bc:	4680      	movhi	r8, r0
 80051be:	2303      	movs	r3, #3
 80051c0:	6123      	str	r3, [r4, #16]
 80051c2:	9b05      	ldr	r3, [sp, #20]
 80051c4:	f023 0204 	bic.w	r2, r3, #4
 80051c8:	6022      	str	r2, [r4, #0]
 80051ca:	f04f 0900 	mov.w	r9, #0
 80051ce:	9700      	str	r7, [sp, #0]
 80051d0:	4633      	mov	r3, r6
 80051d2:	aa0b      	add	r2, sp, #44	; 0x2c
 80051d4:	4621      	mov	r1, r4
 80051d6:	4628      	mov	r0, r5
 80051d8:	f000 f9d8 	bl	800558c <_printf_common>
 80051dc:	3001      	adds	r0, #1
 80051de:	f040 8090 	bne.w	8005302 <_printf_float+0x1e2>
 80051e2:	f04f 30ff 	mov.w	r0, #4294967295
 80051e6:	b00d      	add	sp, #52	; 0x34
 80051e8:	ecbd 8b02 	vpop	{d8}
 80051ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80051f0:	4642      	mov	r2, r8
 80051f2:	464b      	mov	r3, r9
 80051f4:	4640      	mov	r0, r8
 80051f6:	4649      	mov	r1, r9
 80051f8:	f7fb fc98 	bl	8000b2c <__aeabi_dcmpun>
 80051fc:	b140      	cbz	r0, 8005210 <_printf_float+0xf0>
 80051fe:	464b      	mov	r3, r9
 8005200:	2b00      	cmp	r3, #0
 8005202:	bfbc      	itt	lt
 8005204:	232d      	movlt	r3, #45	; 0x2d
 8005206:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 800520a:	487f      	ldr	r0, [pc, #508]	; (8005408 <_printf_float+0x2e8>)
 800520c:	4b7f      	ldr	r3, [pc, #508]	; (800540c <_printf_float+0x2ec>)
 800520e:	e7d1      	b.n	80051b4 <_printf_float+0x94>
 8005210:	6863      	ldr	r3, [r4, #4]
 8005212:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 8005216:	9206      	str	r2, [sp, #24]
 8005218:	1c5a      	adds	r2, r3, #1
 800521a:	d13f      	bne.n	800529c <_printf_float+0x17c>
 800521c:	2306      	movs	r3, #6
 800521e:	6063      	str	r3, [r4, #4]
 8005220:	9b05      	ldr	r3, [sp, #20]
 8005222:	6861      	ldr	r1, [r4, #4]
 8005224:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 8005228:	2300      	movs	r3, #0
 800522a:	9303      	str	r3, [sp, #12]
 800522c:	ab0a      	add	r3, sp, #40	; 0x28
 800522e:	e9cd b301 	strd	fp, r3, [sp, #4]
 8005232:	ab09      	add	r3, sp, #36	; 0x24
 8005234:	ec49 8b10 	vmov	d0, r8, r9
 8005238:	9300      	str	r3, [sp, #0]
 800523a:	6022      	str	r2, [r4, #0]
 800523c:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 8005240:	4628      	mov	r0, r5
 8005242:	f7ff fecd 	bl	8004fe0 <__cvt>
 8005246:	9b06      	ldr	r3, [sp, #24]
 8005248:	9909      	ldr	r1, [sp, #36]	; 0x24
 800524a:	2b47      	cmp	r3, #71	; 0x47
 800524c:	4680      	mov	r8, r0
 800524e:	d108      	bne.n	8005262 <_printf_float+0x142>
 8005250:	1cc8      	adds	r0, r1, #3
 8005252:	db02      	blt.n	800525a <_printf_float+0x13a>
 8005254:	6863      	ldr	r3, [r4, #4]
 8005256:	4299      	cmp	r1, r3
 8005258:	dd41      	ble.n	80052de <_printf_float+0x1be>
 800525a:	f1ab 0b02 	sub.w	fp, fp, #2
 800525e:	fa5f fb8b 	uxtb.w	fp, fp
 8005262:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 8005266:	d820      	bhi.n	80052aa <_printf_float+0x18a>
 8005268:	3901      	subs	r1, #1
 800526a:	465a      	mov	r2, fp
 800526c:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8005270:	9109      	str	r1, [sp, #36]	; 0x24
 8005272:	f7ff ff17 	bl	80050a4 <__exponent>
 8005276:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005278:	1813      	adds	r3, r2, r0
 800527a:	2a01      	cmp	r2, #1
 800527c:	4681      	mov	r9, r0
 800527e:	6123      	str	r3, [r4, #16]
 8005280:	dc02      	bgt.n	8005288 <_printf_float+0x168>
 8005282:	6822      	ldr	r2, [r4, #0]
 8005284:	07d2      	lsls	r2, r2, #31
 8005286:	d501      	bpl.n	800528c <_printf_float+0x16c>
 8005288:	3301      	adds	r3, #1
 800528a:	6123      	str	r3, [r4, #16]
 800528c:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 8005290:	2b00      	cmp	r3, #0
 8005292:	d09c      	beq.n	80051ce <_printf_float+0xae>
 8005294:	232d      	movs	r3, #45	; 0x2d
 8005296:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800529a:	e798      	b.n	80051ce <_printf_float+0xae>
 800529c:	9a06      	ldr	r2, [sp, #24]
 800529e:	2a47      	cmp	r2, #71	; 0x47
 80052a0:	d1be      	bne.n	8005220 <_printf_float+0x100>
 80052a2:	2b00      	cmp	r3, #0
 80052a4:	d1bc      	bne.n	8005220 <_printf_float+0x100>
 80052a6:	2301      	movs	r3, #1
 80052a8:	e7b9      	b.n	800521e <_printf_float+0xfe>
 80052aa:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 80052ae:	d118      	bne.n	80052e2 <_printf_float+0x1c2>
 80052b0:	2900      	cmp	r1, #0
 80052b2:	6863      	ldr	r3, [r4, #4]
 80052b4:	dd0b      	ble.n	80052ce <_printf_float+0x1ae>
 80052b6:	6121      	str	r1, [r4, #16]
 80052b8:	b913      	cbnz	r3, 80052c0 <_printf_float+0x1a0>
 80052ba:	6822      	ldr	r2, [r4, #0]
 80052bc:	07d0      	lsls	r0, r2, #31
 80052be:	d502      	bpl.n	80052c6 <_printf_float+0x1a6>
 80052c0:	3301      	adds	r3, #1
 80052c2:	440b      	add	r3, r1
 80052c4:	6123      	str	r3, [r4, #16]
 80052c6:	65a1      	str	r1, [r4, #88]	; 0x58
 80052c8:	f04f 0900 	mov.w	r9, #0
 80052cc:	e7de      	b.n	800528c <_printf_float+0x16c>
 80052ce:	b913      	cbnz	r3, 80052d6 <_printf_float+0x1b6>
 80052d0:	6822      	ldr	r2, [r4, #0]
 80052d2:	07d2      	lsls	r2, r2, #31
 80052d4:	d501      	bpl.n	80052da <_printf_float+0x1ba>
 80052d6:	3302      	adds	r3, #2
 80052d8:	e7f4      	b.n	80052c4 <_printf_float+0x1a4>
 80052da:	2301      	movs	r3, #1
 80052dc:	e7f2      	b.n	80052c4 <_printf_float+0x1a4>
 80052de:	f04f 0b67 	mov.w	fp, #103	; 0x67
 80052e2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80052e4:	4299      	cmp	r1, r3
 80052e6:	db05      	blt.n	80052f4 <_printf_float+0x1d4>
 80052e8:	6823      	ldr	r3, [r4, #0]
 80052ea:	6121      	str	r1, [r4, #16]
 80052ec:	07d8      	lsls	r0, r3, #31
 80052ee:	d5ea      	bpl.n	80052c6 <_printf_float+0x1a6>
 80052f0:	1c4b      	adds	r3, r1, #1
 80052f2:	e7e7      	b.n	80052c4 <_printf_float+0x1a4>
 80052f4:	2900      	cmp	r1, #0
 80052f6:	bfd4      	ite	le
 80052f8:	f1c1 0202 	rsble	r2, r1, #2
 80052fc:	2201      	movgt	r2, #1
 80052fe:	4413      	add	r3, r2
 8005300:	e7e0      	b.n	80052c4 <_printf_float+0x1a4>
 8005302:	6823      	ldr	r3, [r4, #0]
 8005304:	055a      	lsls	r2, r3, #21
 8005306:	d407      	bmi.n	8005318 <_printf_float+0x1f8>
 8005308:	6923      	ldr	r3, [r4, #16]
 800530a:	4642      	mov	r2, r8
 800530c:	4631      	mov	r1, r6
 800530e:	4628      	mov	r0, r5
 8005310:	47b8      	blx	r7
 8005312:	3001      	adds	r0, #1
 8005314:	d12c      	bne.n	8005370 <_printf_float+0x250>
 8005316:	e764      	b.n	80051e2 <_printf_float+0xc2>
 8005318:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 800531c:	f240 80e0 	bls.w	80054e0 <_printf_float+0x3c0>
 8005320:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8005324:	2200      	movs	r2, #0
 8005326:	2300      	movs	r3, #0
 8005328:	f7fb fbce 	bl	8000ac8 <__aeabi_dcmpeq>
 800532c:	2800      	cmp	r0, #0
 800532e:	d034      	beq.n	800539a <_printf_float+0x27a>
 8005330:	4a37      	ldr	r2, [pc, #220]	; (8005410 <_printf_float+0x2f0>)
 8005332:	2301      	movs	r3, #1
 8005334:	4631      	mov	r1, r6
 8005336:	4628      	mov	r0, r5
 8005338:	47b8      	blx	r7
 800533a:	3001      	adds	r0, #1
 800533c:	f43f af51 	beq.w	80051e2 <_printf_float+0xc2>
 8005340:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8005344:	429a      	cmp	r2, r3
 8005346:	db02      	blt.n	800534e <_printf_float+0x22e>
 8005348:	6823      	ldr	r3, [r4, #0]
 800534a:	07d8      	lsls	r0, r3, #31
 800534c:	d510      	bpl.n	8005370 <_printf_float+0x250>
 800534e:	ee18 3a10 	vmov	r3, s16
 8005352:	4652      	mov	r2, sl
 8005354:	4631      	mov	r1, r6
 8005356:	4628      	mov	r0, r5
 8005358:	47b8      	blx	r7
 800535a:	3001      	adds	r0, #1
 800535c:	f43f af41 	beq.w	80051e2 <_printf_float+0xc2>
 8005360:	f04f 0800 	mov.w	r8, #0
 8005364:	f104 091a 	add.w	r9, r4, #26
 8005368:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800536a:	3b01      	subs	r3, #1
 800536c:	4543      	cmp	r3, r8
 800536e:	dc09      	bgt.n	8005384 <_printf_float+0x264>
 8005370:	6823      	ldr	r3, [r4, #0]
 8005372:	079b      	lsls	r3, r3, #30
 8005374:	f100 8105 	bmi.w	8005582 <_printf_float+0x462>
 8005378:	68e0      	ldr	r0, [r4, #12]
 800537a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800537c:	4298      	cmp	r0, r3
 800537e:	bfb8      	it	lt
 8005380:	4618      	movlt	r0, r3
 8005382:	e730      	b.n	80051e6 <_printf_float+0xc6>
 8005384:	2301      	movs	r3, #1
 8005386:	464a      	mov	r2, r9
 8005388:	4631      	mov	r1, r6
 800538a:	4628      	mov	r0, r5
 800538c:	47b8      	blx	r7
 800538e:	3001      	adds	r0, #1
 8005390:	f43f af27 	beq.w	80051e2 <_printf_float+0xc2>
 8005394:	f108 0801 	add.w	r8, r8, #1
 8005398:	e7e6      	b.n	8005368 <_printf_float+0x248>
 800539a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800539c:	2b00      	cmp	r3, #0
 800539e:	dc39      	bgt.n	8005414 <_printf_float+0x2f4>
 80053a0:	4a1b      	ldr	r2, [pc, #108]	; (8005410 <_printf_float+0x2f0>)
 80053a2:	2301      	movs	r3, #1
 80053a4:	4631      	mov	r1, r6
 80053a6:	4628      	mov	r0, r5
 80053a8:	47b8      	blx	r7
 80053aa:	3001      	adds	r0, #1
 80053ac:	f43f af19 	beq.w	80051e2 <_printf_float+0xc2>
 80053b0:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80053b4:	4313      	orrs	r3, r2
 80053b6:	d102      	bne.n	80053be <_printf_float+0x29e>
 80053b8:	6823      	ldr	r3, [r4, #0]
 80053ba:	07d9      	lsls	r1, r3, #31
 80053bc:	d5d8      	bpl.n	8005370 <_printf_float+0x250>
 80053be:	ee18 3a10 	vmov	r3, s16
 80053c2:	4652      	mov	r2, sl
 80053c4:	4631      	mov	r1, r6
 80053c6:	4628      	mov	r0, r5
 80053c8:	47b8      	blx	r7
 80053ca:	3001      	adds	r0, #1
 80053cc:	f43f af09 	beq.w	80051e2 <_printf_float+0xc2>
 80053d0:	f04f 0900 	mov.w	r9, #0
 80053d4:	f104 0a1a 	add.w	sl, r4, #26
 80053d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80053da:	425b      	negs	r3, r3
 80053dc:	454b      	cmp	r3, r9
 80053de:	dc01      	bgt.n	80053e4 <_printf_float+0x2c4>
 80053e0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80053e2:	e792      	b.n	800530a <_printf_float+0x1ea>
 80053e4:	2301      	movs	r3, #1
 80053e6:	4652      	mov	r2, sl
 80053e8:	4631      	mov	r1, r6
 80053ea:	4628      	mov	r0, r5
 80053ec:	47b8      	blx	r7
 80053ee:	3001      	adds	r0, #1
 80053f0:	f43f aef7 	beq.w	80051e2 <_printf_float+0xc2>
 80053f4:	f109 0901 	add.w	r9, r9, #1
 80053f8:	e7ee      	b.n	80053d8 <_printf_float+0x2b8>
 80053fa:	bf00      	nop
 80053fc:	7fefffff 	.word	0x7fefffff
 8005400:	08007ec0 	.word	0x08007ec0
 8005404:	08007ec4 	.word	0x08007ec4
 8005408:	08007ecc 	.word	0x08007ecc
 800540c:	08007ec8 	.word	0x08007ec8
 8005410:	08007ed0 	.word	0x08007ed0
 8005414:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005416:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8005418:	429a      	cmp	r2, r3
 800541a:	bfa8      	it	ge
 800541c:	461a      	movge	r2, r3
 800541e:	2a00      	cmp	r2, #0
 8005420:	4691      	mov	r9, r2
 8005422:	dc37      	bgt.n	8005494 <_printf_float+0x374>
 8005424:	f04f 0b00 	mov.w	fp, #0
 8005428:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800542c:	f104 021a 	add.w	r2, r4, #26
 8005430:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8005432:	9305      	str	r3, [sp, #20]
 8005434:	eba3 0309 	sub.w	r3, r3, r9
 8005438:	455b      	cmp	r3, fp
 800543a:	dc33      	bgt.n	80054a4 <_printf_float+0x384>
 800543c:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8005440:	429a      	cmp	r2, r3
 8005442:	db3b      	blt.n	80054bc <_printf_float+0x39c>
 8005444:	6823      	ldr	r3, [r4, #0]
 8005446:	07da      	lsls	r2, r3, #31
 8005448:	d438      	bmi.n	80054bc <_printf_float+0x39c>
 800544a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800544c:	9a05      	ldr	r2, [sp, #20]
 800544e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005450:	1a9a      	subs	r2, r3, r2
 8005452:	eba3 0901 	sub.w	r9, r3, r1
 8005456:	4591      	cmp	r9, r2
 8005458:	bfa8      	it	ge
 800545a:	4691      	movge	r9, r2
 800545c:	f1b9 0f00 	cmp.w	r9, #0
 8005460:	dc35      	bgt.n	80054ce <_printf_float+0x3ae>
 8005462:	f04f 0800 	mov.w	r8, #0
 8005466:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800546a:	f104 0a1a 	add.w	sl, r4, #26
 800546e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8005472:	1a9b      	subs	r3, r3, r2
 8005474:	eba3 0309 	sub.w	r3, r3, r9
 8005478:	4543      	cmp	r3, r8
 800547a:	f77f af79 	ble.w	8005370 <_printf_float+0x250>
 800547e:	2301      	movs	r3, #1
 8005480:	4652      	mov	r2, sl
 8005482:	4631      	mov	r1, r6
 8005484:	4628      	mov	r0, r5
 8005486:	47b8      	blx	r7
 8005488:	3001      	adds	r0, #1
 800548a:	f43f aeaa 	beq.w	80051e2 <_printf_float+0xc2>
 800548e:	f108 0801 	add.w	r8, r8, #1
 8005492:	e7ec      	b.n	800546e <_printf_float+0x34e>
 8005494:	4613      	mov	r3, r2
 8005496:	4631      	mov	r1, r6
 8005498:	4642      	mov	r2, r8
 800549a:	4628      	mov	r0, r5
 800549c:	47b8      	blx	r7
 800549e:	3001      	adds	r0, #1
 80054a0:	d1c0      	bne.n	8005424 <_printf_float+0x304>
 80054a2:	e69e      	b.n	80051e2 <_printf_float+0xc2>
 80054a4:	2301      	movs	r3, #1
 80054a6:	4631      	mov	r1, r6
 80054a8:	4628      	mov	r0, r5
 80054aa:	9205      	str	r2, [sp, #20]
 80054ac:	47b8      	blx	r7
 80054ae:	3001      	adds	r0, #1
 80054b0:	f43f ae97 	beq.w	80051e2 <_printf_float+0xc2>
 80054b4:	9a05      	ldr	r2, [sp, #20]
 80054b6:	f10b 0b01 	add.w	fp, fp, #1
 80054ba:	e7b9      	b.n	8005430 <_printf_float+0x310>
 80054bc:	ee18 3a10 	vmov	r3, s16
 80054c0:	4652      	mov	r2, sl
 80054c2:	4631      	mov	r1, r6
 80054c4:	4628      	mov	r0, r5
 80054c6:	47b8      	blx	r7
 80054c8:	3001      	adds	r0, #1
 80054ca:	d1be      	bne.n	800544a <_printf_float+0x32a>
 80054cc:	e689      	b.n	80051e2 <_printf_float+0xc2>
 80054ce:	9a05      	ldr	r2, [sp, #20]
 80054d0:	464b      	mov	r3, r9
 80054d2:	4442      	add	r2, r8
 80054d4:	4631      	mov	r1, r6
 80054d6:	4628      	mov	r0, r5
 80054d8:	47b8      	blx	r7
 80054da:	3001      	adds	r0, #1
 80054dc:	d1c1      	bne.n	8005462 <_printf_float+0x342>
 80054de:	e680      	b.n	80051e2 <_printf_float+0xc2>
 80054e0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80054e2:	2a01      	cmp	r2, #1
 80054e4:	dc01      	bgt.n	80054ea <_printf_float+0x3ca>
 80054e6:	07db      	lsls	r3, r3, #31
 80054e8:	d538      	bpl.n	800555c <_printf_float+0x43c>
 80054ea:	2301      	movs	r3, #1
 80054ec:	4642      	mov	r2, r8
 80054ee:	4631      	mov	r1, r6
 80054f0:	4628      	mov	r0, r5
 80054f2:	47b8      	blx	r7
 80054f4:	3001      	adds	r0, #1
 80054f6:	f43f ae74 	beq.w	80051e2 <_printf_float+0xc2>
 80054fa:	ee18 3a10 	vmov	r3, s16
 80054fe:	4652      	mov	r2, sl
 8005500:	4631      	mov	r1, r6
 8005502:	4628      	mov	r0, r5
 8005504:	47b8      	blx	r7
 8005506:	3001      	adds	r0, #1
 8005508:	f43f ae6b 	beq.w	80051e2 <_printf_float+0xc2>
 800550c:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8005510:	2200      	movs	r2, #0
 8005512:	2300      	movs	r3, #0
 8005514:	f7fb fad8 	bl	8000ac8 <__aeabi_dcmpeq>
 8005518:	b9d8      	cbnz	r0, 8005552 <_printf_float+0x432>
 800551a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800551c:	f108 0201 	add.w	r2, r8, #1
 8005520:	3b01      	subs	r3, #1
 8005522:	4631      	mov	r1, r6
 8005524:	4628      	mov	r0, r5
 8005526:	47b8      	blx	r7
 8005528:	3001      	adds	r0, #1
 800552a:	d10e      	bne.n	800554a <_printf_float+0x42a>
 800552c:	e659      	b.n	80051e2 <_printf_float+0xc2>
 800552e:	2301      	movs	r3, #1
 8005530:	4652      	mov	r2, sl
 8005532:	4631      	mov	r1, r6
 8005534:	4628      	mov	r0, r5
 8005536:	47b8      	blx	r7
 8005538:	3001      	adds	r0, #1
 800553a:	f43f ae52 	beq.w	80051e2 <_printf_float+0xc2>
 800553e:	f108 0801 	add.w	r8, r8, #1
 8005542:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005544:	3b01      	subs	r3, #1
 8005546:	4543      	cmp	r3, r8
 8005548:	dcf1      	bgt.n	800552e <_printf_float+0x40e>
 800554a:	464b      	mov	r3, r9
 800554c:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8005550:	e6dc      	b.n	800530c <_printf_float+0x1ec>
 8005552:	f04f 0800 	mov.w	r8, #0
 8005556:	f104 0a1a 	add.w	sl, r4, #26
 800555a:	e7f2      	b.n	8005542 <_printf_float+0x422>
 800555c:	2301      	movs	r3, #1
 800555e:	4642      	mov	r2, r8
 8005560:	e7df      	b.n	8005522 <_printf_float+0x402>
 8005562:	2301      	movs	r3, #1
 8005564:	464a      	mov	r2, r9
 8005566:	4631      	mov	r1, r6
 8005568:	4628      	mov	r0, r5
 800556a:	47b8      	blx	r7
 800556c:	3001      	adds	r0, #1
 800556e:	f43f ae38 	beq.w	80051e2 <_printf_float+0xc2>
 8005572:	f108 0801 	add.w	r8, r8, #1
 8005576:	68e3      	ldr	r3, [r4, #12]
 8005578:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800557a:	1a5b      	subs	r3, r3, r1
 800557c:	4543      	cmp	r3, r8
 800557e:	dcf0      	bgt.n	8005562 <_printf_float+0x442>
 8005580:	e6fa      	b.n	8005378 <_printf_float+0x258>
 8005582:	f04f 0800 	mov.w	r8, #0
 8005586:	f104 0919 	add.w	r9, r4, #25
 800558a:	e7f4      	b.n	8005576 <_printf_float+0x456>

0800558c <_printf_common>:
 800558c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005590:	4616      	mov	r6, r2
 8005592:	4699      	mov	r9, r3
 8005594:	688a      	ldr	r2, [r1, #8]
 8005596:	690b      	ldr	r3, [r1, #16]
 8005598:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800559c:	4293      	cmp	r3, r2
 800559e:	bfb8      	it	lt
 80055a0:	4613      	movlt	r3, r2
 80055a2:	6033      	str	r3, [r6, #0]
 80055a4:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80055a8:	4607      	mov	r7, r0
 80055aa:	460c      	mov	r4, r1
 80055ac:	b10a      	cbz	r2, 80055b2 <_printf_common+0x26>
 80055ae:	3301      	adds	r3, #1
 80055b0:	6033      	str	r3, [r6, #0]
 80055b2:	6823      	ldr	r3, [r4, #0]
 80055b4:	0699      	lsls	r1, r3, #26
 80055b6:	bf42      	ittt	mi
 80055b8:	6833      	ldrmi	r3, [r6, #0]
 80055ba:	3302      	addmi	r3, #2
 80055bc:	6033      	strmi	r3, [r6, #0]
 80055be:	6825      	ldr	r5, [r4, #0]
 80055c0:	f015 0506 	ands.w	r5, r5, #6
 80055c4:	d106      	bne.n	80055d4 <_printf_common+0x48>
 80055c6:	f104 0a19 	add.w	sl, r4, #25
 80055ca:	68e3      	ldr	r3, [r4, #12]
 80055cc:	6832      	ldr	r2, [r6, #0]
 80055ce:	1a9b      	subs	r3, r3, r2
 80055d0:	42ab      	cmp	r3, r5
 80055d2:	dc26      	bgt.n	8005622 <_printf_common+0x96>
 80055d4:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80055d8:	1e13      	subs	r3, r2, #0
 80055da:	6822      	ldr	r2, [r4, #0]
 80055dc:	bf18      	it	ne
 80055de:	2301      	movne	r3, #1
 80055e0:	0692      	lsls	r2, r2, #26
 80055e2:	d42b      	bmi.n	800563c <_printf_common+0xb0>
 80055e4:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80055e8:	4649      	mov	r1, r9
 80055ea:	4638      	mov	r0, r7
 80055ec:	47c0      	blx	r8
 80055ee:	3001      	adds	r0, #1
 80055f0:	d01e      	beq.n	8005630 <_printf_common+0xa4>
 80055f2:	6823      	ldr	r3, [r4, #0]
 80055f4:	68e5      	ldr	r5, [r4, #12]
 80055f6:	6832      	ldr	r2, [r6, #0]
 80055f8:	f003 0306 	and.w	r3, r3, #6
 80055fc:	2b04      	cmp	r3, #4
 80055fe:	bf08      	it	eq
 8005600:	1aad      	subeq	r5, r5, r2
 8005602:	68a3      	ldr	r3, [r4, #8]
 8005604:	6922      	ldr	r2, [r4, #16]
 8005606:	bf0c      	ite	eq
 8005608:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800560c:	2500      	movne	r5, #0
 800560e:	4293      	cmp	r3, r2
 8005610:	bfc4      	itt	gt
 8005612:	1a9b      	subgt	r3, r3, r2
 8005614:	18ed      	addgt	r5, r5, r3
 8005616:	2600      	movs	r6, #0
 8005618:	341a      	adds	r4, #26
 800561a:	42b5      	cmp	r5, r6
 800561c:	d11a      	bne.n	8005654 <_printf_common+0xc8>
 800561e:	2000      	movs	r0, #0
 8005620:	e008      	b.n	8005634 <_printf_common+0xa8>
 8005622:	2301      	movs	r3, #1
 8005624:	4652      	mov	r2, sl
 8005626:	4649      	mov	r1, r9
 8005628:	4638      	mov	r0, r7
 800562a:	47c0      	blx	r8
 800562c:	3001      	adds	r0, #1
 800562e:	d103      	bne.n	8005638 <_printf_common+0xac>
 8005630:	f04f 30ff 	mov.w	r0, #4294967295
 8005634:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005638:	3501      	adds	r5, #1
 800563a:	e7c6      	b.n	80055ca <_printf_common+0x3e>
 800563c:	18e1      	adds	r1, r4, r3
 800563e:	1c5a      	adds	r2, r3, #1
 8005640:	2030      	movs	r0, #48	; 0x30
 8005642:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8005646:	4422      	add	r2, r4
 8005648:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800564c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8005650:	3302      	adds	r3, #2
 8005652:	e7c7      	b.n	80055e4 <_printf_common+0x58>
 8005654:	2301      	movs	r3, #1
 8005656:	4622      	mov	r2, r4
 8005658:	4649      	mov	r1, r9
 800565a:	4638      	mov	r0, r7
 800565c:	47c0      	blx	r8
 800565e:	3001      	adds	r0, #1
 8005660:	d0e6      	beq.n	8005630 <_printf_common+0xa4>
 8005662:	3601      	adds	r6, #1
 8005664:	e7d9      	b.n	800561a <_printf_common+0x8e>
	...

08005668 <_printf_i>:
 8005668:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800566c:	7e0f      	ldrb	r7, [r1, #24]
 800566e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8005670:	2f78      	cmp	r7, #120	; 0x78
 8005672:	4691      	mov	r9, r2
 8005674:	4680      	mov	r8, r0
 8005676:	460c      	mov	r4, r1
 8005678:	469a      	mov	sl, r3
 800567a:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800567e:	d807      	bhi.n	8005690 <_printf_i+0x28>
 8005680:	2f62      	cmp	r7, #98	; 0x62
 8005682:	d80a      	bhi.n	800569a <_printf_i+0x32>
 8005684:	2f00      	cmp	r7, #0
 8005686:	f000 80d8 	beq.w	800583a <_printf_i+0x1d2>
 800568a:	2f58      	cmp	r7, #88	; 0x58
 800568c:	f000 80a3 	beq.w	80057d6 <_printf_i+0x16e>
 8005690:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8005694:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8005698:	e03a      	b.n	8005710 <_printf_i+0xa8>
 800569a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800569e:	2b15      	cmp	r3, #21
 80056a0:	d8f6      	bhi.n	8005690 <_printf_i+0x28>
 80056a2:	a101      	add	r1, pc, #4	; (adr r1, 80056a8 <_printf_i+0x40>)
 80056a4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80056a8:	08005701 	.word	0x08005701
 80056ac:	08005715 	.word	0x08005715
 80056b0:	08005691 	.word	0x08005691
 80056b4:	08005691 	.word	0x08005691
 80056b8:	08005691 	.word	0x08005691
 80056bc:	08005691 	.word	0x08005691
 80056c0:	08005715 	.word	0x08005715
 80056c4:	08005691 	.word	0x08005691
 80056c8:	08005691 	.word	0x08005691
 80056cc:	08005691 	.word	0x08005691
 80056d0:	08005691 	.word	0x08005691
 80056d4:	08005821 	.word	0x08005821
 80056d8:	08005745 	.word	0x08005745
 80056dc:	08005803 	.word	0x08005803
 80056e0:	08005691 	.word	0x08005691
 80056e4:	08005691 	.word	0x08005691
 80056e8:	08005843 	.word	0x08005843
 80056ec:	08005691 	.word	0x08005691
 80056f0:	08005745 	.word	0x08005745
 80056f4:	08005691 	.word	0x08005691
 80056f8:	08005691 	.word	0x08005691
 80056fc:	0800580b 	.word	0x0800580b
 8005700:	682b      	ldr	r3, [r5, #0]
 8005702:	1d1a      	adds	r2, r3, #4
 8005704:	681b      	ldr	r3, [r3, #0]
 8005706:	602a      	str	r2, [r5, #0]
 8005708:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800570c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8005710:	2301      	movs	r3, #1
 8005712:	e0a3      	b.n	800585c <_printf_i+0x1f4>
 8005714:	6820      	ldr	r0, [r4, #0]
 8005716:	6829      	ldr	r1, [r5, #0]
 8005718:	0606      	lsls	r6, r0, #24
 800571a:	f101 0304 	add.w	r3, r1, #4
 800571e:	d50a      	bpl.n	8005736 <_printf_i+0xce>
 8005720:	680e      	ldr	r6, [r1, #0]
 8005722:	602b      	str	r3, [r5, #0]
 8005724:	2e00      	cmp	r6, #0
 8005726:	da03      	bge.n	8005730 <_printf_i+0xc8>
 8005728:	232d      	movs	r3, #45	; 0x2d
 800572a:	4276      	negs	r6, r6
 800572c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8005730:	485e      	ldr	r0, [pc, #376]	; (80058ac <_printf_i+0x244>)
 8005732:	230a      	movs	r3, #10
 8005734:	e019      	b.n	800576a <_printf_i+0x102>
 8005736:	680e      	ldr	r6, [r1, #0]
 8005738:	602b      	str	r3, [r5, #0]
 800573a:	f010 0f40 	tst.w	r0, #64	; 0x40
 800573e:	bf18      	it	ne
 8005740:	b236      	sxthne	r6, r6
 8005742:	e7ef      	b.n	8005724 <_printf_i+0xbc>
 8005744:	682b      	ldr	r3, [r5, #0]
 8005746:	6820      	ldr	r0, [r4, #0]
 8005748:	1d19      	adds	r1, r3, #4
 800574a:	6029      	str	r1, [r5, #0]
 800574c:	0601      	lsls	r1, r0, #24
 800574e:	d501      	bpl.n	8005754 <_printf_i+0xec>
 8005750:	681e      	ldr	r6, [r3, #0]
 8005752:	e002      	b.n	800575a <_printf_i+0xf2>
 8005754:	0646      	lsls	r6, r0, #25
 8005756:	d5fb      	bpl.n	8005750 <_printf_i+0xe8>
 8005758:	881e      	ldrh	r6, [r3, #0]
 800575a:	4854      	ldr	r0, [pc, #336]	; (80058ac <_printf_i+0x244>)
 800575c:	2f6f      	cmp	r7, #111	; 0x6f
 800575e:	bf0c      	ite	eq
 8005760:	2308      	moveq	r3, #8
 8005762:	230a      	movne	r3, #10
 8005764:	2100      	movs	r1, #0
 8005766:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800576a:	6865      	ldr	r5, [r4, #4]
 800576c:	60a5      	str	r5, [r4, #8]
 800576e:	2d00      	cmp	r5, #0
 8005770:	bfa2      	ittt	ge
 8005772:	6821      	ldrge	r1, [r4, #0]
 8005774:	f021 0104 	bicge.w	r1, r1, #4
 8005778:	6021      	strge	r1, [r4, #0]
 800577a:	b90e      	cbnz	r6, 8005780 <_printf_i+0x118>
 800577c:	2d00      	cmp	r5, #0
 800577e:	d04d      	beq.n	800581c <_printf_i+0x1b4>
 8005780:	4615      	mov	r5, r2
 8005782:	fbb6 f1f3 	udiv	r1, r6, r3
 8005786:	fb03 6711 	mls	r7, r3, r1, r6
 800578a:	5dc7      	ldrb	r7, [r0, r7]
 800578c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8005790:	4637      	mov	r7, r6
 8005792:	42bb      	cmp	r3, r7
 8005794:	460e      	mov	r6, r1
 8005796:	d9f4      	bls.n	8005782 <_printf_i+0x11a>
 8005798:	2b08      	cmp	r3, #8
 800579a:	d10b      	bne.n	80057b4 <_printf_i+0x14c>
 800579c:	6823      	ldr	r3, [r4, #0]
 800579e:	07de      	lsls	r6, r3, #31
 80057a0:	d508      	bpl.n	80057b4 <_printf_i+0x14c>
 80057a2:	6923      	ldr	r3, [r4, #16]
 80057a4:	6861      	ldr	r1, [r4, #4]
 80057a6:	4299      	cmp	r1, r3
 80057a8:	bfde      	ittt	le
 80057aa:	2330      	movle	r3, #48	; 0x30
 80057ac:	f805 3c01 	strble.w	r3, [r5, #-1]
 80057b0:	f105 35ff 	addle.w	r5, r5, #4294967295
 80057b4:	1b52      	subs	r2, r2, r5
 80057b6:	6122      	str	r2, [r4, #16]
 80057b8:	f8cd a000 	str.w	sl, [sp]
 80057bc:	464b      	mov	r3, r9
 80057be:	aa03      	add	r2, sp, #12
 80057c0:	4621      	mov	r1, r4
 80057c2:	4640      	mov	r0, r8
 80057c4:	f7ff fee2 	bl	800558c <_printf_common>
 80057c8:	3001      	adds	r0, #1
 80057ca:	d14c      	bne.n	8005866 <_printf_i+0x1fe>
 80057cc:	f04f 30ff 	mov.w	r0, #4294967295
 80057d0:	b004      	add	sp, #16
 80057d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80057d6:	4835      	ldr	r0, [pc, #212]	; (80058ac <_printf_i+0x244>)
 80057d8:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 80057dc:	6829      	ldr	r1, [r5, #0]
 80057de:	6823      	ldr	r3, [r4, #0]
 80057e0:	f851 6b04 	ldr.w	r6, [r1], #4
 80057e4:	6029      	str	r1, [r5, #0]
 80057e6:	061d      	lsls	r5, r3, #24
 80057e8:	d514      	bpl.n	8005814 <_printf_i+0x1ac>
 80057ea:	07df      	lsls	r7, r3, #31
 80057ec:	bf44      	itt	mi
 80057ee:	f043 0320 	orrmi.w	r3, r3, #32
 80057f2:	6023      	strmi	r3, [r4, #0]
 80057f4:	b91e      	cbnz	r6, 80057fe <_printf_i+0x196>
 80057f6:	6823      	ldr	r3, [r4, #0]
 80057f8:	f023 0320 	bic.w	r3, r3, #32
 80057fc:	6023      	str	r3, [r4, #0]
 80057fe:	2310      	movs	r3, #16
 8005800:	e7b0      	b.n	8005764 <_printf_i+0xfc>
 8005802:	6823      	ldr	r3, [r4, #0]
 8005804:	f043 0320 	orr.w	r3, r3, #32
 8005808:	6023      	str	r3, [r4, #0]
 800580a:	2378      	movs	r3, #120	; 0x78
 800580c:	4828      	ldr	r0, [pc, #160]	; (80058b0 <_printf_i+0x248>)
 800580e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8005812:	e7e3      	b.n	80057dc <_printf_i+0x174>
 8005814:	0659      	lsls	r1, r3, #25
 8005816:	bf48      	it	mi
 8005818:	b2b6      	uxthmi	r6, r6
 800581a:	e7e6      	b.n	80057ea <_printf_i+0x182>
 800581c:	4615      	mov	r5, r2
 800581e:	e7bb      	b.n	8005798 <_printf_i+0x130>
 8005820:	682b      	ldr	r3, [r5, #0]
 8005822:	6826      	ldr	r6, [r4, #0]
 8005824:	6961      	ldr	r1, [r4, #20]
 8005826:	1d18      	adds	r0, r3, #4
 8005828:	6028      	str	r0, [r5, #0]
 800582a:	0635      	lsls	r5, r6, #24
 800582c:	681b      	ldr	r3, [r3, #0]
 800582e:	d501      	bpl.n	8005834 <_printf_i+0x1cc>
 8005830:	6019      	str	r1, [r3, #0]
 8005832:	e002      	b.n	800583a <_printf_i+0x1d2>
 8005834:	0670      	lsls	r0, r6, #25
 8005836:	d5fb      	bpl.n	8005830 <_printf_i+0x1c8>
 8005838:	8019      	strh	r1, [r3, #0]
 800583a:	2300      	movs	r3, #0
 800583c:	6123      	str	r3, [r4, #16]
 800583e:	4615      	mov	r5, r2
 8005840:	e7ba      	b.n	80057b8 <_printf_i+0x150>
 8005842:	682b      	ldr	r3, [r5, #0]
 8005844:	1d1a      	adds	r2, r3, #4
 8005846:	602a      	str	r2, [r5, #0]
 8005848:	681d      	ldr	r5, [r3, #0]
 800584a:	6862      	ldr	r2, [r4, #4]
 800584c:	2100      	movs	r1, #0
 800584e:	4628      	mov	r0, r5
 8005850:	f7fa fcc6 	bl	80001e0 <memchr>
 8005854:	b108      	cbz	r0, 800585a <_printf_i+0x1f2>
 8005856:	1b40      	subs	r0, r0, r5
 8005858:	6060      	str	r0, [r4, #4]
 800585a:	6863      	ldr	r3, [r4, #4]
 800585c:	6123      	str	r3, [r4, #16]
 800585e:	2300      	movs	r3, #0
 8005860:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8005864:	e7a8      	b.n	80057b8 <_printf_i+0x150>
 8005866:	6923      	ldr	r3, [r4, #16]
 8005868:	462a      	mov	r2, r5
 800586a:	4649      	mov	r1, r9
 800586c:	4640      	mov	r0, r8
 800586e:	47d0      	blx	sl
 8005870:	3001      	adds	r0, #1
 8005872:	d0ab      	beq.n	80057cc <_printf_i+0x164>
 8005874:	6823      	ldr	r3, [r4, #0]
 8005876:	079b      	lsls	r3, r3, #30
 8005878:	d413      	bmi.n	80058a2 <_printf_i+0x23a>
 800587a:	68e0      	ldr	r0, [r4, #12]
 800587c:	9b03      	ldr	r3, [sp, #12]
 800587e:	4298      	cmp	r0, r3
 8005880:	bfb8      	it	lt
 8005882:	4618      	movlt	r0, r3
 8005884:	e7a4      	b.n	80057d0 <_printf_i+0x168>
 8005886:	2301      	movs	r3, #1
 8005888:	4632      	mov	r2, r6
 800588a:	4649      	mov	r1, r9
 800588c:	4640      	mov	r0, r8
 800588e:	47d0      	blx	sl
 8005890:	3001      	adds	r0, #1
 8005892:	d09b      	beq.n	80057cc <_printf_i+0x164>
 8005894:	3501      	adds	r5, #1
 8005896:	68e3      	ldr	r3, [r4, #12]
 8005898:	9903      	ldr	r1, [sp, #12]
 800589a:	1a5b      	subs	r3, r3, r1
 800589c:	42ab      	cmp	r3, r5
 800589e:	dcf2      	bgt.n	8005886 <_printf_i+0x21e>
 80058a0:	e7eb      	b.n	800587a <_printf_i+0x212>
 80058a2:	2500      	movs	r5, #0
 80058a4:	f104 0619 	add.w	r6, r4, #25
 80058a8:	e7f5      	b.n	8005896 <_printf_i+0x22e>
 80058aa:	bf00      	nop
 80058ac:	08007ed2 	.word	0x08007ed2
 80058b0:	08007ee3 	.word	0x08007ee3

080058b4 <siprintf>:
 80058b4:	b40e      	push	{r1, r2, r3}
 80058b6:	b500      	push	{lr}
 80058b8:	b09c      	sub	sp, #112	; 0x70
 80058ba:	ab1d      	add	r3, sp, #116	; 0x74
 80058bc:	9002      	str	r0, [sp, #8]
 80058be:	9006      	str	r0, [sp, #24]
 80058c0:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 80058c4:	4809      	ldr	r0, [pc, #36]	; (80058ec <siprintf+0x38>)
 80058c6:	9107      	str	r1, [sp, #28]
 80058c8:	9104      	str	r1, [sp, #16]
 80058ca:	4909      	ldr	r1, [pc, #36]	; (80058f0 <siprintf+0x3c>)
 80058cc:	f853 2b04 	ldr.w	r2, [r3], #4
 80058d0:	9105      	str	r1, [sp, #20]
 80058d2:	6800      	ldr	r0, [r0, #0]
 80058d4:	9301      	str	r3, [sp, #4]
 80058d6:	a902      	add	r1, sp, #8
 80058d8:	f001 fb78 	bl	8006fcc <_svfiprintf_r>
 80058dc:	9b02      	ldr	r3, [sp, #8]
 80058de:	2200      	movs	r2, #0
 80058e0:	701a      	strb	r2, [r3, #0]
 80058e2:	b01c      	add	sp, #112	; 0x70
 80058e4:	f85d eb04 	ldr.w	lr, [sp], #4
 80058e8:	b003      	add	sp, #12
 80058ea:	4770      	bx	lr
 80058ec:	20000010 	.word	0x20000010
 80058f0:	ffff0208 	.word	0xffff0208

080058f4 <quorem>:
 80058f4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80058f8:	6903      	ldr	r3, [r0, #16]
 80058fa:	690c      	ldr	r4, [r1, #16]
 80058fc:	42a3      	cmp	r3, r4
 80058fe:	4607      	mov	r7, r0
 8005900:	f2c0 8081 	blt.w	8005a06 <quorem+0x112>
 8005904:	3c01      	subs	r4, #1
 8005906:	f101 0814 	add.w	r8, r1, #20
 800590a:	f100 0514 	add.w	r5, r0, #20
 800590e:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8005912:	9301      	str	r3, [sp, #4]
 8005914:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8005918:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800591c:	3301      	adds	r3, #1
 800591e:	429a      	cmp	r2, r3
 8005920:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 8005924:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8005928:	fbb2 f6f3 	udiv	r6, r2, r3
 800592c:	d331      	bcc.n	8005992 <quorem+0x9e>
 800592e:	f04f 0e00 	mov.w	lr, #0
 8005932:	4640      	mov	r0, r8
 8005934:	46ac      	mov	ip, r5
 8005936:	46f2      	mov	sl, lr
 8005938:	f850 2b04 	ldr.w	r2, [r0], #4
 800593c:	b293      	uxth	r3, r2
 800593e:	fb06 e303 	mla	r3, r6, r3, lr
 8005942:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 8005946:	b29b      	uxth	r3, r3
 8005948:	ebaa 0303 	sub.w	r3, sl, r3
 800594c:	f8dc a000 	ldr.w	sl, [ip]
 8005950:	0c12      	lsrs	r2, r2, #16
 8005952:	fa13 f38a 	uxtah	r3, r3, sl
 8005956:	fb06 e202 	mla	r2, r6, r2, lr
 800595a:	9300      	str	r3, [sp, #0]
 800595c:	9b00      	ldr	r3, [sp, #0]
 800595e:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 8005962:	b292      	uxth	r2, r2
 8005964:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 8005968:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800596c:	f8bd 3000 	ldrh.w	r3, [sp]
 8005970:	4581      	cmp	r9, r0
 8005972:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8005976:	f84c 3b04 	str.w	r3, [ip], #4
 800597a:	ea4f 4a22 	mov.w	sl, r2, asr #16
 800597e:	d2db      	bcs.n	8005938 <quorem+0x44>
 8005980:	f855 300b 	ldr.w	r3, [r5, fp]
 8005984:	b92b      	cbnz	r3, 8005992 <quorem+0x9e>
 8005986:	9b01      	ldr	r3, [sp, #4]
 8005988:	3b04      	subs	r3, #4
 800598a:	429d      	cmp	r5, r3
 800598c:	461a      	mov	r2, r3
 800598e:	d32e      	bcc.n	80059ee <quorem+0xfa>
 8005990:	613c      	str	r4, [r7, #16]
 8005992:	4638      	mov	r0, r7
 8005994:	f001 f8c6 	bl	8006b24 <__mcmp>
 8005998:	2800      	cmp	r0, #0
 800599a:	db24      	blt.n	80059e6 <quorem+0xf2>
 800599c:	3601      	adds	r6, #1
 800599e:	4628      	mov	r0, r5
 80059a0:	f04f 0c00 	mov.w	ip, #0
 80059a4:	f858 2b04 	ldr.w	r2, [r8], #4
 80059a8:	f8d0 e000 	ldr.w	lr, [r0]
 80059ac:	b293      	uxth	r3, r2
 80059ae:	ebac 0303 	sub.w	r3, ip, r3
 80059b2:	0c12      	lsrs	r2, r2, #16
 80059b4:	fa13 f38e 	uxtah	r3, r3, lr
 80059b8:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 80059bc:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80059c0:	b29b      	uxth	r3, r3
 80059c2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80059c6:	45c1      	cmp	r9, r8
 80059c8:	f840 3b04 	str.w	r3, [r0], #4
 80059cc:	ea4f 4c22 	mov.w	ip, r2, asr #16
 80059d0:	d2e8      	bcs.n	80059a4 <quorem+0xb0>
 80059d2:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80059d6:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80059da:	b922      	cbnz	r2, 80059e6 <quorem+0xf2>
 80059dc:	3b04      	subs	r3, #4
 80059de:	429d      	cmp	r5, r3
 80059e0:	461a      	mov	r2, r3
 80059e2:	d30a      	bcc.n	80059fa <quorem+0x106>
 80059e4:	613c      	str	r4, [r7, #16]
 80059e6:	4630      	mov	r0, r6
 80059e8:	b003      	add	sp, #12
 80059ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80059ee:	6812      	ldr	r2, [r2, #0]
 80059f0:	3b04      	subs	r3, #4
 80059f2:	2a00      	cmp	r2, #0
 80059f4:	d1cc      	bne.n	8005990 <quorem+0x9c>
 80059f6:	3c01      	subs	r4, #1
 80059f8:	e7c7      	b.n	800598a <quorem+0x96>
 80059fa:	6812      	ldr	r2, [r2, #0]
 80059fc:	3b04      	subs	r3, #4
 80059fe:	2a00      	cmp	r2, #0
 8005a00:	d1f0      	bne.n	80059e4 <quorem+0xf0>
 8005a02:	3c01      	subs	r4, #1
 8005a04:	e7eb      	b.n	80059de <quorem+0xea>
 8005a06:	2000      	movs	r0, #0
 8005a08:	e7ee      	b.n	80059e8 <quorem+0xf4>
 8005a0a:	0000      	movs	r0, r0
 8005a0c:	0000      	movs	r0, r0
	...

08005a10 <_dtoa_r>:
 8005a10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005a14:	ed2d 8b04 	vpush	{d8-d9}
 8005a18:	ec57 6b10 	vmov	r6, r7, d0
 8005a1c:	b093      	sub	sp, #76	; 0x4c
 8005a1e:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8005a20:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 8005a24:	9106      	str	r1, [sp, #24]
 8005a26:	ee10 aa10 	vmov	sl, s0
 8005a2a:	4604      	mov	r4, r0
 8005a2c:	9209      	str	r2, [sp, #36]	; 0x24
 8005a2e:	930c      	str	r3, [sp, #48]	; 0x30
 8005a30:	46bb      	mov	fp, r7
 8005a32:	b975      	cbnz	r5, 8005a52 <_dtoa_r+0x42>
 8005a34:	2010      	movs	r0, #16
 8005a36:	f000 fddd 	bl	80065f4 <malloc>
 8005a3a:	4602      	mov	r2, r0
 8005a3c:	6260      	str	r0, [r4, #36]	; 0x24
 8005a3e:	b920      	cbnz	r0, 8005a4a <_dtoa_r+0x3a>
 8005a40:	4ba7      	ldr	r3, [pc, #668]	; (8005ce0 <_dtoa_r+0x2d0>)
 8005a42:	21ea      	movs	r1, #234	; 0xea
 8005a44:	48a7      	ldr	r0, [pc, #668]	; (8005ce4 <_dtoa_r+0x2d4>)
 8005a46:	f001 fbd1 	bl	80071ec <__assert_func>
 8005a4a:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8005a4e:	6005      	str	r5, [r0, #0]
 8005a50:	60c5      	str	r5, [r0, #12]
 8005a52:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005a54:	6819      	ldr	r1, [r3, #0]
 8005a56:	b151      	cbz	r1, 8005a6e <_dtoa_r+0x5e>
 8005a58:	685a      	ldr	r2, [r3, #4]
 8005a5a:	604a      	str	r2, [r1, #4]
 8005a5c:	2301      	movs	r3, #1
 8005a5e:	4093      	lsls	r3, r2
 8005a60:	608b      	str	r3, [r1, #8]
 8005a62:	4620      	mov	r0, r4
 8005a64:	f000 fe1c 	bl	80066a0 <_Bfree>
 8005a68:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005a6a:	2200      	movs	r2, #0
 8005a6c:	601a      	str	r2, [r3, #0]
 8005a6e:	1e3b      	subs	r3, r7, #0
 8005a70:	bfaa      	itet	ge
 8005a72:	2300      	movge	r3, #0
 8005a74:	f023 4b00 	biclt.w	fp, r3, #2147483648	; 0x80000000
 8005a78:	f8c8 3000 	strge.w	r3, [r8]
 8005a7c:	4b9a      	ldr	r3, [pc, #616]	; (8005ce8 <_dtoa_r+0x2d8>)
 8005a7e:	bfbc      	itt	lt
 8005a80:	2201      	movlt	r2, #1
 8005a82:	f8c8 2000 	strlt.w	r2, [r8]
 8005a86:	ea33 030b 	bics.w	r3, r3, fp
 8005a8a:	d11b      	bne.n	8005ac4 <_dtoa_r+0xb4>
 8005a8c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8005a8e:	f242 730f 	movw	r3, #9999	; 0x270f
 8005a92:	6013      	str	r3, [r2, #0]
 8005a94:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8005a98:	4333      	orrs	r3, r6
 8005a9a:	f000 8592 	beq.w	80065c2 <_dtoa_r+0xbb2>
 8005a9e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8005aa0:	b963      	cbnz	r3, 8005abc <_dtoa_r+0xac>
 8005aa2:	4b92      	ldr	r3, [pc, #584]	; (8005cec <_dtoa_r+0x2dc>)
 8005aa4:	e022      	b.n	8005aec <_dtoa_r+0xdc>
 8005aa6:	4b92      	ldr	r3, [pc, #584]	; (8005cf0 <_dtoa_r+0x2e0>)
 8005aa8:	9301      	str	r3, [sp, #4]
 8005aaa:	3308      	adds	r3, #8
 8005aac:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8005aae:	6013      	str	r3, [r2, #0]
 8005ab0:	9801      	ldr	r0, [sp, #4]
 8005ab2:	b013      	add	sp, #76	; 0x4c
 8005ab4:	ecbd 8b04 	vpop	{d8-d9}
 8005ab8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005abc:	4b8b      	ldr	r3, [pc, #556]	; (8005cec <_dtoa_r+0x2dc>)
 8005abe:	9301      	str	r3, [sp, #4]
 8005ac0:	3303      	adds	r3, #3
 8005ac2:	e7f3      	b.n	8005aac <_dtoa_r+0x9c>
 8005ac4:	2200      	movs	r2, #0
 8005ac6:	2300      	movs	r3, #0
 8005ac8:	4650      	mov	r0, sl
 8005aca:	4659      	mov	r1, fp
 8005acc:	f7fa fffc 	bl	8000ac8 <__aeabi_dcmpeq>
 8005ad0:	ec4b ab19 	vmov	d9, sl, fp
 8005ad4:	4680      	mov	r8, r0
 8005ad6:	b158      	cbz	r0, 8005af0 <_dtoa_r+0xe0>
 8005ad8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8005ada:	2301      	movs	r3, #1
 8005adc:	6013      	str	r3, [r2, #0]
 8005ade:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8005ae0:	2b00      	cmp	r3, #0
 8005ae2:	f000 856b 	beq.w	80065bc <_dtoa_r+0xbac>
 8005ae6:	4883      	ldr	r0, [pc, #524]	; (8005cf4 <_dtoa_r+0x2e4>)
 8005ae8:	6018      	str	r0, [r3, #0]
 8005aea:	1e43      	subs	r3, r0, #1
 8005aec:	9301      	str	r3, [sp, #4]
 8005aee:	e7df      	b.n	8005ab0 <_dtoa_r+0xa0>
 8005af0:	ec4b ab10 	vmov	d0, sl, fp
 8005af4:	aa10      	add	r2, sp, #64	; 0x40
 8005af6:	a911      	add	r1, sp, #68	; 0x44
 8005af8:	4620      	mov	r0, r4
 8005afa:	f001 f8b9 	bl	8006c70 <__d2b>
 8005afe:	f3cb 550a 	ubfx	r5, fp, #20, #11
 8005b02:	ee08 0a10 	vmov	s16, r0
 8005b06:	2d00      	cmp	r5, #0
 8005b08:	f000 8084 	beq.w	8005c14 <_dtoa_r+0x204>
 8005b0c:	ee19 3a90 	vmov	r3, s19
 8005b10:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8005b14:	f043 577f 	orr.w	r7, r3, #1069547520	; 0x3fc00000
 8005b18:	4656      	mov	r6, sl
 8005b1a:	f447 1740 	orr.w	r7, r7, #3145728	; 0x300000
 8005b1e:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 8005b22:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8005b26:	4b74      	ldr	r3, [pc, #464]	; (8005cf8 <_dtoa_r+0x2e8>)
 8005b28:	2200      	movs	r2, #0
 8005b2a:	4630      	mov	r0, r6
 8005b2c:	4639      	mov	r1, r7
 8005b2e:	f7fa fbab 	bl	8000288 <__aeabi_dsub>
 8005b32:	a365      	add	r3, pc, #404	; (adr r3, 8005cc8 <_dtoa_r+0x2b8>)
 8005b34:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005b38:	f7fa fd5e 	bl	80005f8 <__aeabi_dmul>
 8005b3c:	a364      	add	r3, pc, #400	; (adr r3, 8005cd0 <_dtoa_r+0x2c0>)
 8005b3e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005b42:	f7fa fba3 	bl	800028c <__adddf3>
 8005b46:	4606      	mov	r6, r0
 8005b48:	4628      	mov	r0, r5
 8005b4a:	460f      	mov	r7, r1
 8005b4c:	f7fa fcea 	bl	8000524 <__aeabi_i2d>
 8005b50:	a361      	add	r3, pc, #388	; (adr r3, 8005cd8 <_dtoa_r+0x2c8>)
 8005b52:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005b56:	f7fa fd4f 	bl	80005f8 <__aeabi_dmul>
 8005b5a:	4602      	mov	r2, r0
 8005b5c:	460b      	mov	r3, r1
 8005b5e:	4630      	mov	r0, r6
 8005b60:	4639      	mov	r1, r7
 8005b62:	f7fa fb93 	bl	800028c <__adddf3>
 8005b66:	4606      	mov	r6, r0
 8005b68:	460f      	mov	r7, r1
 8005b6a:	f7fa fff5 	bl	8000b58 <__aeabi_d2iz>
 8005b6e:	2200      	movs	r2, #0
 8005b70:	9000      	str	r0, [sp, #0]
 8005b72:	2300      	movs	r3, #0
 8005b74:	4630      	mov	r0, r6
 8005b76:	4639      	mov	r1, r7
 8005b78:	f7fa ffb0 	bl	8000adc <__aeabi_dcmplt>
 8005b7c:	b150      	cbz	r0, 8005b94 <_dtoa_r+0x184>
 8005b7e:	9800      	ldr	r0, [sp, #0]
 8005b80:	f7fa fcd0 	bl	8000524 <__aeabi_i2d>
 8005b84:	4632      	mov	r2, r6
 8005b86:	463b      	mov	r3, r7
 8005b88:	f7fa ff9e 	bl	8000ac8 <__aeabi_dcmpeq>
 8005b8c:	b910      	cbnz	r0, 8005b94 <_dtoa_r+0x184>
 8005b8e:	9b00      	ldr	r3, [sp, #0]
 8005b90:	3b01      	subs	r3, #1
 8005b92:	9300      	str	r3, [sp, #0]
 8005b94:	9b00      	ldr	r3, [sp, #0]
 8005b96:	2b16      	cmp	r3, #22
 8005b98:	d85a      	bhi.n	8005c50 <_dtoa_r+0x240>
 8005b9a:	9a00      	ldr	r2, [sp, #0]
 8005b9c:	4b57      	ldr	r3, [pc, #348]	; (8005cfc <_dtoa_r+0x2ec>)
 8005b9e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8005ba2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005ba6:	ec51 0b19 	vmov	r0, r1, d9
 8005baa:	f7fa ff97 	bl	8000adc <__aeabi_dcmplt>
 8005bae:	2800      	cmp	r0, #0
 8005bb0:	d050      	beq.n	8005c54 <_dtoa_r+0x244>
 8005bb2:	9b00      	ldr	r3, [sp, #0]
 8005bb4:	3b01      	subs	r3, #1
 8005bb6:	9300      	str	r3, [sp, #0]
 8005bb8:	2300      	movs	r3, #0
 8005bba:	930b      	str	r3, [sp, #44]	; 0x2c
 8005bbc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8005bbe:	1b5d      	subs	r5, r3, r5
 8005bc0:	1e6b      	subs	r3, r5, #1
 8005bc2:	9305      	str	r3, [sp, #20]
 8005bc4:	bf45      	ittet	mi
 8005bc6:	f1c5 0301 	rsbmi	r3, r5, #1
 8005bca:	9304      	strmi	r3, [sp, #16]
 8005bcc:	2300      	movpl	r3, #0
 8005bce:	2300      	movmi	r3, #0
 8005bd0:	bf4c      	ite	mi
 8005bd2:	9305      	strmi	r3, [sp, #20]
 8005bd4:	9304      	strpl	r3, [sp, #16]
 8005bd6:	9b00      	ldr	r3, [sp, #0]
 8005bd8:	2b00      	cmp	r3, #0
 8005bda:	db3d      	blt.n	8005c58 <_dtoa_r+0x248>
 8005bdc:	9b05      	ldr	r3, [sp, #20]
 8005bde:	9a00      	ldr	r2, [sp, #0]
 8005be0:	920a      	str	r2, [sp, #40]	; 0x28
 8005be2:	4413      	add	r3, r2
 8005be4:	9305      	str	r3, [sp, #20]
 8005be6:	2300      	movs	r3, #0
 8005be8:	9307      	str	r3, [sp, #28]
 8005bea:	9b06      	ldr	r3, [sp, #24]
 8005bec:	2b09      	cmp	r3, #9
 8005bee:	f200 8089 	bhi.w	8005d04 <_dtoa_r+0x2f4>
 8005bf2:	2b05      	cmp	r3, #5
 8005bf4:	bfc4      	itt	gt
 8005bf6:	3b04      	subgt	r3, #4
 8005bf8:	9306      	strgt	r3, [sp, #24]
 8005bfa:	9b06      	ldr	r3, [sp, #24]
 8005bfc:	f1a3 0302 	sub.w	r3, r3, #2
 8005c00:	bfcc      	ite	gt
 8005c02:	2500      	movgt	r5, #0
 8005c04:	2501      	movle	r5, #1
 8005c06:	2b03      	cmp	r3, #3
 8005c08:	f200 8087 	bhi.w	8005d1a <_dtoa_r+0x30a>
 8005c0c:	e8df f003 	tbb	[pc, r3]
 8005c10:	59383a2d 	.word	0x59383a2d
 8005c14:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 8005c18:	441d      	add	r5, r3
 8005c1a:	f205 4332 	addw	r3, r5, #1074	; 0x432
 8005c1e:	2b20      	cmp	r3, #32
 8005c20:	bfc1      	itttt	gt
 8005c22:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 8005c26:	f205 4012 	addwgt	r0, r5, #1042	; 0x412
 8005c2a:	fa0b f303 	lslgt.w	r3, fp, r3
 8005c2e:	fa26 f000 	lsrgt.w	r0, r6, r0
 8005c32:	bfda      	itte	le
 8005c34:	f1c3 0320 	rsble	r3, r3, #32
 8005c38:	fa06 f003 	lslle.w	r0, r6, r3
 8005c3c:	4318      	orrgt	r0, r3
 8005c3e:	f7fa fc61 	bl	8000504 <__aeabi_ui2d>
 8005c42:	2301      	movs	r3, #1
 8005c44:	4606      	mov	r6, r0
 8005c46:	f1a1 77f8 	sub.w	r7, r1, #32505856	; 0x1f00000
 8005c4a:	3d01      	subs	r5, #1
 8005c4c:	930e      	str	r3, [sp, #56]	; 0x38
 8005c4e:	e76a      	b.n	8005b26 <_dtoa_r+0x116>
 8005c50:	2301      	movs	r3, #1
 8005c52:	e7b2      	b.n	8005bba <_dtoa_r+0x1aa>
 8005c54:	900b      	str	r0, [sp, #44]	; 0x2c
 8005c56:	e7b1      	b.n	8005bbc <_dtoa_r+0x1ac>
 8005c58:	9b04      	ldr	r3, [sp, #16]
 8005c5a:	9a00      	ldr	r2, [sp, #0]
 8005c5c:	1a9b      	subs	r3, r3, r2
 8005c5e:	9304      	str	r3, [sp, #16]
 8005c60:	4253      	negs	r3, r2
 8005c62:	9307      	str	r3, [sp, #28]
 8005c64:	2300      	movs	r3, #0
 8005c66:	930a      	str	r3, [sp, #40]	; 0x28
 8005c68:	e7bf      	b.n	8005bea <_dtoa_r+0x1da>
 8005c6a:	2300      	movs	r3, #0
 8005c6c:	9308      	str	r3, [sp, #32]
 8005c6e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005c70:	2b00      	cmp	r3, #0
 8005c72:	dc55      	bgt.n	8005d20 <_dtoa_r+0x310>
 8005c74:	2301      	movs	r3, #1
 8005c76:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8005c7a:	461a      	mov	r2, r3
 8005c7c:	9209      	str	r2, [sp, #36]	; 0x24
 8005c7e:	e00c      	b.n	8005c9a <_dtoa_r+0x28a>
 8005c80:	2301      	movs	r3, #1
 8005c82:	e7f3      	b.n	8005c6c <_dtoa_r+0x25c>
 8005c84:	2300      	movs	r3, #0
 8005c86:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8005c88:	9308      	str	r3, [sp, #32]
 8005c8a:	9b00      	ldr	r3, [sp, #0]
 8005c8c:	4413      	add	r3, r2
 8005c8e:	9302      	str	r3, [sp, #8]
 8005c90:	3301      	adds	r3, #1
 8005c92:	2b01      	cmp	r3, #1
 8005c94:	9303      	str	r3, [sp, #12]
 8005c96:	bfb8      	it	lt
 8005c98:	2301      	movlt	r3, #1
 8005c9a:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8005c9c:	2200      	movs	r2, #0
 8005c9e:	6042      	str	r2, [r0, #4]
 8005ca0:	2204      	movs	r2, #4
 8005ca2:	f102 0614 	add.w	r6, r2, #20
 8005ca6:	429e      	cmp	r6, r3
 8005ca8:	6841      	ldr	r1, [r0, #4]
 8005caa:	d93d      	bls.n	8005d28 <_dtoa_r+0x318>
 8005cac:	4620      	mov	r0, r4
 8005cae:	f000 fcb7 	bl	8006620 <_Balloc>
 8005cb2:	9001      	str	r0, [sp, #4]
 8005cb4:	2800      	cmp	r0, #0
 8005cb6:	d13b      	bne.n	8005d30 <_dtoa_r+0x320>
 8005cb8:	4b11      	ldr	r3, [pc, #68]	; (8005d00 <_dtoa_r+0x2f0>)
 8005cba:	4602      	mov	r2, r0
 8005cbc:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 8005cc0:	e6c0      	b.n	8005a44 <_dtoa_r+0x34>
 8005cc2:	2301      	movs	r3, #1
 8005cc4:	e7df      	b.n	8005c86 <_dtoa_r+0x276>
 8005cc6:	bf00      	nop
 8005cc8:	636f4361 	.word	0x636f4361
 8005ccc:	3fd287a7 	.word	0x3fd287a7
 8005cd0:	8b60c8b3 	.word	0x8b60c8b3
 8005cd4:	3fc68a28 	.word	0x3fc68a28
 8005cd8:	509f79fb 	.word	0x509f79fb
 8005cdc:	3fd34413 	.word	0x3fd34413
 8005ce0:	08007f01 	.word	0x08007f01
 8005ce4:	08007f18 	.word	0x08007f18
 8005ce8:	7ff00000 	.word	0x7ff00000
 8005cec:	08007efd 	.word	0x08007efd
 8005cf0:	08007ef4 	.word	0x08007ef4
 8005cf4:	08007ed1 	.word	0x08007ed1
 8005cf8:	3ff80000 	.word	0x3ff80000
 8005cfc:	08008008 	.word	0x08008008
 8005d00:	08007f73 	.word	0x08007f73
 8005d04:	2501      	movs	r5, #1
 8005d06:	2300      	movs	r3, #0
 8005d08:	9306      	str	r3, [sp, #24]
 8005d0a:	9508      	str	r5, [sp, #32]
 8005d0c:	f04f 33ff 	mov.w	r3, #4294967295
 8005d10:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8005d14:	2200      	movs	r2, #0
 8005d16:	2312      	movs	r3, #18
 8005d18:	e7b0      	b.n	8005c7c <_dtoa_r+0x26c>
 8005d1a:	2301      	movs	r3, #1
 8005d1c:	9308      	str	r3, [sp, #32]
 8005d1e:	e7f5      	b.n	8005d0c <_dtoa_r+0x2fc>
 8005d20:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005d22:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8005d26:	e7b8      	b.n	8005c9a <_dtoa_r+0x28a>
 8005d28:	3101      	adds	r1, #1
 8005d2a:	6041      	str	r1, [r0, #4]
 8005d2c:	0052      	lsls	r2, r2, #1
 8005d2e:	e7b8      	b.n	8005ca2 <_dtoa_r+0x292>
 8005d30:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005d32:	9a01      	ldr	r2, [sp, #4]
 8005d34:	601a      	str	r2, [r3, #0]
 8005d36:	9b03      	ldr	r3, [sp, #12]
 8005d38:	2b0e      	cmp	r3, #14
 8005d3a:	f200 809d 	bhi.w	8005e78 <_dtoa_r+0x468>
 8005d3e:	2d00      	cmp	r5, #0
 8005d40:	f000 809a 	beq.w	8005e78 <_dtoa_r+0x468>
 8005d44:	9b00      	ldr	r3, [sp, #0]
 8005d46:	2b00      	cmp	r3, #0
 8005d48:	dd32      	ble.n	8005db0 <_dtoa_r+0x3a0>
 8005d4a:	4ab7      	ldr	r2, [pc, #732]	; (8006028 <_dtoa_r+0x618>)
 8005d4c:	f003 030f 	and.w	r3, r3, #15
 8005d50:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8005d54:	e9d3 8900 	ldrd	r8, r9, [r3]
 8005d58:	9b00      	ldr	r3, [sp, #0]
 8005d5a:	05d8      	lsls	r0, r3, #23
 8005d5c:	ea4f 1723 	mov.w	r7, r3, asr #4
 8005d60:	d516      	bpl.n	8005d90 <_dtoa_r+0x380>
 8005d62:	4bb2      	ldr	r3, [pc, #712]	; (800602c <_dtoa_r+0x61c>)
 8005d64:	ec51 0b19 	vmov	r0, r1, d9
 8005d68:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8005d6c:	f7fa fd6e 	bl	800084c <__aeabi_ddiv>
 8005d70:	f007 070f 	and.w	r7, r7, #15
 8005d74:	4682      	mov	sl, r0
 8005d76:	468b      	mov	fp, r1
 8005d78:	2503      	movs	r5, #3
 8005d7a:	4eac      	ldr	r6, [pc, #688]	; (800602c <_dtoa_r+0x61c>)
 8005d7c:	b957      	cbnz	r7, 8005d94 <_dtoa_r+0x384>
 8005d7e:	4642      	mov	r2, r8
 8005d80:	464b      	mov	r3, r9
 8005d82:	4650      	mov	r0, sl
 8005d84:	4659      	mov	r1, fp
 8005d86:	f7fa fd61 	bl	800084c <__aeabi_ddiv>
 8005d8a:	4682      	mov	sl, r0
 8005d8c:	468b      	mov	fp, r1
 8005d8e:	e028      	b.n	8005de2 <_dtoa_r+0x3d2>
 8005d90:	2502      	movs	r5, #2
 8005d92:	e7f2      	b.n	8005d7a <_dtoa_r+0x36a>
 8005d94:	07f9      	lsls	r1, r7, #31
 8005d96:	d508      	bpl.n	8005daa <_dtoa_r+0x39a>
 8005d98:	4640      	mov	r0, r8
 8005d9a:	4649      	mov	r1, r9
 8005d9c:	e9d6 2300 	ldrd	r2, r3, [r6]
 8005da0:	f7fa fc2a 	bl	80005f8 <__aeabi_dmul>
 8005da4:	3501      	adds	r5, #1
 8005da6:	4680      	mov	r8, r0
 8005da8:	4689      	mov	r9, r1
 8005daa:	107f      	asrs	r7, r7, #1
 8005dac:	3608      	adds	r6, #8
 8005dae:	e7e5      	b.n	8005d7c <_dtoa_r+0x36c>
 8005db0:	f000 809b 	beq.w	8005eea <_dtoa_r+0x4da>
 8005db4:	9b00      	ldr	r3, [sp, #0]
 8005db6:	4f9d      	ldr	r7, [pc, #628]	; (800602c <_dtoa_r+0x61c>)
 8005db8:	425e      	negs	r6, r3
 8005dba:	4b9b      	ldr	r3, [pc, #620]	; (8006028 <_dtoa_r+0x618>)
 8005dbc:	f006 020f 	and.w	r2, r6, #15
 8005dc0:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8005dc4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005dc8:	ec51 0b19 	vmov	r0, r1, d9
 8005dcc:	f7fa fc14 	bl	80005f8 <__aeabi_dmul>
 8005dd0:	1136      	asrs	r6, r6, #4
 8005dd2:	4682      	mov	sl, r0
 8005dd4:	468b      	mov	fp, r1
 8005dd6:	2300      	movs	r3, #0
 8005dd8:	2502      	movs	r5, #2
 8005dda:	2e00      	cmp	r6, #0
 8005ddc:	d17a      	bne.n	8005ed4 <_dtoa_r+0x4c4>
 8005dde:	2b00      	cmp	r3, #0
 8005de0:	d1d3      	bne.n	8005d8a <_dtoa_r+0x37a>
 8005de2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005de4:	2b00      	cmp	r3, #0
 8005de6:	f000 8082 	beq.w	8005eee <_dtoa_r+0x4de>
 8005dea:	4b91      	ldr	r3, [pc, #580]	; (8006030 <_dtoa_r+0x620>)
 8005dec:	2200      	movs	r2, #0
 8005dee:	4650      	mov	r0, sl
 8005df0:	4659      	mov	r1, fp
 8005df2:	f7fa fe73 	bl	8000adc <__aeabi_dcmplt>
 8005df6:	2800      	cmp	r0, #0
 8005df8:	d079      	beq.n	8005eee <_dtoa_r+0x4de>
 8005dfa:	9b03      	ldr	r3, [sp, #12]
 8005dfc:	2b00      	cmp	r3, #0
 8005dfe:	d076      	beq.n	8005eee <_dtoa_r+0x4de>
 8005e00:	9b02      	ldr	r3, [sp, #8]
 8005e02:	2b00      	cmp	r3, #0
 8005e04:	dd36      	ble.n	8005e74 <_dtoa_r+0x464>
 8005e06:	9b00      	ldr	r3, [sp, #0]
 8005e08:	4650      	mov	r0, sl
 8005e0a:	4659      	mov	r1, fp
 8005e0c:	1e5f      	subs	r7, r3, #1
 8005e0e:	2200      	movs	r2, #0
 8005e10:	4b88      	ldr	r3, [pc, #544]	; (8006034 <_dtoa_r+0x624>)
 8005e12:	f7fa fbf1 	bl	80005f8 <__aeabi_dmul>
 8005e16:	9e02      	ldr	r6, [sp, #8]
 8005e18:	4682      	mov	sl, r0
 8005e1a:	468b      	mov	fp, r1
 8005e1c:	3501      	adds	r5, #1
 8005e1e:	4628      	mov	r0, r5
 8005e20:	f7fa fb80 	bl	8000524 <__aeabi_i2d>
 8005e24:	4652      	mov	r2, sl
 8005e26:	465b      	mov	r3, fp
 8005e28:	f7fa fbe6 	bl	80005f8 <__aeabi_dmul>
 8005e2c:	4b82      	ldr	r3, [pc, #520]	; (8006038 <_dtoa_r+0x628>)
 8005e2e:	2200      	movs	r2, #0
 8005e30:	f7fa fa2c 	bl	800028c <__adddf3>
 8005e34:	46d0      	mov	r8, sl
 8005e36:	46d9      	mov	r9, fp
 8005e38:	4682      	mov	sl, r0
 8005e3a:	f1a1 7b50 	sub.w	fp, r1, #54525952	; 0x3400000
 8005e3e:	2e00      	cmp	r6, #0
 8005e40:	d158      	bne.n	8005ef4 <_dtoa_r+0x4e4>
 8005e42:	4b7e      	ldr	r3, [pc, #504]	; (800603c <_dtoa_r+0x62c>)
 8005e44:	2200      	movs	r2, #0
 8005e46:	4640      	mov	r0, r8
 8005e48:	4649      	mov	r1, r9
 8005e4a:	f7fa fa1d 	bl	8000288 <__aeabi_dsub>
 8005e4e:	4652      	mov	r2, sl
 8005e50:	465b      	mov	r3, fp
 8005e52:	4680      	mov	r8, r0
 8005e54:	4689      	mov	r9, r1
 8005e56:	f7fa fe5f 	bl	8000b18 <__aeabi_dcmpgt>
 8005e5a:	2800      	cmp	r0, #0
 8005e5c:	f040 8295 	bne.w	800638a <_dtoa_r+0x97a>
 8005e60:	4652      	mov	r2, sl
 8005e62:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 8005e66:	4640      	mov	r0, r8
 8005e68:	4649      	mov	r1, r9
 8005e6a:	f7fa fe37 	bl	8000adc <__aeabi_dcmplt>
 8005e6e:	2800      	cmp	r0, #0
 8005e70:	f040 8289 	bne.w	8006386 <_dtoa_r+0x976>
 8005e74:	ec5b ab19 	vmov	sl, fp, d9
 8005e78:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005e7a:	2b00      	cmp	r3, #0
 8005e7c:	f2c0 8148 	blt.w	8006110 <_dtoa_r+0x700>
 8005e80:	9a00      	ldr	r2, [sp, #0]
 8005e82:	2a0e      	cmp	r2, #14
 8005e84:	f300 8144 	bgt.w	8006110 <_dtoa_r+0x700>
 8005e88:	4b67      	ldr	r3, [pc, #412]	; (8006028 <_dtoa_r+0x618>)
 8005e8a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8005e8e:	e9d3 8900 	ldrd	r8, r9, [r3]
 8005e92:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005e94:	2b00      	cmp	r3, #0
 8005e96:	f280 80d5 	bge.w	8006044 <_dtoa_r+0x634>
 8005e9a:	9b03      	ldr	r3, [sp, #12]
 8005e9c:	2b00      	cmp	r3, #0
 8005e9e:	f300 80d1 	bgt.w	8006044 <_dtoa_r+0x634>
 8005ea2:	f040 826f 	bne.w	8006384 <_dtoa_r+0x974>
 8005ea6:	4b65      	ldr	r3, [pc, #404]	; (800603c <_dtoa_r+0x62c>)
 8005ea8:	2200      	movs	r2, #0
 8005eaa:	4640      	mov	r0, r8
 8005eac:	4649      	mov	r1, r9
 8005eae:	f7fa fba3 	bl	80005f8 <__aeabi_dmul>
 8005eb2:	4652      	mov	r2, sl
 8005eb4:	465b      	mov	r3, fp
 8005eb6:	f7fa fe25 	bl	8000b04 <__aeabi_dcmpge>
 8005eba:	9e03      	ldr	r6, [sp, #12]
 8005ebc:	4637      	mov	r7, r6
 8005ebe:	2800      	cmp	r0, #0
 8005ec0:	f040 8245 	bne.w	800634e <_dtoa_r+0x93e>
 8005ec4:	9d01      	ldr	r5, [sp, #4]
 8005ec6:	2331      	movs	r3, #49	; 0x31
 8005ec8:	f805 3b01 	strb.w	r3, [r5], #1
 8005ecc:	9b00      	ldr	r3, [sp, #0]
 8005ece:	3301      	adds	r3, #1
 8005ed0:	9300      	str	r3, [sp, #0]
 8005ed2:	e240      	b.n	8006356 <_dtoa_r+0x946>
 8005ed4:	07f2      	lsls	r2, r6, #31
 8005ed6:	d505      	bpl.n	8005ee4 <_dtoa_r+0x4d4>
 8005ed8:	e9d7 2300 	ldrd	r2, r3, [r7]
 8005edc:	f7fa fb8c 	bl	80005f8 <__aeabi_dmul>
 8005ee0:	3501      	adds	r5, #1
 8005ee2:	2301      	movs	r3, #1
 8005ee4:	1076      	asrs	r6, r6, #1
 8005ee6:	3708      	adds	r7, #8
 8005ee8:	e777      	b.n	8005dda <_dtoa_r+0x3ca>
 8005eea:	2502      	movs	r5, #2
 8005eec:	e779      	b.n	8005de2 <_dtoa_r+0x3d2>
 8005eee:	9f00      	ldr	r7, [sp, #0]
 8005ef0:	9e03      	ldr	r6, [sp, #12]
 8005ef2:	e794      	b.n	8005e1e <_dtoa_r+0x40e>
 8005ef4:	9901      	ldr	r1, [sp, #4]
 8005ef6:	4b4c      	ldr	r3, [pc, #304]	; (8006028 <_dtoa_r+0x618>)
 8005ef8:	4431      	add	r1, r6
 8005efa:	910d      	str	r1, [sp, #52]	; 0x34
 8005efc:	9908      	ldr	r1, [sp, #32]
 8005efe:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 8005f02:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8005f06:	2900      	cmp	r1, #0
 8005f08:	d043      	beq.n	8005f92 <_dtoa_r+0x582>
 8005f0a:	494d      	ldr	r1, [pc, #308]	; (8006040 <_dtoa_r+0x630>)
 8005f0c:	2000      	movs	r0, #0
 8005f0e:	f7fa fc9d 	bl	800084c <__aeabi_ddiv>
 8005f12:	4652      	mov	r2, sl
 8005f14:	465b      	mov	r3, fp
 8005f16:	f7fa f9b7 	bl	8000288 <__aeabi_dsub>
 8005f1a:	9d01      	ldr	r5, [sp, #4]
 8005f1c:	4682      	mov	sl, r0
 8005f1e:	468b      	mov	fp, r1
 8005f20:	4649      	mov	r1, r9
 8005f22:	4640      	mov	r0, r8
 8005f24:	f7fa fe18 	bl	8000b58 <__aeabi_d2iz>
 8005f28:	4606      	mov	r6, r0
 8005f2a:	f7fa fafb 	bl	8000524 <__aeabi_i2d>
 8005f2e:	4602      	mov	r2, r0
 8005f30:	460b      	mov	r3, r1
 8005f32:	4640      	mov	r0, r8
 8005f34:	4649      	mov	r1, r9
 8005f36:	f7fa f9a7 	bl	8000288 <__aeabi_dsub>
 8005f3a:	3630      	adds	r6, #48	; 0x30
 8005f3c:	f805 6b01 	strb.w	r6, [r5], #1
 8005f40:	4652      	mov	r2, sl
 8005f42:	465b      	mov	r3, fp
 8005f44:	4680      	mov	r8, r0
 8005f46:	4689      	mov	r9, r1
 8005f48:	f7fa fdc8 	bl	8000adc <__aeabi_dcmplt>
 8005f4c:	2800      	cmp	r0, #0
 8005f4e:	d163      	bne.n	8006018 <_dtoa_r+0x608>
 8005f50:	4642      	mov	r2, r8
 8005f52:	464b      	mov	r3, r9
 8005f54:	4936      	ldr	r1, [pc, #216]	; (8006030 <_dtoa_r+0x620>)
 8005f56:	2000      	movs	r0, #0
 8005f58:	f7fa f996 	bl	8000288 <__aeabi_dsub>
 8005f5c:	4652      	mov	r2, sl
 8005f5e:	465b      	mov	r3, fp
 8005f60:	f7fa fdbc 	bl	8000adc <__aeabi_dcmplt>
 8005f64:	2800      	cmp	r0, #0
 8005f66:	f040 80b5 	bne.w	80060d4 <_dtoa_r+0x6c4>
 8005f6a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005f6c:	429d      	cmp	r5, r3
 8005f6e:	d081      	beq.n	8005e74 <_dtoa_r+0x464>
 8005f70:	4b30      	ldr	r3, [pc, #192]	; (8006034 <_dtoa_r+0x624>)
 8005f72:	2200      	movs	r2, #0
 8005f74:	4650      	mov	r0, sl
 8005f76:	4659      	mov	r1, fp
 8005f78:	f7fa fb3e 	bl	80005f8 <__aeabi_dmul>
 8005f7c:	4b2d      	ldr	r3, [pc, #180]	; (8006034 <_dtoa_r+0x624>)
 8005f7e:	4682      	mov	sl, r0
 8005f80:	468b      	mov	fp, r1
 8005f82:	4640      	mov	r0, r8
 8005f84:	4649      	mov	r1, r9
 8005f86:	2200      	movs	r2, #0
 8005f88:	f7fa fb36 	bl	80005f8 <__aeabi_dmul>
 8005f8c:	4680      	mov	r8, r0
 8005f8e:	4689      	mov	r9, r1
 8005f90:	e7c6      	b.n	8005f20 <_dtoa_r+0x510>
 8005f92:	4650      	mov	r0, sl
 8005f94:	4659      	mov	r1, fp
 8005f96:	f7fa fb2f 	bl	80005f8 <__aeabi_dmul>
 8005f9a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005f9c:	9d01      	ldr	r5, [sp, #4]
 8005f9e:	930f      	str	r3, [sp, #60]	; 0x3c
 8005fa0:	4682      	mov	sl, r0
 8005fa2:	468b      	mov	fp, r1
 8005fa4:	4649      	mov	r1, r9
 8005fa6:	4640      	mov	r0, r8
 8005fa8:	f7fa fdd6 	bl	8000b58 <__aeabi_d2iz>
 8005fac:	4606      	mov	r6, r0
 8005fae:	f7fa fab9 	bl	8000524 <__aeabi_i2d>
 8005fb2:	3630      	adds	r6, #48	; 0x30
 8005fb4:	4602      	mov	r2, r0
 8005fb6:	460b      	mov	r3, r1
 8005fb8:	4640      	mov	r0, r8
 8005fba:	4649      	mov	r1, r9
 8005fbc:	f7fa f964 	bl	8000288 <__aeabi_dsub>
 8005fc0:	f805 6b01 	strb.w	r6, [r5], #1
 8005fc4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005fc6:	429d      	cmp	r5, r3
 8005fc8:	4680      	mov	r8, r0
 8005fca:	4689      	mov	r9, r1
 8005fcc:	f04f 0200 	mov.w	r2, #0
 8005fd0:	d124      	bne.n	800601c <_dtoa_r+0x60c>
 8005fd2:	4b1b      	ldr	r3, [pc, #108]	; (8006040 <_dtoa_r+0x630>)
 8005fd4:	4650      	mov	r0, sl
 8005fd6:	4659      	mov	r1, fp
 8005fd8:	f7fa f958 	bl	800028c <__adddf3>
 8005fdc:	4602      	mov	r2, r0
 8005fde:	460b      	mov	r3, r1
 8005fe0:	4640      	mov	r0, r8
 8005fe2:	4649      	mov	r1, r9
 8005fe4:	f7fa fd98 	bl	8000b18 <__aeabi_dcmpgt>
 8005fe8:	2800      	cmp	r0, #0
 8005fea:	d173      	bne.n	80060d4 <_dtoa_r+0x6c4>
 8005fec:	4652      	mov	r2, sl
 8005fee:	465b      	mov	r3, fp
 8005ff0:	4913      	ldr	r1, [pc, #76]	; (8006040 <_dtoa_r+0x630>)
 8005ff2:	2000      	movs	r0, #0
 8005ff4:	f7fa f948 	bl	8000288 <__aeabi_dsub>
 8005ff8:	4602      	mov	r2, r0
 8005ffa:	460b      	mov	r3, r1
 8005ffc:	4640      	mov	r0, r8
 8005ffe:	4649      	mov	r1, r9
 8006000:	f7fa fd6c 	bl	8000adc <__aeabi_dcmplt>
 8006004:	2800      	cmp	r0, #0
 8006006:	f43f af35 	beq.w	8005e74 <_dtoa_r+0x464>
 800600a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 800600c:	1e6b      	subs	r3, r5, #1
 800600e:	930f      	str	r3, [sp, #60]	; 0x3c
 8006010:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8006014:	2b30      	cmp	r3, #48	; 0x30
 8006016:	d0f8      	beq.n	800600a <_dtoa_r+0x5fa>
 8006018:	9700      	str	r7, [sp, #0]
 800601a:	e049      	b.n	80060b0 <_dtoa_r+0x6a0>
 800601c:	4b05      	ldr	r3, [pc, #20]	; (8006034 <_dtoa_r+0x624>)
 800601e:	f7fa faeb 	bl	80005f8 <__aeabi_dmul>
 8006022:	4680      	mov	r8, r0
 8006024:	4689      	mov	r9, r1
 8006026:	e7bd      	b.n	8005fa4 <_dtoa_r+0x594>
 8006028:	08008008 	.word	0x08008008
 800602c:	08007fe0 	.word	0x08007fe0
 8006030:	3ff00000 	.word	0x3ff00000
 8006034:	40240000 	.word	0x40240000
 8006038:	401c0000 	.word	0x401c0000
 800603c:	40140000 	.word	0x40140000
 8006040:	3fe00000 	.word	0x3fe00000
 8006044:	9d01      	ldr	r5, [sp, #4]
 8006046:	4656      	mov	r6, sl
 8006048:	465f      	mov	r7, fp
 800604a:	4642      	mov	r2, r8
 800604c:	464b      	mov	r3, r9
 800604e:	4630      	mov	r0, r6
 8006050:	4639      	mov	r1, r7
 8006052:	f7fa fbfb 	bl	800084c <__aeabi_ddiv>
 8006056:	f7fa fd7f 	bl	8000b58 <__aeabi_d2iz>
 800605a:	4682      	mov	sl, r0
 800605c:	f7fa fa62 	bl	8000524 <__aeabi_i2d>
 8006060:	4642      	mov	r2, r8
 8006062:	464b      	mov	r3, r9
 8006064:	f7fa fac8 	bl	80005f8 <__aeabi_dmul>
 8006068:	4602      	mov	r2, r0
 800606a:	460b      	mov	r3, r1
 800606c:	4630      	mov	r0, r6
 800606e:	4639      	mov	r1, r7
 8006070:	f10a 0630 	add.w	r6, sl, #48	; 0x30
 8006074:	f7fa f908 	bl	8000288 <__aeabi_dsub>
 8006078:	f805 6b01 	strb.w	r6, [r5], #1
 800607c:	9e01      	ldr	r6, [sp, #4]
 800607e:	9f03      	ldr	r7, [sp, #12]
 8006080:	1bae      	subs	r6, r5, r6
 8006082:	42b7      	cmp	r7, r6
 8006084:	4602      	mov	r2, r0
 8006086:	460b      	mov	r3, r1
 8006088:	d135      	bne.n	80060f6 <_dtoa_r+0x6e6>
 800608a:	f7fa f8ff 	bl	800028c <__adddf3>
 800608e:	4642      	mov	r2, r8
 8006090:	464b      	mov	r3, r9
 8006092:	4606      	mov	r6, r0
 8006094:	460f      	mov	r7, r1
 8006096:	f7fa fd3f 	bl	8000b18 <__aeabi_dcmpgt>
 800609a:	b9d0      	cbnz	r0, 80060d2 <_dtoa_r+0x6c2>
 800609c:	4642      	mov	r2, r8
 800609e:	464b      	mov	r3, r9
 80060a0:	4630      	mov	r0, r6
 80060a2:	4639      	mov	r1, r7
 80060a4:	f7fa fd10 	bl	8000ac8 <__aeabi_dcmpeq>
 80060a8:	b110      	cbz	r0, 80060b0 <_dtoa_r+0x6a0>
 80060aa:	f01a 0f01 	tst.w	sl, #1
 80060ae:	d110      	bne.n	80060d2 <_dtoa_r+0x6c2>
 80060b0:	4620      	mov	r0, r4
 80060b2:	ee18 1a10 	vmov	r1, s16
 80060b6:	f000 faf3 	bl	80066a0 <_Bfree>
 80060ba:	2300      	movs	r3, #0
 80060bc:	9800      	ldr	r0, [sp, #0]
 80060be:	702b      	strb	r3, [r5, #0]
 80060c0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80060c2:	3001      	adds	r0, #1
 80060c4:	6018      	str	r0, [r3, #0]
 80060c6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80060c8:	2b00      	cmp	r3, #0
 80060ca:	f43f acf1 	beq.w	8005ab0 <_dtoa_r+0xa0>
 80060ce:	601d      	str	r5, [r3, #0]
 80060d0:	e4ee      	b.n	8005ab0 <_dtoa_r+0xa0>
 80060d2:	9f00      	ldr	r7, [sp, #0]
 80060d4:	462b      	mov	r3, r5
 80060d6:	461d      	mov	r5, r3
 80060d8:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80060dc:	2a39      	cmp	r2, #57	; 0x39
 80060de:	d106      	bne.n	80060ee <_dtoa_r+0x6de>
 80060e0:	9a01      	ldr	r2, [sp, #4]
 80060e2:	429a      	cmp	r2, r3
 80060e4:	d1f7      	bne.n	80060d6 <_dtoa_r+0x6c6>
 80060e6:	9901      	ldr	r1, [sp, #4]
 80060e8:	2230      	movs	r2, #48	; 0x30
 80060ea:	3701      	adds	r7, #1
 80060ec:	700a      	strb	r2, [r1, #0]
 80060ee:	781a      	ldrb	r2, [r3, #0]
 80060f0:	3201      	adds	r2, #1
 80060f2:	701a      	strb	r2, [r3, #0]
 80060f4:	e790      	b.n	8006018 <_dtoa_r+0x608>
 80060f6:	4ba6      	ldr	r3, [pc, #664]	; (8006390 <_dtoa_r+0x980>)
 80060f8:	2200      	movs	r2, #0
 80060fa:	f7fa fa7d 	bl	80005f8 <__aeabi_dmul>
 80060fe:	2200      	movs	r2, #0
 8006100:	2300      	movs	r3, #0
 8006102:	4606      	mov	r6, r0
 8006104:	460f      	mov	r7, r1
 8006106:	f7fa fcdf 	bl	8000ac8 <__aeabi_dcmpeq>
 800610a:	2800      	cmp	r0, #0
 800610c:	d09d      	beq.n	800604a <_dtoa_r+0x63a>
 800610e:	e7cf      	b.n	80060b0 <_dtoa_r+0x6a0>
 8006110:	9a08      	ldr	r2, [sp, #32]
 8006112:	2a00      	cmp	r2, #0
 8006114:	f000 80d7 	beq.w	80062c6 <_dtoa_r+0x8b6>
 8006118:	9a06      	ldr	r2, [sp, #24]
 800611a:	2a01      	cmp	r2, #1
 800611c:	f300 80ba 	bgt.w	8006294 <_dtoa_r+0x884>
 8006120:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8006122:	2a00      	cmp	r2, #0
 8006124:	f000 80b2 	beq.w	800628c <_dtoa_r+0x87c>
 8006128:	f203 4333 	addw	r3, r3, #1075	; 0x433
 800612c:	9e07      	ldr	r6, [sp, #28]
 800612e:	9d04      	ldr	r5, [sp, #16]
 8006130:	9a04      	ldr	r2, [sp, #16]
 8006132:	441a      	add	r2, r3
 8006134:	9204      	str	r2, [sp, #16]
 8006136:	9a05      	ldr	r2, [sp, #20]
 8006138:	2101      	movs	r1, #1
 800613a:	441a      	add	r2, r3
 800613c:	4620      	mov	r0, r4
 800613e:	9205      	str	r2, [sp, #20]
 8006140:	f000 fb66 	bl	8006810 <__i2b>
 8006144:	4607      	mov	r7, r0
 8006146:	2d00      	cmp	r5, #0
 8006148:	dd0c      	ble.n	8006164 <_dtoa_r+0x754>
 800614a:	9b05      	ldr	r3, [sp, #20]
 800614c:	2b00      	cmp	r3, #0
 800614e:	dd09      	ble.n	8006164 <_dtoa_r+0x754>
 8006150:	42ab      	cmp	r3, r5
 8006152:	9a04      	ldr	r2, [sp, #16]
 8006154:	bfa8      	it	ge
 8006156:	462b      	movge	r3, r5
 8006158:	1ad2      	subs	r2, r2, r3
 800615a:	9204      	str	r2, [sp, #16]
 800615c:	9a05      	ldr	r2, [sp, #20]
 800615e:	1aed      	subs	r5, r5, r3
 8006160:	1ad3      	subs	r3, r2, r3
 8006162:	9305      	str	r3, [sp, #20]
 8006164:	9b07      	ldr	r3, [sp, #28]
 8006166:	b31b      	cbz	r3, 80061b0 <_dtoa_r+0x7a0>
 8006168:	9b08      	ldr	r3, [sp, #32]
 800616a:	2b00      	cmp	r3, #0
 800616c:	f000 80af 	beq.w	80062ce <_dtoa_r+0x8be>
 8006170:	2e00      	cmp	r6, #0
 8006172:	dd13      	ble.n	800619c <_dtoa_r+0x78c>
 8006174:	4639      	mov	r1, r7
 8006176:	4632      	mov	r2, r6
 8006178:	4620      	mov	r0, r4
 800617a:	f000 fc09 	bl	8006990 <__pow5mult>
 800617e:	ee18 2a10 	vmov	r2, s16
 8006182:	4601      	mov	r1, r0
 8006184:	4607      	mov	r7, r0
 8006186:	4620      	mov	r0, r4
 8006188:	f000 fb58 	bl	800683c <__multiply>
 800618c:	ee18 1a10 	vmov	r1, s16
 8006190:	4680      	mov	r8, r0
 8006192:	4620      	mov	r0, r4
 8006194:	f000 fa84 	bl	80066a0 <_Bfree>
 8006198:	ee08 8a10 	vmov	s16, r8
 800619c:	9b07      	ldr	r3, [sp, #28]
 800619e:	1b9a      	subs	r2, r3, r6
 80061a0:	d006      	beq.n	80061b0 <_dtoa_r+0x7a0>
 80061a2:	ee18 1a10 	vmov	r1, s16
 80061a6:	4620      	mov	r0, r4
 80061a8:	f000 fbf2 	bl	8006990 <__pow5mult>
 80061ac:	ee08 0a10 	vmov	s16, r0
 80061b0:	2101      	movs	r1, #1
 80061b2:	4620      	mov	r0, r4
 80061b4:	f000 fb2c 	bl	8006810 <__i2b>
 80061b8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80061ba:	2b00      	cmp	r3, #0
 80061bc:	4606      	mov	r6, r0
 80061be:	f340 8088 	ble.w	80062d2 <_dtoa_r+0x8c2>
 80061c2:	461a      	mov	r2, r3
 80061c4:	4601      	mov	r1, r0
 80061c6:	4620      	mov	r0, r4
 80061c8:	f000 fbe2 	bl	8006990 <__pow5mult>
 80061cc:	9b06      	ldr	r3, [sp, #24]
 80061ce:	2b01      	cmp	r3, #1
 80061d0:	4606      	mov	r6, r0
 80061d2:	f340 8081 	ble.w	80062d8 <_dtoa_r+0x8c8>
 80061d6:	f04f 0800 	mov.w	r8, #0
 80061da:	6933      	ldr	r3, [r6, #16]
 80061dc:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 80061e0:	6918      	ldr	r0, [r3, #16]
 80061e2:	f000 fac5 	bl	8006770 <__hi0bits>
 80061e6:	f1c0 0020 	rsb	r0, r0, #32
 80061ea:	9b05      	ldr	r3, [sp, #20]
 80061ec:	4418      	add	r0, r3
 80061ee:	f010 001f 	ands.w	r0, r0, #31
 80061f2:	f000 8092 	beq.w	800631a <_dtoa_r+0x90a>
 80061f6:	f1c0 0320 	rsb	r3, r0, #32
 80061fa:	2b04      	cmp	r3, #4
 80061fc:	f340 808a 	ble.w	8006314 <_dtoa_r+0x904>
 8006200:	f1c0 001c 	rsb	r0, r0, #28
 8006204:	9b04      	ldr	r3, [sp, #16]
 8006206:	4403      	add	r3, r0
 8006208:	9304      	str	r3, [sp, #16]
 800620a:	9b05      	ldr	r3, [sp, #20]
 800620c:	4403      	add	r3, r0
 800620e:	4405      	add	r5, r0
 8006210:	9305      	str	r3, [sp, #20]
 8006212:	9b04      	ldr	r3, [sp, #16]
 8006214:	2b00      	cmp	r3, #0
 8006216:	dd07      	ble.n	8006228 <_dtoa_r+0x818>
 8006218:	ee18 1a10 	vmov	r1, s16
 800621c:	461a      	mov	r2, r3
 800621e:	4620      	mov	r0, r4
 8006220:	f000 fc10 	bl	8006a44 <__lshift>
 8006224:	ee08 0a10 	vmov	s16, r0
 8006228:	9b05      	ldr	r3, [sp, #20]
 800622a:	2b00      	cmp	r3, #0
 800622c:	dd05      	ble.n	800623a <_dtoa_r+0x82a>
 800622e:	4631      	mov	r1, r6
 8006230:	461a      	mov	r2, r3
 8006232:	4620      	mov	r0, r4
 8006234:	f000 fc06 	bl	8006a44 <__lshift>
 8006238:	4606      	mov	r6, r0
 800623a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800623c:	2b00      	cmp	r3, #0
 800623e:	d06e      	beq.n	800631e <_dtoa_r+0x90e>
 8006240:	ee18 0a10 	vmov	r0, s16
 8006244:	4631      	mov	r1, r6
 8006246:	f000 fc6d 	bl	8006b24 <__mcmp>
 800624a:	2800      	cmp	r0, #0
 800624c:	da67      	bge.n	800631e <_dtoa_r+0x90e>
 800624e:	9b00      	ldr	r3, [sp, #0]
 8006250:	3b01      	subs	r3, #1
 8006252:	ee18 1a10 	vmov	r1, s16
 8006256:	9300      	str	r3, [sp, #0]
 8006258:	220a      	movs	r2, #10
 800625a:	2300      	movs	r3, #0
 800625c:	4620      	mov	r0, r4
 800625e:	f000 fa41 	bl	80066e4 <__multadd>
 8006262:	9b08      	ldr	r3, [sp, #32]
 8006264:	ee08 0a10 	vmov	s16, r0
 8006268:	2b00      	cmp	r3, #0
 800626a:	f000 81b1 	beq.w	80065d0 <_dtoa_r+0xbc0>
 800626e:	2300      	movs	r3, #0
 8006270:	4639      	mov	r1, r7
 8006272:	220a      	movs	r2, #10
 8006274:	4620      	mov	r0, r4
 8006276:	f000 fa35 	bl	80066e4 <__multadd>
 800627a:	9b02      	ldr	r3, [sp, #8]
 800627c:	2b00      	cmp	r3, #0
 800627e:	4607      	mov	r7, r0
 8006280:	f300 808e 	bgt.w	80063a0 <_dtoa_r+0x990>
 8006284:	9b06      	ldr	r3, [sp, #24]
 8006286:	2b02      	cmp	r3, #2
 8006288:	dc51      	bgt.n	800632e <_dtoa_r+0x91e>
 800628a:	e089      	b.n	80063a0 <_dtoa_r+0x990>
 800628c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800628e:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8006292:	e74b      	b.n	800612c <_dtoa_r+0x71c>
 8006294:	9b03      	ldr	r3, [sp, #12]
 8006296:	1e5e      	subs	r6, r3, #1
 8006298:	9b07      	ldr	r3, [sp, #28]
 800629a:	42b3      	cmp	r3, r6
 800629c:	bfbf      	itttt	lt
 800629e:	9b07      	ldrlt	r3, [sp, #28]
 80062a0:	9607      	strlt	r6, [sp, #28]
 80062a2:	1af2      	sublt	r2, r6, r3
 80062a4:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 80062a6:	bfb6      	itet	lt
 80062a8:	189b      	addlt	r3, r3, r2
 80062aa:	1b9e      	subge	r6, r3, r6
 80062ac:	930a      	strlt	r3, [sp, #40]	; 0x28
 80062ae:	9b03      	ldr	r3, [sp, #12]
 80062b0:	bfb8      	it	lt
 80062b2:	2600      	movlt	r6, #0
 80062b4:	2b00      	cmp	r3, #0
 80062b6:	bfb7      	itett	lt
 80062b8:	e9dd 2303 	ldrdlt	r2, r3, [sp, #12]
 80062bc:	e9dd 3503 	ldrdge	r3, r5, [sp, #12]
 80062c0:	1a9d      	sublt	r5, r3, r2
 80062c2:	2300      	movlt	r3, #0
 80062c4:	e734      	b.n	8006130 <_dtoa_r+0x720>
 80062c6:	9e07      	ldr	r6, [sp, #28]
 80062c8:	9d04      	ldr	r5, [sp, #16]
 80062ca:	9f08      	ldr	r7, [sp, #32]
 80062cc:	e73b      	b.n	8006146 <_dtoa_r+0x736>
 80062ce:	9a07      	ldr	r2, [sp, #28]
 80062d0:	e767      	b.n	80061a2 <_dtoa_r+0x792>
 80062d2:	9b06      	ldr	r3, [sp, #24]
 80062d4:	2b01      	cmp	r3, #1
 80062d6:	dc18      	bgt.n	800630a <_dtoa_r+0x8fa>
 80062d8:	f1ba 0f00 	cmp.w	sl, #0
 80062dc:	d115      	bne.n	800630a <_dtoa_r+0x8fa>
 80062de:	f3cb 0313 	ubfx	r3, fp, #0, #20
 80062e2:	b993      	cbnz	r3, 800630a <_dtoa_r+0x8fa>
 80062e4:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 80062e8:	0d1b      	lsrs	r3, r3, #20
 80062ea:	051b      	lsls	r3, r3, #20
 80062ec:	b183      	cbz	r3, 8006310 <_dtoa_r+0x900>
 80062ee:	9b04      	ldr	r3, [sp, #16]
 80062f0:	3301      	adds	r3, #1
 80062f2:	9304      	str	r3, [sp, #16]
 80062f4:	9b05      	ldr	r3, [sp, #20]
 80062f6:	3301      	adds	r3, #1
 80062f8:	9305      	str	r3, [sp, #20]
 80062fa:	f04f 0801 	mov.w	r8, #1
 80062fe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006300:	2b00      	cmp	r3, #0
 8006302:	f47f af6a 	bne.w	80061da <_dtoa_r+0x7ca>
 8006306:	2001      	movs	r0, #1
 8006308:	e76f      	b.n	80061ea <_dtoa_r+0x7da>
 800630a:	f04f 0800 	mov.w	r8, #0
 800630e:	e7f6      	b.n	80062fe <_dtoa_r+0x8ee>
 8006310:	4698      	mov	r8, r3
 8006312:	e7f4      	b.n	80062fe <_dtoa_r+0x8ee>
 8006314:	f43f af7d 	beq.w	8006212 <_dtoa_r+0x802>
 8006318:	4618      	mov	r0, r3
 800631a:	301c      	adds	r0, #28
 800631c:	e772      	b.n	8006204 <_dtoa_r+0x7f4>
 800631e:	9b03      	ldr	r3, [sp, #12]
 8006320:	2b00      	cmp	r3, #0
 8006322:	dc37      	bgt.n	8006394 <_dtoa_r+0x984>
 8006324:	9b06      	ldr	r3, [sp, #24]
 8006326:	2b02      	cmp	r3, #2
 8006328:	dd34      	ble.n	8006394 <_dtoa_r+0x984>
 800632a:	9b03      	ldr	r3, [sp, #12]
 800632c:	9302      	str	r3, [sp, #8]
 800632e:	9b02      	ldr	r3, [sp, #8]
 8006330:	b96b      	cbnz	r3, 800634e <_dtoa_r+0x93e>
 8006332:	4631      	mov	r1, r6
 8006334:	2205      	movs	r2, #5
 8006336:	4620      	mov	r0, r4
 8006338:	f000 f9d4 	bl	80066e4 <__multadd>
 800633c:	4601      	mov	r1, r0
 800633e:	4606      	mov	r6, r0
 8006340:	ee18 0a10 	vmov	r0, s16
 8006344:	f000 fbee 	bl	8006b24 <__mcmp>
 8006348:	2800      	cmp	r0, #0
 800634a:	f73f adbb 	bgt.w	8005ec4 <_dtoa_r+0x4b4>
 800634e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006350:	9d01      	ldr	r5, [sp, #4]
 8006352:	43db      	mvns	r3, r3
 8006354:	9300      	str	r3, [sp, #0]
 8006356:	f04f 0800 	mov.w	r8, #0
 800635a:	4631      	mov	r1, r6
 800635c:	4620      	mov	r0, r4
 800635e:	f000 f99f 	bl	80066a0 <_Bfree>
 8006362:	2f00      	cmp	r7, #0
 8006364:	f43f aea4 	beq.w	80060b0 <_dtoa_r+0x6a0>
 8006368:	f1b8 0f00 	cmp.w	r8, #0
 800636c:	d005      	beq.n	800637a <_dtoa_r+0x96a>
 800636e:	45b8      	cmp	r8, r7
 8006370:	d003      	beq.n	800637a <_dtoa_r+0x96a>
 8006372:	4641      	mov	r1, r8
 8006374:	4620      	mov	r0, r4
 8006376:	f000 f993 	bl	80066a0 <_Bfree>
 800637a:	4639      	mov	r1, r7
 800637c:	4620      	mov	r0, r4
 800637e:	f000 f98f 	bl	80066a0 <_Bfree>
 8006382:	e695      	b.n	80060b0 <_dtoa_r+0x6a0>
 8006384:	2600      	movs	r6, #0
 8006386:	4637      	mov	r7, r6
 8006388:	e7e1      	b.n	800634e <_dtoa_r+0x93e>
 800638a:	9700      	str	r7, [sp, #0]
 800638c:	4637      	mov	r7, r6
 800638e:	e599      	b.n	8005ec4 <_dtoa_r+0x4b4>
 8006390:	40240000 	.word	0x40240000
 8006394:	9b08      	ldr	r3, [sp, #32]
 8006396:	2b00      	cmp	r3, #0
 8006398:	f000 80ca 	beq.w	8006530 <_dtoa_r+0xb20>
 800639c:	9b03      	ldr	r3, [sp, #12]
 800639e:	9302      	str	r3, [sp, #8]
 80063a0:	2d00      	cmp	r5, #0
 80063a2:	dd05      	ble.n	80063b0 <_dtoa_r+0x9a0>
 80063a4:	4639      	mov	r1, r7
 80063a6:	462a      	mov	r2, r5
 80063a8:	4620      	mov	r0, r4
 80063aa:	f000 fb4b 	bl	8006a44 <__lshift>
 80063ae:	4607      	mov	r7, r0
 80063b0:	f1b8 0f00 	cmp.w	r8, #0
 80063b4:	d05b      	beq.n	800646e <_dtoa_r+0xa5e>
 80063b6:	6879      	ldr	r1, [r7, #4]
 80063b8:	4620      	mov	r0, r4
 80063ba:	f000 f931 	bl	8006620 <_Balloc>
 80063be:	4605      	mov	r5, r0
 80063c0:	b928      	cbnz	r0, 80063ce <_dtoa_r+0x9be>
 80063c2:	4b87      	ldr	r3, [pc, #540]	; (80065e0 <_dtoa_r+0xbd0>)
 80063c4:	4602      	mov	r2, r0
 80063c6:	f240 21ea 	movw	r1, #746	; 0x2ea
 80063ca:	f7ff bb3b 	b.w	8005a44 <_dtoa_r+0x34>
 80063ce:	693a      	ldr	r2, [r7, #16]
 80063d0:	3202      	adds	r2, #2
 80063d2:	0092      	lsls	r2, r2, #2
 80063d4:	f107 010c 	add.w	r1, r7, #12
 80063d8:	300c      	adds	r0, #12
 80063da:	f000 f913 	bl	8006604 <memcpy>
 80063de:	2201      	movs	r2, #1
 80063e0:	4629      	mov	r1, r5
 80063e2:	4620      	mov	r0, r4
 80063e4:	f000 fb2e 	bl	8006a44 <__lshift>
 80063e8:	9b01      	ldr	r3, [sp, #4]
 80063ea:	f103 0901 	add.w	r9, r3, #1
 80063ee:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 80063f2:	4413      	add	r3, r2
 80063f4:	9305      	str	r3, [sp, #20]
 80063f6:	f00a 0301 	and.w	r3, sl, #1
 80063fa:	46b8      	mov	r8, r7
 80063fc:	9304      	str	r3, [sp, #16]
 80063fe:	4607      	mov	r7, r0
 8006400:	4631      	mov	r1, r6
 8006402:	ee18 0a10 	vmov	r0, s16
 8006406:	f7ff fa75 	bl	80058f4 <quorem>
 800640a:	4641      	mov	r1, r8
 800640c:	9002      	str	r0, [sp, #8]
 800640e:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 8006412:	ee18 0a10 	vmov	r0, s16
 8006416:	f000 fb85 	bl	8006b24 <__mcmp>
 800641a:	463a      	mov	r2, r7
 800641c:	9003      	str	r0, [sp, #12]
 800641e:	4631      	mov	r1, r6
 8006420:	4620      	mov	r0, r4
 8006422:	f000 fb9b 	bl	8006b5c <__mdiff>
 8006426:	68c2      	ldr	r2, [r0, #12]
 8006428:	f109 3bff 	add.w	fp, r9, #4294967295
 800642c:	4605      	mov	r5, r0
 800642e:	bb02      	cbnz	r2, 8006472 <_dtoa_r+0xa62>
 8006430:	4601      	mov	r1, r0
 8006432:	ee18 0a10 	vmov	r0, s16
 8006436:	f000 fb75 	bl	8006b24 <__mcmp>
 800643a:	4602      	mov	r2, r0
 800643c:	4629      	mov	r1, r5
 800643e:	4620      	mov	r0, r4
 8006440:	9207      	str	r2, [sp, #28]
 8006442:	f000 f92d 	bl	80066a0 <_Bfree>
 8006446:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800644a:	ea43 0102 	orr.w	r1, r3, r2
 800644e:	9b04      	ldr	r3, [sp, #16]
 8006450:	430b      	orrs	r3, r1
 8006452:	464d      	mov	r5, r9
 8006454:	d10f      	bne.n	8006476 <_dtoa_r+0xa66>
 8006456:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800645a:	d02a      	beq.n	80064b2 <_dtoa_r+0xaa2>
 800645c:	9b03      	ldr	r3, [sp, #12]
 800645e:	2b00      	cmp	r3, #0
 8006460:	dd02      	ble.n	8006468 <_dtoa_r+0xa58>
 8006462:	9b02      	ldr	r3, [sp, #8]
 8006464:	f103 0a31 	add.w	sl, r3, #49	; 0x31
 8006468:	f88b a000 	strb.w	sl, [fp]
 800646c:	e775      	b.n	800635a <_dtoa_r+0x94a>
 800646e:	4638      	mov	r0, r7
 8006470:	e7ba      	b.n	80063e8 <_dtoa_r+0x9d8>
 8006472:	2201      	movs	r2, #1
 8006474:	e7e2      	b.n	800643c <_dtoa_r+0xa2c>
 8006476:	9b03      	ldr	r3, [sp, #12]
 8006478:	2b00      	cmp	r3, #0
 800647a:	db04      	blt.n	8006486 <_dtoa_r+0xa76>
 800647c:	9906      	ldr	r1, [sp, #24]
 800647e:	430b      	orrs	r3, r1
 8006480:	9904      	ldr	r1, [sp, #16]
 8006482:	430b      	orrs	r3, r1
 8006484:	d122      	bne.n	80064cc <_dtoa_r+0xabc>
 8006486:	2a00      	cmp	r2, #0
 8006488:	ddee      	ble.n	8006468 <_dtoa_r+0xa58>
 800648a:	ee18 1a10 	vmov	r1, s16
 800648e:	2201      	movs	r2, #1
 8006490:	4620      	mov	r0, r4
 8006492:	f000 fad7 	bl	8006a44 <__lshift>
 8006496:	4631      	mov	r1, r6
 8006498:	ee08 0a10 	vmov	s16, r0
 800649c:	f000 fb42 	bl	8006b24 <__mcmp>
 80064a0:	2800      	cmp	r0, #0
 80064a2:	dc03      	bgt.n	80064ac <_dtoa_r+0xa9c>
 80064a4:	d1e0      	bne.n	8006468 <_dtoa_r+0xa58>
 80064a6:	f01a 0f01 	tst.w	sl, #1
 80064aa:	d0dd      	beq.n	8006468 <_dtoa_r+0xa58>
 80064ac:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 80064b0:	d1d7      	bne.n	8006462 <_dtoa_r+0xa52>
 80064b2:	2339      	movs	r3, #57	; 0x39
 80064b4:	f88b 3000 	strb.w	r3, [fp]
 80064b8:	462b      	mov	r3, r5
 80064ba:	461d      	mov	r5, r3
 80064bc:	3b01      	subs	r3, #1
 80064be:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 80064c2:	2a39      	cmp	r2, #57	; 0x39
 80064c4:	d071      	beq.n	80065aa <_dtoa_r+0xb9a>
 80064c6:	3201      	adds	r2, #1
 80064c8:	701a      	strb	r2, [r3, #0]
 80064ca:	e746      	b.n	800635a <_dtoa_r+0x94a>
 80064cc:	2a00      	cmp	r2, #0
 80064ce:	dd07      	ble.n	80064e0 <_dtoa_r+0xad0>
 80064d0:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 80064d4:	d0ed      	beq.n	80064b2 <_dtoa_r+0xaa2>
 80064d6:	f10a 0301 	add.w	r3, sl, #1
 80064da:	f88b 3000 	strb.w	r3, [fp]
 80064de:	e73c      	b.n	800635a <_dtoa_r+0x94a>
 80064e0:	9b05      	ldr	r3, [sp, #20]
 80064e2:	f809 ac01 	strb.w	sl, [r9, #-1]
 80064e6:	4599      	cmp	r9, r3
 80064e8:	d047      	beq.n	800657a <_dtoa_r+0xb6a>
 80064ea:	ee18 1a10 	vmov	r1, s16
 80064ee:	2300      	movs	r3, #0
 80064f0:	220a      	movs	r2, #10
 80064f2:	4620      	mov	r0, r4
 80064f4:	f000 f8f6 	bl	80066e4 <__multadd>
 80064f8:	45b8      	cmp	r8, r7
 80064fa:	ee08 0a10 	vmov	s16, r0
 80064fe:	f04f 0300 	mov.w	r3, #0
 8006502:	f04f 020a 	mov.w	r2, #10
 8006506:	4641      	mov	r1, r8
 8006508:	4620      	mov	r0, r4
 800650a:	d106      	bne.n	800651a <_dtoa_r+0xb0a>
 800650c:	f000 f8ea 	bl	80066e4 <__multadd>
 8006510:	4680      	mov	r8, r0
 8006512:	4607      	mov	r7, r0
 8006514:	f109 0901 	add.w	r9, r9, #1
 8006518:	e772      	b.n	8006400 <_dtoa_r+0x9f0>
 800651a:	f000 f8e3 	bl	80066e4 <__multadd>
 800651e:	4639      	mov	r1, r7
 8006520:	4680      	mov	r8, r0
 8006522:	2300      	movs	r3, #0
 8006524:	220a      	movs	r2, #10
 8006526:	4620      	mov	r0, r4
 8006528:	f000 f8dc 	bl	80066e4 <__multadd>
 800652c:	4607      	mov	r7, r0
 800652e:	e7f1      	b.n	8006514 <_dtoa_r+0xb04>
 8006530:	9b03      	ldr	r3, [sp, #12]
 8006532:	9302      	str	r3, [sp, #8]
 8006534:	9d01      	ldr	r5, [sp, #4]
 8006536:	ee18 0a10 	vmov	r0, s16
 800653a:	4631      	mov	r1, r6
 800653c:	f7ff f9da 	bl	80058f4 <quorem>
 8006540:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 8006544:	9b01      	ldr	r3, [sp, #4]
 8006546:	f805 ab01 	strb.w	sl, [r5], #1
 800654a:	1aea      	subs	r2, r5, r3
 800654c:	9b02      	ldr	r3, [sp, #8]
 800654e:	4293      	cmp	r3, r2
 8006550:	dd09      	ble.n	8006566 <_dtoa_r+0xb56>
 8006552:	ee18 1a10 	vmov	r1, s16
 8006556:	2300      	movs	r3, #0
 8006558:	220a      	movs	r2, #10
 800655a:	4620      	mov	r0, r4
 800655c:	f000 f8c2 	bl	80066e4 <__multadd>
 8006560:	ee08 0a10 	vmov	s16, r0
 8006564:	e7e7      	b.n	8006536 <_dtoa_r+0xb26>
 8006566:	9b02      	ldr	r3, [sp, #8]
 8006568:	2b00      	cmp	r3, #0
 800656a:	bfc8      	it	gt
 800656c:	461d      	movgt	r5, r3
 800656e:	9b01      	ldr	r3, [sp, #4]
 8006570:	bfd8      	it	le
 8006572:	2501      	movle	r5, #1
 8006574:	441d      	add	r5, r3
 8006576:	f04f 0800 	mov.w	r8, #0
 800657a:	ee18 1a10 	vmov	r1, s16
 800657e:	2201      	movs	r2, #1
 8006580:	4620      	mov	r0, r4
 8006582:	f000 fa5f 	bl	8006a44 <__lshift>
 8006586:	4631      	mov	r1, r6
 8006588:	ee08 0a10 	vmov	s16, r0
 800658c:	f000 faca 	bl	8006b24 <__mcmp>
 8006590:	2800      	cmp	r0, #0
 8006592:	dc91      	bgt.n	80064b8 <_dtoa_r+0xaa8>
 8006594:	d102      	bne.n	800659c <_dtoa_r+0xb8c>
 8006596:	f01a 0f01 	tst.w	sl, #1
 800659a:	d18d      	bne.n	80064b8 <_dtoa_r+0xaa8>
 800659c:	462b      	mov	r3, r5
 800659e:	461d      	mov	r5, r3
 80065a0:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80065a4:	2a30      	cmp	r2, #48	; 0x30
 80065a6:	d0fa      	beq.n	800659e <_dtoa_r+0xb8e>
 80065a8:	e6d7      	b.n	800635a <_dtoa_r+0x94a>
 80065aa:	9a01      	ldr	r2, [sp, #4]
 80065ac:	429a      	cmp	r2, r3
 80065ae:	d184      	bne.n	80064ba <_dtoa_r+0xaaa>
 80065b0:	9b00      	ldr	r3, [sp, #0]
 80065b2:	3301      	adds	r3, #1
 80065b4:	9300      	str	r3, [sp, #0]
 80065b6:	2331      	movs	r3, #49	; 0x31
 80065b8:	7013      	strb	r3, [r2, #0]
 80065ba:	e6ce      	b.n	800635a <_dtoa_r+0x94a>
 80065bc:	4b09      	ldr	r3, [pc, #36]	; (80065e4 <_dtoa_r+0xbd4>)
 80065be:	f7ff ba95 	b.w	8005aec <_dtoa_r+0xdc>
 80065c2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80065c4:	2b00      	cmp	r3, #0
 80065c6:	f47f aa6e 	bne.w	8005aa6 <_dtoa_r+0x96>
 80065ca:	4b07      	ldr	r3, [pc, #28]	; (80065e8 <_dtoa_r+0xbd8>)
 80065cc:	f7ff ba8e 	b.w	8005aec <_dtoa_r+0xdc>
 80065d0:	9b02      	ldr	r3, [sp, #8]
 80065d2:	2b00      	cmp	r3, #0
 80065d4:	dcae      	bgt.n	8006534 <_dtoa_r+0xb24>
 80065d6:	9b06      	ldr	r3, [sp, #24]
 80065d8:	2b02      	cmp	r3, #2
 80065da:	f73f aea8 	bgt.w	800632e <_dtoa_r+0x91e>
 80065de:	e7a9      	b.n	8006534 <_dtoa_r+0xb24>
 80065e0:	08007f73 	.word	0x08007f73
 80065e4:	08007ed0 	.word	0x08007ed0
 80065e8:	08007ef4 	.word	0x08007ef4

080065ec <_localeconv_r>:
 80065ec:	4800      	ldr	r0, [pc, #0]	; (80065f0 <_localeconv_r+0x4>)
 80065ee:	4770      	bx	lr
 80065f0:	20000164 	.word	0x20000164

080065f4 <malloc>:
 80065f4:	4b02      	ldr	r3, [pc, #8]	; (8006600 <malloc+0xc>)
 80065f6:	4601      	mov	r1, r0
 80065f8:	6818      	ldr	r0, [r3, #0]
 80065fa:	f000 bc17 	b.w	8006e2c <_malloc_r>
 80065fe:	bf00      	nop
 8006600:	20000010 	.word	0x20000010

08006604 <memcpy>:
 8006604:	440a      	add	r2, r1
 8006606:	4291      	cmp	r1, r2
 8006608:	f100 33ff 	add.w	r3, r0, #4294967295
 800660c:	d100      	bne.n	8006610 <memcpy+0xc>
 800660e:	4770      	bx	lr
 8006610:	b510      	push	{r4, lr}
 8006612:	f811 4b01 	ldrb.w	r4, [r1], #1
 8006616:	f803 4f01 	strb.w	r4, [r3, #1]!
 800661a:	4291      	cmp	r1, r2
 800661c:	d1f9      	bne.n	8006612 <memcpy+0xe>
 800661e:	bd10      	pop	{r4, pc}

08006620 <_Balloc>:
 8006620:	b570      	push	{r4, r5, r6, lr}
 8006622:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8006624:	4604      	mov	r4, r0
 8006626:	460d      	mov	r5, r1
 8006628:	b976      	cbnz	r6, 8006648 <_Balloc+0x28>
 800662a:	2010      	movs	r0, #16
 800662c:	f7ff ffe2 	bl	80065f4 <malloc>
 8006630:	4602      	mov	r2, r0
 8006632:	6260      	str	r0, [r4, #36]	; 0x24
 8006634:	b920      	cbnz	r0, 8006640 <_Balloc+0x20>
 8006636:	4b18      	ldr	r3, [pc, #96]	; (8006698 <_Balloc+0x78>)
 8006638:	4818      	ldr	r0, [pc, #96]	; (800669c <_Balloc+0x7c>)
 800663a:	2166      	movs	r1, #102	; 0x66
 800663c:	f000 fdd6 	bl	80071ec <__assert_func>
 8006640:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8006644:	6006      	str	r6, [r0, #0]
 8006646:	60c6      	str	r6, [r0, #12]
 8006648:	6a66      	ldr	r6, [r4, #36]	; 0x24
 800664a:	68f3      	ldr	r3, [r6, #12]
 800664c:	b183      	cbz	r3, 8006670 <_Balloc+0x50>
 800664e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006650:	68db      	ldr	r3, [r3, #12]
 8006652:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8006656:	b9b8      	cbnz	r0, 8006688 <_Balloc+0x68>
 8006658:	2101      	movs	r1, #1
 800665a:	fa01 f605 	lsl.w	r6, r1, r5
 800665e:	1d72      	adds	r2, r6, #5
 8006660:	0092      	lsls	r2, r2, #2
 8006662:	4620      	mov	r0, r4
 8006664:	f000 fb60 	bl	8006d28 <_calloc_r>
 8006668:	b160      	cbz	r0, 8006684 <_Balloc+0x64>
 800666a:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800666e:	e00e      	b.n	800668e <_Balloc+0x6e>
 8006670:	2221      	movs	r2, #33	; 0x21
 8006672:	2104      	movs	r1, #4
 8006674:	4620      	mov	r0, r4
 8006676:	f000 fb57 	bl	8006d28 <_calloc_r>
 800667a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800667c:	60f0      	str	r0, [r6, #12]
 800667e:	68db      	ldr	r3, [r3, #12]
 8006680:	2b00      	cmp	r3, #0
 8006682:	d1e4      	bne.n	800664e <_Balloc+0x2e>
 8006684:	2000      	movs	r0, #0
 8006686:	bd70      	pop	{r4, r5, r6, pc}
 8006688:	6802      	ldr	r2, [r0, #0]
 800668a:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800668e:	2300      	movs	r3, #0
 8006690:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8006694:	e7f7      	b.n	8006686 <_Balloc+0x66>
 8006696:	bf00      	nop
 8006698:	08007f01 	.word	0x08007f01
 800669c:	08007f84 	.word	0x08007f84

080066a0 <_Bfree>:
 80066a0:	b570      	push	{r4, r5, r6, lr}
 80066a2:	6a46      	ldr	r6, [r0, #36]	; 0x24
 80066a4:	4605      	mov	r5, r0
 80066a6:	460c      	mov	r4, r1
 80066a8:	b976      	cbnz	r6, 80066c8 <_Bfree+0x28>
 80066aa:	2010      	movs	r0, #16
 80066ac:	f7ff ffa2 	bl	80065f4 <malloc>
 80066b0:	4602      	mov	r2, r0
 80066b2:	6268      	str	r0, [r5, #36]	; 0x24
 80066b4:	b920      	cbnz	r0, 80066c0 <_Bfree+0x20>
 80066b6:	4b09      	ldr	r3, [pc, #36]	; (80066dc <_Bfree+0x3c>)
 80066b8:	4809      	ldr	r0, [pc, #36]	; (80066e0 <_Bfree+0x40>)
 80066ba:	218a      	movs	r1, #138	; 0x8a
 80066bc:	f000 fd96 	bl	80071ec <__assert_func>
 80066c0:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80066c4:	6006      	str	r6, [r0, #0]
 80066c6:	60c6      	str	r6, [r0, #12]
 80066c8:	b13c      	cbz	r4, 80066da <_Bfree+0x3a>
 80066ca:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 80066cc:	6862      	ldr	r2, [r4, #4]
 80066ce:	68db      	ldr	r3, [r3, #12]
 80066d0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80066d4:	6021      	str	r1, [r4, #0]
 80066d6:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 80066da:	bd70      	pop	{r4, r5, r6, pc}
 80066dc:	08007f01 	.word	0x08007f01
 80066e0:	08007f84 	.word	0x08007f84

080066e4 <__multadd>:
 80066e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80066e8:	690d      	ldr	r5, [r1, #16]
 80066ea:	4607      	mov	r7, r0
 80066ec:	460c      	mov	r4, r1
 80066ee:	461e      	mov	r6, r3
 80066f0:	f101 0c14 	add.w	ip, r1, #20
 80066f4:	2000      	movs	r0, #0
 80066f6:	f8dc 3000 	ldr.w	r3, [ip]
 80066fa:	b299      	uxth	r1, r3
 80066fc:	fb02 6101 	mla	r1, r2, r1, r6
 8006700:	0c1e      	lsrs	r6, r3, #16
 8006702:	0c0b      	lsrs	r3, r1, #16
 8006704:	fb02 3306 	mla	r3, r2, r6, r3
 8006708:	b289      	uxth	r1, r1
 800670a:	3001      	adds	r0, #1
 800670c:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8006710:	4285      	cmp	r5, r0
 8006712:	f84c 1b04 	str.w	r1, [ip], #4
 8006716:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800671a:	dcec      	bgt.n	80066f6 <__multadd+0x12>
 800671c:	b30e      	cbz	r6, 8006762 <__multadd+0x7e>
 800671e:	68a3      	ldr	r3, [r4, #8]
 8006720:	42ab      	cmp	r3, r5
 8006722:	dc19      	bgt.n	8006758 <__multadd+0x74>
 8006724:	6861      	ldr	r1, [r4, #4]
 8006726:	4638      	mov	r0, r7
 8006728:	3101      	adds	r1, #1
 800672a:	f7ff ff79 	bl	8006620 <_Balloc>
 800672e:	4680      	mov	r8, r0
 8006730:	b928      	cbnz	r0, 800673e <__multadd+0x5a>
 8006732:	4602      	mov	r2, r0
 8006734:	4b0c      	ldr	r3, [pc, #48]	; (8006768 <__multadd+0x84>)
 8006736:	480d      	ldr	r0, [pc, #52]	; (800676c <__multadd+0x88>)
 8006738:	21b5      	movs	r1, #181	; 0xb5
 800673a:	f000 fd57 	bl	80071ec <__assert_func>
 800673e:	6922      	ldr	r2, [r4, #16]
 8006740:	3202      	adds	r2, #2
 8006742:	f104 010c 	add.w	r1, r4, #12
 8006746:	0092      	lsls	r2, r2, #2
 8006748:	300c      	adds	r0, #12
 800674a:	f7ff ff5b 	bl	8006604 <memcpy>
 800674e:	4621      	mov	r1, r4
 8006750:	4638      	mov	r0, r7
 8006752:	f7ff ffa5 	bl	80066a0 <_Bfree>
 8006756:	4644      	mov	r4, r8
 8006758:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 800675c:	3501      	adds	r5, #1
 800675e:	615e      	str	r6, [r3, #20]
 8006760:	6125      	str	r5, [r4, #16]
 8006762:	4620      	mov	r0, r4
 8006764:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006768:	08007f73 	.word	0x08007f73
 800676c:	08007f84 	.word	0x08007f84

08006770 <__hi0bits>:
 8006770:	0c03      	lsrs	r3, r0, #16
 8006772:	041b      	lsls	r3, r3, #16
 8006774:	b9d3      	cbnz	r3, 80067ac <__hi0bits+0x3c>
 8006776:	0400      	lsls	r0, r0, #16
 8006778:	2310      	movs	r3, #16
 800677a:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 800677e:	bf04      	itt	eq
 8006780:	0200      	lsleq	r0, r0, #8
 8006782:	3308      	addeq	r3, #8
 8006784:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 8006788:	bf04      	itt	eq
 800678a:	0100      	lsleq	r0, r0, #4
 800678c:	3304      	addeq	r3, #4
 800678e:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 8006792:	bf04      	itt	eq
 8006794:	0080      	lsleq	r0, r0, #2
 8006796:	3302      	addeq	r3, #2
 8006798:	2800      	cmp	r0, #0
 800679a:	db05      	blt.n	80067a8 <__hi0bits+0x38>
 800679c:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 80067a0:	f103 0301 	add.w	r3, r3, #1
 80067a4:	bf08      	it	eq
 80067a6:	2320      	moveq	r3, #32
 80067a8:	4618      	mov	r0, r3
 80067aa:	4770      	bx	lr
 80067ac:	2300      	movs	r3, #0
 80067ae:	e7e4      	b.n	800677a <__hi0bits+0xa>

080067b0 <__lo0bits>:
 80067b0:	6803      	ldr	r3, [r0, #0]
 80067b2:	f013 0207 	ands.w	r2, r3, #7
 80067b6:	4601      	mov	r1, r0
 80067b8:	d00b      	beq.n	80067d2 <__lo0bits+0x22>
 80067ba:	07da      	lsls	r2, r3, #31
 80067bc:	d423      	bmi.n	8006806 <__lo0bits+0x56>
 80067be:	0798      	lsls	r0, r3, #30
 80067c0:	bf49      	itett	mi
 80067c2:	085b      	lsrmi	r3, r3, #1
 80067c4:	089b      	lsrpl	r3, r3, #2
 80067c6:	2001      	movmi	r0, #1
 80067c8:	600b      	strmi	r3, [r1, #0]
 80067ca:	bf5c      	itt	pl
 80067cc:	600b      	strpl	r3, [r1, #0]
 80067ce:	2002      	movpl	r0, #2
 80067d0:	4770      	bx	lr
 80067d2:	b298      	uxth	r0, r3
 80067d4:	b9a8      	cbnz	r0, 8006802 <__lo0bits+0x52>
 80067d6:	0c1b      	lsrs	r3, r3, #16
 80067d8:	2010      	movs	r0, #16
 80067da:	b2da      	uxtb	r2, r3
 80067dc:	b90a      	cbnz	r2, 80067e2 <__lo0bits+0x32>
 80067de:	3008      	adds	r0, #8
 80067e0:	0a1b      	lsrs	r3, r3, #8
 80067e2:	071a      	lsls	r2, r3, #28
 80067e4:	bf04      	itt	eq
 80067e6:	091b      	lsreq	r3, r3, #4
 80067e8:	3004      	addeq	r0, #4
 80067ea:	079a      	lsls	r2, r3, #30
 80067ec:	bf04      	itt	eq
 80067ee:	089b      	lsreq	r3, r3, #2
 80067f0:	3002      	addeq	r0, #2
 80067f2:	07da      	lsls	r2, r3, #31
 80067f4:	d403      	bmi.n	80067fe <__lo0bits+0x4e>
 80067f6:	085b      	lsrs	r3, r3, #1
 80067f8:	f100 0001 	add.w	r0, r0, #1
 80067fc:	d005      	beq.n	800680a <__lo0bits+0x5a>
 80067fe:	600b      	str	r3, [r1, #0]
 8006800:	4770      	bx	lr
 8006802:	4610      	mov	r0, r2
 8006804:	e7e9      	b.n	80067da <__lo0bits+0x2a>
 8006806:	2000      	movs	r0, #0
 8006808:	4770      	bx	lr
 800680a:	2020      	movs	r0, #32
 800680c:	4770      	bx	lr
	...

08006810 <__i2b>:
 8006810:	b510      	push	{r4, lr}
 8006812:	460c      	mov	r4, r1
 8006814:	2101      	movs	r1, #1
 8006816:	f7ff ff03 	bl	8006620 <_Balloc>
 800681a:	4602      	mov	r2, r0
 800681c:	b928      	cbnz	r0, 800682a <__i2b+0x1a>
 800681e:	4b05      	ldr	r3, [pc, #20]	; (8006834 <__i2b+0x24>)
 8006820:	4805      	ldr	r0, [pc, #20]	; (8006838 <__i2b+0x28>)
 8006822:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8006826:	f000 fce1 	bl	80071ec <__assert_func>
 800682a:	2301      	movs	r3, #1
 800682c:	6144      	str	r4, [r0, #20]
 800682e:	6103      	str	r3, [r0, #16]
 8006830:	bd10      	pop	{r4, pc}
 8006832:	bf00      	nop
 8006834:	08007f73 	.word	0x08007f73
 8006838:	08007f84 	.word	0x08007f84

0800683c <__multiply>:
 800683c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006840:	4691      	mov	r9, r2
 8006842:	690a      	ldr	r2, [r1, #16]
 8006844:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8006848:	429a      	cmp	r2, r3
 800684a:	bfb8      	it	lt
 800684c:	460b      	movlt	r3, r1
 800684e:	460c      	mov	r4, r1
 8006850:	bfbc      	itt	lt
 8006852:	464c      	movlt	r4, r9
 8006854:	4699      	movlt	r9, r3
 8006856:	6927      	ldr	r7, [r4, #16]
 8006858:	f8d9 a010 	ldr.w	sl, [r9, #16]
 800685c:	68a3      	ldr	r3, [r4, #8]
 800685e:	6861      	ldr	r1, [r4, #4]
 8006860:	eb07 060a 	add.w	r6, r7, sl
 8006864:	42b3      	cmp	r3, r6
 8006866:	b085      	sub	sp, #20
 8006868:	bfb8      	it	lt
 800686a:	3101      	addlt	r1, #1
 800686c:	f7ff fed8 	bl	8006620 <_Balloc>
 8006870:	b930      	cbnz	r0, 8006880 <__multiply+0x44>
 8006872:	4602      	mov	r2, r0
 8006874:	4b44      	ldr	r3, [pc, #272]	; (8006988 <__multiply+0x14c>)
 8006876:	4845      	ldr	r0, [pc, #276]	; (800698c <__multiply+0x150>)
 8006878:	f240 115d 	movw	r1, #349	; 0x15d
 800687c:	f000 fcb6 	bl	80071ec <__assert_func>
 8006880:	f100 0514 	add.w	r5, r0, #20
 8006884:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8006888:	462b      	mov	r3, r5
 800688a:	2200      	movs	r2, #0
 800688c:	4543      	cmp	r3, r8
 800688e:	d321      	bcc.n	80068d4 <__multiply+0x98>
 8006890:	f104 0314 	add.w	r3, r4, #20
 8006894:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 8006898:	f109 0314 	add.w	r3, r9, #20
 800689c:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 80068a0:	9202      	str	r2, [sp, #8]
 80068a2:	1b3a      	subs	r2, r7, r4
 80068a4:	3a15      	subs	r2, #21
 80068a6:	f022 0203 	bic.w	r2, r2, #3
 80068aa:	3204      	adds	r2, #4
 80068ac:	f104 0115 	add.w	r1, r4, #21
 80068b0:	428f      	cmp	r7, r1
 80068b2:	bf38      	it	cc
 80068b4:	2204      	movcc	r2, #4
 80068b6:	9201      	str	r2, [sp, #4]
 80068b8:	9a02      	ldr	r2, [sp, #8]
 80068ba:	9303      	str	r3, [sp, #12]
 80068bc:	429a      	cmp	r2, r3
 80068be:	d80c      	bhi.n	80068da <__multiply+0x9e>
 80068c0:	2e00      	cmp	r6, #0
 80068c2:	dd03      	ble.n	80068cc <__multiply+0x90>
 80068c4:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 80068c8:	2b00      	cmp	r3, #0
 80068ca:	d05a      	beq.n	8006982 <__multiply+0x146>
 80068cc:	6106      	str	r6, [r0, #16]
 80068ce:	b005      	add	sp, #20
 80068d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80068d4:	f843 2b04 	str.w	r2, [r3], #4
 80068d8:	e7d8      	b.n	800688c <__multiply+0x50>
 80068da:	f8b3 a000 	ldrh.w	sl, [r3]
 80068de:	f1ba 0f00 	cmp.w	sl, #0
 80068e2:	d024      	beq.n	800692e <__multiply+0xf2>
 80068e4:	f104 0e14 	add.w	lr, r4, #20
 80068e8:	46a9      	mov	r9, r5
 80068ea:	f04f 0c00 	mov.w	ip, #0
 80068ee:	f85e 2b04 	ldr.w	r2, [lr], #4
 80068f2:	f8d9 1000 	ldr.w	r1, [r9]
 80068f6:	fa1f fb82 	uxth.w	fp, r2
 80068fa:	b289      	uxth	r1, r1
 80068fc:	fb0a 110b 	mla	r1, sl, fp, r1
 8006900:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 8006904:	f8d9 2000 	ldr.w	r2, [r9]
 8006908:	4461      	add	r1, ip
 800690a:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800690e:	fb0a c20b 	mla	r2, sl, fp, ip
 8006912:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 8006916:	b289      	uxth	r1, r1
 8006918:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800691c:	4577      	cmp	r7, lr
 800691e:	f849 1b04 	str.w	r1, [r9], #4
 8006922:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 8006926:	d8e2      	bhi.n	80068ee <__multiply+0xb2>
 8006928:	9a01      	ldr	r2, [sp, #4]
 800692a:	f845 c002 	str.w	ip, [r5, r2]
 800692e:	9a03      	ldr	r2, [sp, #12]
 8006930:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 8006934:	3304      	adds	r3, #4
 8006936:	f1b9 0f00 	cmp.w	r9, #0
 800693a:	d020      	beq.n	800697e <__multiply+0x142>
 800693c:	6829      	ldr	r1, [r5, #0]
 800693e:	f104 0c14 	add.w	ip, r4, #20
 8006942:	46ae      	mov	lr, r5
 8006944:	f04f 0a00 	mov.w	sl, #0
 8006948:	f8bc b000 	ldrh.w	fp, [ip]
 800694c:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8006950:	fb09 220b 	mla	r2, r9, fp, r2
 8006954:	4492      	add	sl, r2
 8006956:	b289      	uxth	r1, r1
 8006958:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 800695c:	f84e 1b04 	str.w	r1, [lr], #4
 8006960:	f85c 2b04 	ldr.w	r2, [ip], #4
 8006964:	f8be 1000 	ldrh.w	r1, [lr]
 8006968:	0c12      	lsrs	r2, r2, #16
 800696a:	fb09 1102 	mla	r1, r9, r2, r1
 800696e:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 8006972:	4567      	cmp	r7, ip
 8006974:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8006978:	d8e6      	bhi.n	8006948 <__multiply+0x10c>
 800697a:	9a01      	ldr	r2, [sp, #4]
 800697c:	50a9      	str	r1, [r5, r2]
 800697e:	3504      	adds	r5, #4
 8006980:	e79a      	b.n	80068b8 <__multiply+0x7c>
 8006982:	3e01      	subs	r6, #1
 8006984:	e79c      	b.n	80068c0 <__multiply+0x84>
 8006986:	bf00      	nop
 8006988:	08007f73 	.word	0x08007f73
 800698c:	08007f84 	.word	0x08007f84

08006990 <__pow5mult>:
 8006990:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006994:	4615      	mov	r5, r2
 8006996:	f012 0203 	ands.w	r2, r2, #3
 800699a:	4606      	mov	r6, r0
 800699c:	460f      	mov	r7, r1
 800699e:	d007      	beq.n	80069b0 <__pow5mult+0x20>
 80069a0:	4c25      	ldr	r4, [pc, #148]	; (8006a38 <__pow5mult+0xa8>)
 80069a2:	3a01      	subs	r2, #1
 80069a4:	2300      	movs	r3, #0
 80069a6:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 80069aa:	f7ff fe9b 	bl	80066e4 <__multadd>
 80069ae:	4607      	mov	r7, r0
 80069b0:	10ad      	asrs	r5, r5, #2
 80069b2:	d03d      	beq.n	8006a30 <__pow5mult+0xa0>
 80069b4:	6a74      	ldr	r4, [r6, #36]	; 0x24
 80069b6:	b97c      	cbnz	r4, 80069d8 <__pow5mult+0x48>
 80069b8:	2010      	movs	r0, #16
 80069ba:	f7ff fe1b 	bl	80065f4 <malloc>
 80069be:	4602      	mov	r2, r0
 80069c0:	6270      	str	r0, [r6, #36]	; 0x24
 80069c2:	b928      	cbnz	r0, 80069d0 <__pow5mult+0x40>
 80069c4:	4b1d      	ldr	r3, [pc, #116]	; (8006a3c <__pow5mult+0xac>)
 80069c6:	481e      	ldr	r0, [pc, #120]	; (8006a40 <__pow5mult+0xb0>)
 80069c8:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 80069cc:	f000 fc0e 	bl	80071ec <__assert_func>
 80069d0:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80069d4:	6004      	str	r4, [r0, #0]
 80069d6:	60c4      	str	r4, [r0, #12]
 80069d8:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 80069dc:	f8d8 4008 	ldr.w	r4, [r8, #8]
 80069e0:	b94c      	cbnz	r4, 80069f6 <__pow5mult+0x66>
 80069e2:	f240 2171 	movw	r1, #625	; 0x271
 80069e6:	4630      	mov	r0, r6
 80069e8:	f7ff ff12 	bl	8006810 <__i2b>
 80069ec:	2300      	movs	r3, #0
 80069ee:	f8c8 0008 	str.w	r0, [r8, #8]
 80069f2:	4604      	mov	r4, r0
 80069f4:	6003      	str	r3, [r0, #0]
 80069f6:	f04f 0900 	mov.w	r9, #0
 80069fa:	07eb      	lsls	r3, r5, #31
 80069fc:	d50a      	bpl.n	8006a14 <__pow5mult+0x84>
 80069fe:	4639      	mov	r1, r7
 8006a00:	4622      	mov	r2, r4
 8006a02:	4630      	mov	r0, r6
 8006a04:	f7ff ff1a 	bl	800683c <__multiply>
 8006a08:	4639      	mov	r1, r7
 8006a0a:	4680      	mov	r8, r0
 8006a0c:	4630      	mov	r0, r6
 8006a0e:	f7ff fe47 	bl	80066a0 <_Bfree>
 8006a12:	4647      	mov	r7, r8
 8006a14:	106d      	asrs	r5, r5, #1
 8006a16:	d00b      	beq.n	8006a30 <__pow5mult+0xa0>
 8006a18:	6820      	ldr	r0, [r4, #0]
 8006a1a:	b938      	cbnz	r0, 8006a2c <__pow5mult+0x9c>
 8006a1c:	4622      	mov	r2, r4
 8006a1e:	4621      	mov	r1, r4
 8006a20:	4630      	mov	r0, r6
 8006a22:	f7ff ff0b 	bl	800683c <__multiply>
 8006a26:	6020      	str	r0, [r4, #0]
 8006a28:	f8c0 9000 	str.w	r9, [r0]
 8006a2c:	4604      	mov	r4, r0
 8006a2e:	e7e4      	b.n	80069fa <__pow5mult+0x6a>
 8006a30:	4638      	mov	r0, r7
 8006a32:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006a36:	bf00      	nop
 8006a38:	080080d0 	.word	0x080080d0
 8006a3c:	08007f01 	.word	0x08007f01
 8006a40:	08007f84 	.word	0x08007f84

08006a44 <__lshift>:
 8006a44:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006a48:	460c      	mov	r4, r1
 8006a4a:	6849      	ldr	r1, [r1, #4]
 8006a4c:	6923      	ldr	r3, [r4, #16]
 8006a4e:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8006a52:	68a3      	ldr	r3, [r4, #8]
 8006a54:	4607      	mov	r7, r0
 8006a56:	4691      	mov	r9, r2
 8006a58:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8006a5c:	f108 0601 	add.w	r6, r8, #1
 8006a60:	42b3      	cmp	r3, r6
 8006a62:	db0b      	blt.n	8006a7c <__lshift+0x38>
 8006a64:	4638      	mov	r0, r7
 8006a66:	f7ff fddb 	bl	8006620 <_Balloc>
 8006a6a:	4605      	mov	r5, r0
 8006a6c:	b948      	cbnz	r0, 8006a82 <__lshift+0x3e>
 8006a6e:	4602      	mov	r2, r0
 8006a70:	4b2a      	ldr	r3, [pc, #168]	; (8006b1c <__lshift+0xd8>)
 8006a72:	482b      	ldr	r0, [pc, #172]	; (8006b20 <__lshift+0xdc>)
 8006a74:	f240 11d9 	movw	r1, #473	; 0x1d9
 8006a78:	f000 fbb8 	bl	80071ec <__assert_func>
 8006a7c:	3101      	adds	r1, #1
 8006a7e:	005b      	lsls	r3, r3, #1
 8006a80:	e7ee      	b.n	8006a60 <__lshift+0x1c>
 8006a82:	2300      	movs	r3, #0
 8006a84:	f100 0114 	add.w	r1, r0, #20
 8006a88:	f100 0210 	add.w	r2, r0, #16
 8006a8c:	4618      	mov	r0, r3
 8006a8e:	4553      	cmp	r3, sl
 8006a90:	db37      	blt.n	8006b02 <__lshift+0xbe>
 8006a92:	6920      	ldr	r0, [r4, #16]
 8006a94:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8006a98:	f104 0314 	add.w	r3, r4, #20
 8006a9c:	f019 091f 	ands.w	r9, r9, #31
 8006aa0:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8006aa4:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8006aa8:	d02f      	beq.n	8006b0a <__lshift+0xc6>
 8006aaa:	f1c9 0e20 	rsb	lr, r9, #32
 8006aae:	468a      	mov	sl, r1
 8006ab0:	f04f 0c00 	mov.w	ip, #0
 8006ab4:	681a      	ldr	r2, [r3, #0]
 8006ab6:	fa02 f209 	lsl.w	r2, r2, r9
 8006aba:	ea42 020c 	orr.w	r2, r2, ip
 8006abe:	f84a 2b04 	str.w	r2, [sl], #4
 8006ac2:	f853 2b04 	ldr.w	r2, [r3], #4
 8006ac6:	4298      	cmp	r0, r3
 8006ac8:	fa22 fc0e 	lsr.w	ip, r2, lr
 8006acc:	d8f2      	bhi.n	8006ab4 <__lshift+0x70>
 8006ace:	1b03      	subs	r3, r0, r4
 8006ad0:	3b15      	subs	r3, #21
 8006ad2:	f023 0303 	bic.w	r3, r3, #3
 8006ad6:	3304      	adds	r3, #4
 8006ad8:	f104 0215 	add.w	r2, r4, #21
 8006adc:	4290      	cmp	r0, r2
 8006ade:	bf38      	it	cc
 8006ae0:	2304      	movcc	r3, #4
 8006ae2:	f841 c003 	str.w	ip, [r1, r3]
 8006ae6:	f1bc 0f00 	cmp.w	ip, #0
 8006aea:	d001      	beq.n	8006af0 <__lshift+0xac>
 8006aec:	f108 0602 	add.w	r6, r8, #2
 8006af0:	3e01      	subs	r6, #1
 8006af2:	4638      	mov	r0, r7
 8006af4:	612e      	str	r6, [r5, #16]
 8006af6:	4621      	mov	r1, r4
 8006af8:	f7ff fdd2 	bl	80066a0 <_Bfree>
 8006afc:	4628      	mov	r0, r5
 8006afe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006b02:	f842 0f04 	str.w	r0, [r2, #4]!
 8006b06:	3301      	adds	r3, #1
 8006b08:	e7c1      	b.n	8006a8e <__lshift+0x4a>
 8006b0a:	3904      	subs	r1, #4
 8006b0c:	f853 2b04 	ldr.w	r2, [r3], #4
 8006b10:	f841 2f04 	str.w	r2, [r1, #4]!
 8006b14:	4298      	cmp	r0, r3
 8006b16:	d8f9      	bhi.n	8006b0c <__lshift+0xc8>
 8006b18:	e7ea      	b.n	8006af0 <__lshift+0xac>
 8006b1a:	bf00      	nop
 8006b1c:	08007f73 	.word	0x08007f73
 8006b20:	08007f84 	.word	0x08007f84

08006b24 <__mcmp>:
 8006b24:	b530      	push	{r4, r5, lr}
 8006b26:	6902      	ldr	r2, [r0, #16]
 8006b28:	690c      	ldr	r4, [r1, #16]
 8006b2a:	1b12      	subs	r2, r2, r4
 8006b2c:	d10e      	bne.n	8006b4c <__mcmp+0x28>
 8006b2e:	f100 0314 	add.w	r3, r0, #20
 8006b32:	3114      	adds	r1, #20
 8006b34:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 8006b38:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 8006b3c:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 8006b40:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 8006b44:	42a5      	cmp	r5, r4
 8006b46:	d003      	beq.n	8006b50 <__mcmp+0x2c>
 8006b48:	d305      	bcc.n	8006b56 <__mcmp+0x32>
 8006b4a:	2201      	movs	r2, #1
 8006b4c:	4610      	mov	r0, r2
 8006b4e:	bd30      	pop	{r4, r5, pc}
 8006b50:	4283      	cmp	r3, r0
 8006b52:	d3f3      	bcc.n	8006b3c <__mcmp+0x18>
 8006b54:	e7fa      	b.n	8006b4c <__mcmp+0x28>
 8006b56:	f04f 32ff 	mov.w	r2, #4294967295
 8006b5a:	e7f7      	b.n	8006b4c <__mcmp+0x28>

08006b5c <__mdiff>:
 8006b5c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006b60:	460c      	mov	r4, r1
 8006b62:	4606      	mov	r6, r0
 8006b64:	4611      	mov	r1, r2
 8006b66:	4620      	mov	r0, r4
 8006b68:	4690      	mov	r8, r2
 8006b6a:	f7ff ffdb 	bl	8006b24 <__mcmp>
 8006b6e:	1e05      	subs	r5, r0, #0
 8006b70:	d110      	bne.n	8006b94 <__mdiff+0x38>
 8006b72:	4629      	mov	r1, r5
 8006b74:	4630      	mov	r0, r6
 8006b76:	f7ff fd53 	bl	8006620 <_Balloc>
 8006b7a:	b930      	cbnz	r0, 8006b8a <__mdiff+0x2e>
 8006b7c:	4b3a      	ldr	r3, [pc, #232]	; (8006c68 <__mdiff+0x10c>)
 8006b7e:	4602      	mov	r2, r0
 8006b80:	f240 2132 	movw	r1, #562	; 0x232
 8006b84:	4839      	ldr	r0, [pc, #228]	; (8006c6c <__mdiff+0x110>)
 8006b86:	f000 fb31 	bl	80071ec <__assert_func>
 8006b8a:	2301      	movs	r3, #1
 8006b8c:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8006b90:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006b94:	bfa4      	itt	ge
 8006b96:	4643      	movge	r3, r8
 8006b98:	46a0      	movge	r8, r4
 8006b9a:	4630      	mov	r0, r6
 8006b9c:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8006ba0:	bfa6      	itte	ge
 8006ba2:	461c      	movge	r4, r3
 8006ba4:	2500      	movge	r5, #0
 8006ba6:	2501      	movlt	r5, #1
 8006ba8:	f7ff fd3a 	bl	8006620 <_Balloc>
 8006bac:	b920      	cbnz	r0, 8006bb8 <__mdiff+0x5c>
 8006bae:	4b2e      	ldr	r3, [pc, #184]	; (8006c68 <__mdiff+0x10c>)
 8006bb0:	4602      	mov	r2, r0
 8006bb2:	f44f 7110 	mov.w	r1, #576	; 0x240
 8006bb6:	e7e5      	b.n	8006b84 <__mdiff+0x28>
 8006bb8:	f8d8 7010 	ldr.w	r7, [r8, #16]
 8006bbc:	6926      	ldr	r6, [r4, #16]
 8006bbe:	60c5      	str	r5, [r0, #12]
 8006bc0:	f104 0914 	add.w	r9, r4, #20
 8006bc4:	f108 0514 	add.w	r5, r8, #20
 8006bc8:	f100 0e14 	add.w	lr, r0, #20
 8006bcc:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 8006bd0:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 8006bd4:	f108 0210 	add.w	r2, r8, #16
 8006bd8:	46f2      	mov	sl, lr
 8006bda:	2100      	movs	r1, #0
 8006bdc:	f859 3b04 	ldr.w	r3, [r9], #4
 8006be0:	f852 bf04 	ldr.w	fp, [r2, #4]!
 8006be4:	fa1f f883 	uxth.w	r8, r3
 8006be8:	fa11 f18b 	uxtah	r1, r1, fp
 8006bec:	0c1b      	lsrs	r3, r3, #16
 8006bee:	eba1 0808 	sub.w	r8, r1, r8
 8006bf2:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 8006bf6:	eb03 4328 	add.w	r3, r3, r8, asr #16
 8006bfa:	fa1f f888 	uxth.w	r8, r8
 8006bfe:	1419      	asrs	r1, r3, #16
 8006c00:	454e      	cmp	r6, r9
 8006c02:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 8006c06:	f84a 3b04 	str.w	r3, [sl], #4
 8006c0a:	d8e7      	bhi.n	8006bdc <__mdiff+0x80>
 8006c0c:	1b33      	subs	r3, r6, r4
 8006c0e:	3b15      	subs	r3, #21
 8006c10:	f023 0303 	bic.w	r3, r3, #3
 8006c14:	3304      	adds	r3, #4
 8006c16:	3415      	adds	r4, #21
 8006c18:	42a6      	cmp	r6, r4
 8006c1a:	bf38      	it	cc
 8006c1c:	2304      	movcc	r3, #4
 8006c1e:	441d      	add	r5, r3
 8006c20:	4473      	add	r3, lr
 8006c22:	469e      	mov	lr, r3
 8006c24:	462e      	mov	r6, r5
 8006c26:	4566      	cmp	r6, ip
 8006c28:	d30e      	bcc.n	8006c48 <__mdiff+0xec>
 8006c2a:	f10c 0203 	add.w	r2, ip, #3
 8006c2e:	1b52      	subs	r2, r2, r5
 8006c30:	f022 0203 	bic.w	r2, r2, #3
 8006c34:	3d03      	subs	r5, #3
 8006c36:	45ac      	cmp	ip, r5
 8006c38:	bf38      	it	cc
 8006c3a:	2200      	movcc	r2, #0
 8006c3c:	441a      	add	r2, r3
 8006c3e:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 8006c42:	b17b      	cbz	r3, 8006c64 <__mdiff+0x108>
 8006c44:	6107      	str	r7, [r0, #16]
 8006c46:	e7a3      	b.n	8006b90 <__mdiff+0x34>
 8006c48:	f856 8b04 	ldr.w	r8, [r6], #4
 8006c4c:	fa11 f288 	uxtah	r2, r1, r8
 8006c50:	1414      	asrs	r4, r2, #16
 8006c52:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 8006c56:	b292      	uxth	r2, r2
 8006c58:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 8006c5c:	f84e 2b04 	str.w	r2, [lr], #4
 8006c60:	1421      	asrs	r1, r4, #16
 8006c62:	e7e0      	b.n	8006c26 <__mdiff+0xca>
 8006c64:	3f01      	subs	r7, #1
 8006c66:	e7ea      	b.n	8006c3e <__mdiff+0xe2>
 8006c68:	08007f73 	.word	0x08007f73
 8006c6c:	08007f84 	.word	0x08007f84

08006c70 <__d2b>:
 8006c70:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006c74:	4689      	mov	r9, r1
 8006c76:	2101      	movs	r1, #1
 8006c78:	ec57 6b10 	vmov	r6, r7, d0
 8006c7c:	4690      	mov	r8, r2
 8006c7e:	f7ff fccf 	bl	8006620 <_Balloc>
 8006c82:	4604      	mov	r4, r0
 8006c84:	b930      	cbnz	r0, 8006c94 <__d2b+0x24>
 8006c86:	4602      	mov	r2, r0
 8006c88:	4b25      	ldr	r3, [pc, #148]	; (8006d20 <__d2b+0xb0>)
 8006c8a:	4826      	ldr	r0, [pc, #152]	; (8006d24 <__d2b+0xb4>)
 8006c8c:	f240 310a 	movw	r1, #778	; 0x30a
 8006c90:	f000 faac 	bl	80071ec <__assert_func>
 8006c94:	f3c7 550a 	ubfx	r5, r7, #20, #11
 8006c98:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8006c9c:	bb35      	cbnz	r5, 8006cec <__d2b+0x7c>
 8006c9e:	2e00      	cmp	r6, #0
 8006ca0:	9301      	str	r3, [sp, #4]
 8006ca2:	d028      	beq.n	8006cf6 <__d2b+0x86>
 8006ca4:	4668      	mov	r0, sp
 8006ca6:	9600      	str	r6, [sp, #0]
 8006ca8:	f7ff fd82 	bl	80067b0 <__lo0bits>
 8006cac:	9900      	ldr	r1, [sp, #0]
 8006cae:	b300      	cbz	r0, 8006cf2 <__d2b+0x82>
 8006cb0:	9a01      	ldr	r2, [sp, #4]
 8006cb2:	f1c0 0320 	rsb	r3, r0, #32
 8006cb6:	fa02 f303 	lsl.w	r3, r2, r3
 8006cba:	430b      	orrs	r3, r1
 8006cbc:	40c2      	lsrs	r2, r0
 8006cbe:	6163      	str	r3, [r4, #20]
 8006cc0:	9201      	str	r2, [sp, #4]
 8006cc2:	9b01      	ldr	r3, [sp, #4]
 8006cc4:	61a3      	str	r3, [r4, #24]
 8006cc6:	2b00      	cmp	r3, #0
 8006cc8:	bf14      	ite	ne
 8006cca:	2202      	movne	r2, #2
 8006ccc:	2201      	moveq	r2, #1
 8006cce:	6122      	str	r2, [r4, #16]
 8006cd0:	b1d5      	cbz	r5, 8006d08 <__d2b+0x98>
 8006cd2:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 8006cd6:	4405      	add	r5, r0
 8006cd8:	f8c9 5000 	str.w	r5, [r9]
 8006cdc:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8006ce0:	f8c8 0000 	str.w	r0, [r8]
 8006ce4:	4620      	mov	r0, r4
 8006ce6:	b003      	add	sp, #12
 8006ce8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006cec:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8006cf0:	e7d5      	b.n	8006c9e <__d2b+0x2e>
 8006cf2:	6161      	str	r1, [r4, #20]
 8006cf4:	e7e5      	b.n	8006cc2 <__d2b+0x52>
 8006cf6:	a801      	add	r0, sp, #4
 8006cf8:	f7ff fd5a 	bl	80067b0 <__lo0bits>
 8006cfc:	9b01      	ldr	r3, [sp, #4]
 8006cfe:	6163      	str	r3, [r4, #20]
 8006d00:	2201      	movs	r2, #1
 8006d02:	6122      	str	r2, [r4, #16]
 8006d04:	3020      	adds	r0, #32
 8006d06:	e7e3      	b.n	8006cd0 <__d2b+0x60>
 8006d08:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8006d0c:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8006d10:	f8c9 0000 	str.w	r0, [r9]
 8006d14:	6918      	ldr	r0, [r3, #16]
 8006d16:	f7ff fd2b 	bl	8006770 <__hi0bits>
 8006d1a:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8006d1e:	e7df      	b.n	8006ce0 <__d2b+0x70>
 8006d20:	08007f73 	.word	0x08007f73
 8006d24:	08007f84 	.word	0x08007f84

08006d28 <_calloc_r>:
 8006d28:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006d2a:	fba1 2402 	umull	r2, r4, r1, r2
 8006d2e:	b94c      	cbnz	r4, 8006d44 <_calloc_r+0x1c>
 8006d30:	4611      	mov	r1, r2
 8006d32:	9201      	str	r2, [sp, #4]
 8006d34:	f000 f87a 	bl	8006e2c <_malloc_r>
 8006d38:	9a01      	ldr	r2, [sp, #4]
 8006d3a:	4605      	mov	r5, r0
 8006d3c:	b930      	cbnz	r0, 8006d4c <_calloc_r+0x24>
 8006d3e:	4628      	mov	r0, r5
 8006d40:	b003      	add	sp, #12
 8006d42:	bd30      	pop	{r4, r5, pc}
 8006d44:	220c      	movs	r2, #12
 8006d46:	6002      	str	r2, [r0, #0]
 8006d48:	2500      	movs	r5, #0
 8006d4a:	e7f8      	b.n	8006d3e <_calloc_r+0x16>
 8006d4c:	4621      	mov	r1, r4
 8006d4e:	f7fe f93f 	bl	8004fd0 <memset>
 8006d52:	e7f4      	b.n	8006d3e <_calloc_r+0x16>

08006d54 <_free_r>:
 8006d54:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006d56:	2900      	cmp	r1, #0
 8006d58:	d044      	beq.n	8006de4 <_free_r+0x90>
 8006d5a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8006d5e:	9001      	str	r0, [sp, #4]
 8006d60:	2b00      	cmp	r3, #0
 8006d62:	f1a1 0404 	sub.w	r4, r1, #4
 8006d66:	bfb8      	it	lt
 8006d68:	18e4      	addlt	r4, r4, r3
 8006d6a:	f000 fa9b 	bl	80072a4 <__malloc_lock>
 8006d6e:	4a1e      	ldr	r2, [pc, #120]	; (8006de8 <_free_r+0x94>)
 8006d70:	9801      	ldr	r0, [sp, #4]
 8006d72:	6813      	ldr	r3, [r2, #0]
 8006d74:	b933      	cbnz	r3, 8006d84 <_free_r+0x30>
 8006d76:	6063      	str	r3, [r4, #4]
 8006d78:	6014      	str	r4, [r2, #0]
 8006d7a:	b003      	add	sp, #12
 8006d7c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8006d80:	f000 ba96 	b.w	80072b0 <__malloc_unlock>
 8006d84:	42a3      	cmp	r3, r4
 8006d86:	d908      	bls.n	8006d9a <_free_r+0x46>
 8006d88:	6825      	ldr	r5, [r4, #0]
 8006d8a:	1961      	adds	r1, r4, r5
 8006d8c:	428b      	cmp	r3, r1
 8006d8e:	bf01      	itttt	eq
 8006d90:	6819      	ldreq	r1, [r3, #0]
 8006d92:	685b      	ldreq	r3, [r3, #4]
 8006d94:	1949      	addeq	r1, r1, r5
 8006d96:	6021      	streq	r1, [r4, #0]
 8006d98:	e7ed      	b.n	8006d76 <_free_r+0x22>
 8006d9a:	461a      	mov	r2, r3
 8006d9c:	685b      	ldr	r3, [r3, #4]
 8006d9e:	b10b      	cbz	r3, 8006da4 <_free_r+0x50>
 8006da0:	42a3      	cmp	r3, r4
 8006da2:	d9fa      	bls.n	8006d9a <_free_r+0x46>
 8006da4:	6811      	ldr	r1, [r2, #0]
 8006da6:	1855      	adds	r5, r2, r1
 8006da8:	42a5      	cmp	r5, r4
 8006daa:	d10b      	bne.n	8006dc4 <_free_r+0x70>
 8006dac:	6824      	ldr	r4, [r4, #0]
 8006dae:	4421      	add	r1, r4
 8006db0:	1854      	adds	r4, r2, r1
 8006db2:	42a3      	cmp	r3, r4
 8006db4:	6011      	str	r1, [r2, #0]
 8006db6:	d1e0      	bne.n	8006d7a <_free_r+0x26>
 8006db8:	681c      	ldr	r4, [r3, #0]
 8006dba:	685b      	ldr	r3, [r3, #4]
 8006dbc:	6053      	str	r3, [r2, #4]
 8006dbe:	4421      	add	r1, r4
 8006dc0:	6011      	str	r1, [r2, #0]
 8006dc2:	e7da      	b.n	8006d7a <_free_r+0x26>
 8006dc4:	d902      	bls.n	8006dcc <_free_r+0x78>
 8006dc6:	230c      	movs	r3, #12
 8006dc8:	6003      	str	r3, [r0, #0]
 8006dca:	e7d6      	b.n	8006d7a <_free_r+0x26>
 8006dcc:	6825      	ldr	r5, [r4, #0]
 8006dce:	1961      	adds	r1, r4, r5
 8006dd0:	428b      	cmp	r3, r1
 8006dd2:	bf04      	itt	eq
 8006dd4:	6819      	ldreq	r1, [r3, #0]
 8006dd6:	685b      	ldreq	r3, [r3, #4]
 8006dd8:	6063      	str	r3, [r4, #4]
 8006dda:	bf04      	itt	eq
 8006ddc:	1949      	addeq	r1, r1, r5
 8006dde:	6021      	streq	r1, [r4, #0]
 8006de0:	6054      	str	r4, [r2, #4]
 8006de2:	e7ca      	b.n	8006d7a <_free_r+0x26>
 8006de4:	b003      	add	sp, #12
 8006de6:	bd30      	pop	{r4, r5, pc}
 8006de8:	20000354 	.word	0x20000354

08006dec <sbrk_aligned>:
 8006dec:	b570      	push	{r4, r5, r6, lr}
 8006dee:	4e0e      	ldr	r6, [pc, #56]	; (8006e28 <sbrk_aligned+0x3c>)
 8006df0:	460c      	mov	r4, r1
 8006df2:	6831      	ldr	r1, [r6, #0]
 8006df4:	4605      	mov	r5, r0
 8006df6:	b911      	cbnz	r1, 8006dfe <sbrk_aligned+0x12>
 8006df8:	f000 f9e8 	bl	80071cc <_sbrk_r>
 8006dfc:	6030      	str	r0, [r6, #0]
 8006dfe:	4621      	mov	r1, r4
 8006e00:	4628      	mov	r0, r5
 8006e02:	f000 f9e3 	bl	80071cc <_sbrk_r>
 8006e06:	1c43      	adds	r3, r0, #1
 8006e08:	d00a      	beq.n	8006e20 <sbrk_aligned+0x34>
 8006e0a:	1cc4      	adds	r4, r0, #3
 8006e0c:	f024 0403 	bic.w	r4, r4, #3
 8006e10:	42a0      	cmp	r0, r4
 8006e12:	d007      	beq.n	8006e24 <sbrk_aligned+0x38>
 8006e14:	1a21      	subs	r1, r4, r0
 8006e16:	4628      	mov	r0, r5
 8006e18:	f000 f9d8 	bl	80071cc <_sbrk_r>
 8006e1c:	3001      	adds	r0, #1
 8006e1e:	d101      	bne.n	8006e24 <sbrk_aligned+0x38>
 8006e20:	f04f 34ff 	mov.w	r4, #4294967295
 8006e24:	4620      	mov	r0, r4
 8006e26:	bd70      	pop	{r4, r5, r6, pc}
 8006e28:	20000358 	.word	0x20000358

08006e2c <_malloc_r>:
 8006e2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006e30:	1ccd      	adds	r5, r1, #3
 8006e32:	f025 0503 	bic.w	r5, r5, #3
 8006e36:	3508      	adds	r5, #8
 8006e38:	2d0c      	cmp	r5, #12
 8006e3a:	bf38      	it	cc
 8006e3c:	250c      	movcc	r5, #12
 8006e3e:	2d00      	cmp	r5, #0
 8006e40:	4607      	mov	r7, r0
 8006e42:	db01      	blt.n	8006e48 <_malloc_r+0x1c>
 8006e44:	42a9      	cmp	r1, r5
 8006e46:	d905      	bls.n	8006e54 <_malloc_r+0x28>
 8006e48:	230c      	movs	r3, #12
 8006e4a:	603b      	str	r3, [r7, #0]
 8006e4c:	2600      	movs	r6, #0
 8006e4e:	4630      	mov	r0, r6
 8006e50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006e54:	4e2e      	ldr	r6, [pc, #184]	; (8006f10 <_malloc_r+0xe4>)
 8006e56:	f000 fa25 	bl	80072a4 <__malloc_lock>
 8006e5a:	6833      	ldr	r3, [r6, #0]
 8006e5c:	461c      	mov	r4, r3
 8006e5e:	bb34      	cbnz	r4, 8006eae <_malloc_r+0x82>
 8006e60:	4629      	mov	r1, r5
 8006e62:	4638      	mov	r0, r7
 8006e64:	f7ff ffc2 	bl	8006dec <sbrk_aligned>
 8006e68:	1c43      	adds	r3, r0, #1
 8006e6a:	4604      	mov	r4, r0
 8006e6c:	d14d      	bne.n	8006f0a <_malloc_r+0xde>
 8006e6e:	6834      	ldr	r4, [r6, #0]
 8006e70:	4626      	mov	r6, r4
 8006e72:	2e00      	cmp	r6, #0
 8006e74:	d140      	bne.n	8006ef8 <_malloc_r+0xcc>
 8006e76:	6823      	ldr	r3, [r4, #0]
 8006e78:	4631      	mov	r1, r6
 8006e7a:	4638      	mov	r0, r7
 8006e7c:	eb04 0803 	add.w	r8, r4, r3
 8006e80:	f000 f9a4 	bl	80071cc <_sbrk_r>
 8006e84:	4580      	cmp	r8, r0
 8006e86:	d13a      	bne.n	8006efe <_malloc_r+0xd2>
 8006e88:	6821      	ldr	r1, [r4, #0]
 8006e8a:	3503      	adds	r5, #3
 8006e8c:	1a6d      	subs	r5, r5, r1
 8006e8e:	f025 0503 	bic.w	r5, r5, #3
 8006e92:	3508      	adds	r5, #8
 8006e94:	2d0c      	cmp	r5, #12
 8006e96:	bf38      	it	cc
 8006e98:	250c      	movcc	r5, #12
 8006e9a:	4629      	mov	r1, r5
 8006e9c:	4638      	mov	r0, r7
 8006e9e:	f7ff ffa5 	bl	8006dec <sbrk_aligned>
 8006ea2:	3001      	adds	r0, #1
 8006ea4:	d02b      	beq.n	8006efe <_malloc_r+0xd2>
 8006ea6:	6823      	ldr	r3, [r4, #0]
 8006ea8:	442b      	add	r3, r5
 8006eaa:	6023      	str	r3, [r4, #0]
 8006eac:	e00e      	b.n	8006ecc <_malloc_r+0xa0>
 8006eae:	6822      	ldr	r2, [r4, #0]
 8006eb0:	1b52      	subs	r2, r2, r5
 8006eb2:	d41e      	bmi.n	8006ef2 <_malloc_r+0xc6>
 8006eb4:	2a0b      	cmp	r2, #11
 8006eb6:	d916      	bls.n	8006ee6 <_malloc_r+0xba>
 8006eb8:	1961      	adds	r1, r4, r5
 8006eba:	42a3      	cmp	r3, r4
 8006ebc:	6025      	str	r5, [r4, #0]
 8006ebe:	bf18      	it	ne
 8006ec0:	6059      	strne	r1, [r3, #4]
 8006ec2:	6863      	ldr	r3, [r4, #4]
 8006ec4:	bf08      	it	eq
 8006ec6:	6031      	streq	r1, [r6, #0]
 8006ec8:	5162      	str	r2, [r4, r5]
 8006eca:	604b      	str	r3, [r1, #4]
 8006ecc:	4638      	mov	r0, r7
 8006ece:	f104 060b 	add.w	r6, r4, #11
 8006ed2:	f000 f9ed 	bl	80072b0 <__malloc_unlock>
 8006ed6:	f026 0607 	bic.w	r6, r6, #7
 8006eda:	1d23      	adds	r3, r4, #4
 8006edc:	1af2      	subs	r2, r6, r3
 8006ede:	d0b6      	beq.n	8006e4e <_malloc_r+0x22>
 8006ee0:	1b9b      	subs	r3, r3, r6
 8006ee2:	50a3      	str	r3, [r4, r2]
 8006ee4:	e7b3      	b.n	8006e4e <_malloc_r+0x22>
 8006ee6:	6862      	ldr	r2, [r4, #4]
 8006ee8:	42a3      	cmp	r3, r4
 8006eea:	bf0c      	ite	eq
 8006eec:	6032      	streq	r2, [r6, #0]
 8006eee:	605a      	strne	r2, [r3, #4]
 8006ef0:	e7ec      	b.n	8006ecc <_malloc_r+0xa0>
 8006ef2:	4623      	mov	r3, r4
 8006ef4:	6864      	ldr	r4, [r4, #4]
 8006ef6:	e7b2      	b.n	8006e5e <_malloc_r+0x32>
 8006ef8:	4634      	mov	r4, r6
 8006efa:	6876      	ldr	r6, [r6, #4]
 8006efc:	e7b9      	b.n	8006e72 <_malloc_r+0x46>
 8006efe:	230c      	movs	r3, #12
 8006f00:	603b      	str	r3, [r7, #0]
 8006f02:	4638      	mov	r0, r7
 8006f04:	f000 f9d4 	bl	80072b0 <__malloc_unlock>
 8006f08:	e7a1      	b.n	8006e4e <_malloc_r+0x22>
 8006f0a:	6025      	str	r5, [r4, #0]
 8006f0c:	e7de      	b.n	8006ecc <_malloc_r+0xa0>
 8006f0e:	bf00      	nop
 8006f10:	20000354 	.word	0x20000354

08006f14 <__ssputs_r>:
 8006f14:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006f18:	688e      	ldr	r6, [r1, #8]
 8006f1a:	429e      	cmp	r6, r3
 8006f1c:	4682      	mov	sl, r0
 8006f1e:	460c      	mov	r4, r1
 8006f20:	4690      	mov	r8, r2
 8006f22:	461f      	mov	r7, r3
 8006f24:	d838      	bhi.n	8006f98 <__ssputs_r+0x84>
 8006f26:	898a      	ldrh	r2, [r1, #12]
 8006f28:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8006f2c:	d032      	beq.n	8006f94 <__ssputs_r+0x80>
 8006f2e:	6825      	ldr	r5, [r4, #0]
 8006f30:	6909      	ldr	r1, [r1, #16]
 8006f32:	eba5 0901 	sub.w	r9, r5, r1
 8006f36:	6965      	ldr	r5, [r4, #20]
 8006f38:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8006f3c:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8006f40:	3301      	adds	r3, #1
 8006f42:	444b      	add	r3, r9
 8006f44:	106d      	asrs	r5, r5, #1
 8006f46:	429d      	cmp	r5, r3
 8006f48:	bf38      	it	cc
 8006f4a:	461d      	movcc	r5, r3
 8006f4c:	0553      	lsls	r3, r2, #21
 8006f4e:	d531      	bpl.n	8006fb4 <__ssputs_r+0xa0>
 8006f50:	4629      	mov	r1, r5
 8006f52:	f7ff ff6b 	bl	8006e2c <_malloc_r>
 8006f56:	4606      	mov	r6, r0
 8006f58:	b950      	cbnz	r0, 8006f70 <__ssputs_r+0x5c>
 8006f5a:	230c      	movs	r3, #12
 8006f5c:	f8ca 3000 	str.w	r3, [sl]
 8006f60:	89a3      	ldrh	r3, [r4, #12]
 8006f62:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006f66:	81a3      	strh	r3, [r4, #12]
 8006f68:	f04f 30ff 	mov.w	r0, #4294967295
 8006f6c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006f70:	6921      	ldr	r1, [r4, #16]
 8006f72:	464a      	mov	r2, r9
 8006f74:	f7ff fb46 	bl	8006604 <memcpy>
 8006f78:	89a3      	ldrh	r3, [r4, #12]
 8006f7a:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8006f7e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006f82:	81a3      	strh	r3, [r4, #12]
 8006f84:	6126      	str	r6, [r4, #16]
 8006f86:	6165      	str	r5, [r4, #20]
 8006f88:	444e      	add	r6, r9
 8006f8a:	eba5 0509 	sub.w	r5, r5, r9
 8006f8e:	6026      	str	r6, [r4, #0]
 8006f90:	60a5      	str	r5, [r4, #8]
 8006f92:	463e      	mov	r6, r7
 8006f94:	42be      	cmp	r6, r7
 8006f96:	d900      	bls.n	8006f9a <__ssputs_r+0x86>
 8006f98:	463e      	mov	r6, r7
 8006f9a:	6820      	ldr	r0, [r4, #0]
 8006f9c:	4632      	mov	r2, r6
 8006f9e:	4641      	mov	r1, r8
 8006fa0:	f000 f966 	bl	8007270 <memmove>
 8006fa4:	68a3      	ldr	r3, [r4, #8]
 8006fa6:	1b9b      	subs	r3, r3, r6
 8006fa8:	60a3      	str	r3, [r4, #8]
 8006faa:	6823      	ldr	r3, [r4, #0]
 8006fac:	4433      	add	r3, r6
 8006fae:	6023      	str	r3, [r4, #0]
 8006fb0:	2000      	movs	r0, #0
 8006fb2:	e7db      	b.n	8006f6c <__ssputs_r+0x58>
 8006fb4:	462a      	mov	r2, r5
 8006fb6:	f000 f981 	bl	80072bc <_realloc_r>
 8006fba:	4606      	mov	r6, r0
 8006fbc:	2800      	cmp	r0, #0
 8006fbe:	d1e1      	bne.n	8006f84 <__ssputs_r+0x70>
 8006fc0:	6921      	ldr	r1, [r4, #16]
 8006fc2:	4650      	mov	r0, sl
 8006fc4:	f7ff fec6 	bl	8006d54 <_free_r>
 8006fc8:	e7c7      	b.n	8006f5a <__ssputs_r+0x46>
	...

08006fcc <_svfiprintf_r>:
 8006fcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006fd0:	4698      	mov	r8, r3
 8006fd2:	898b      	ldrh	r3, [r1, #12]
 8006fd4:	061b      	lsls	r3, r3, #24
 8006fd6:	b09d      	sub	sp, #116	; 0x74
 8006fd8:	4607      	mov	r7, r0
 8006fda:	460d      	mov	r5, r1
 8006fdc:	4614      	mov	r4, r2
 8006fde:	d50e      	bpl.n	8006ffe <_svfiprintf_r+0x32>
 8006fe0:	690b      	ldr	r3, [r1, #16]
 8006fe2:	b963      	cbnz	r3, 8006ffe <_svfiprintf_r+0x32>
 8006fe4:	2140      	movs	r1, #64	; 0x40
 8006fe6:	f7ff ff21 	bl	8006e2c <_malloc_r>
 8006fea:	6028      	str	r0, [r5, #0]
 8006fec:	6128      	str	r0, [r5, #16]
 8006fee:	b920      	cbnz	r0, 8006ffa <_svfiprintf_r+0x2e>
 8006ff0:	230c      	movs	r3, #12
 8006ff2:	603b      	str	r3, [r7, #0]
 8006ff4:	f04f 30ff 	mov.w	r0, #4294967295
 8006ff8:	e0d1      	b.n	800719e <_svfiprintf_r+0x1d2>
 8006ffa:	2340      	movs	r3, #64	; 0x40
 8006ffc:	616b      	str	r3, [r5, #20]
 8006ffe:	2300      	movs	r3, #0
 8007000:	9309      	str	r3, [sp, #36]	; 0x24
 8007002:	2320      	movs	r3, #32
 8007004:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8007008:	f8cd 800c 	str.w	r8, [sp, #12]
 800700c:	2330      	movs	r3, #48	; 0x30
 800700e:	f8df 81a8 	ldr.w	r8, [pc, #424]	; 80071b8 <_svfiprintf_r+0x1ec>
 8007012:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8007016:	f04f 0901 	mov.w	r9, #1
 800701a:	4623      	mov	r3, r4
 800701c:	469a      	mov	sl, r3
 800701e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8007022:	b10a      	cbz	r2, 8007028 <_svfiprintf_r+0x5c>
 8007024:	2a25      	cmp	r2, #37	; 0x25
 8007026:	d1f9      	bne.n	800701c <_svfiprintf_r+0x50>
 8007028:	ebba 0b04 	subs.w	fp, sl, r4
 800702c:	d00b      	beq.n	8007046 <_svfiprintf_r+0x7a>
 800702e:	465b      	mov	r3, fp
 8007030:	4622      	mov	r2, r4
 8007032:	4629      	mov	r1, r5
 8007034:	4638      	mov	r0, r7
 8007036:	f7ff ff6d 	bl	8006f14 <__ssputs_r>
 800703a:	3001      	adds	r0, #1
 800703c:	f000 80aa 	beq.w	8007194 <_svfiprintf_r+0x1c8>
 8007040:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8007042:	445a      	add	r2, fp
 8007044:	9209      	str	r2, [sp, #36]	; 0x24
 8007046:	f89a 3000 	ldrb.w	r3, [sl]
 800704a:	2b00      	cmp	r3, #0
 800704c:	f000 80a2 	beq.w	8007194 <_svfiprintf_r+0x1c8>
 8007050:	2300      	movs	r3, #0
 8007052:	f04f 32ff 	mov.w	r2, #4294967295
 8007056:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800705a:	f10a 0a01 	add.w	sl, sl, #1
 800705e:	9304      	str	r3, [sp, #16]
 8007060:	9307      	str	r3, [sp, #28]
 8007062:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8007066:	931a      	str	r3, [sp, #104]	; 0x68
 8007068:	4654      	mov	r4, sl
 800706a:	2205      	movs	r2, #5
 800706c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8007070:	4851      	ldr	r0, [pc, #324]	; (80071b8 <_svfiprintf_r+0x1ec>)
 8007072:	f7f9 f8b5 	bl	80001e0 <memchr>
 8007076:	9a04      	ldr	r2, [sp, #16]
 8007078:	b9d8      	cbnz	r0, 80070b2 <_svfiprintf_r+0xe6>
 800707a:	06d0      	lsls	r0, r2, #27
 800707c:	bf44      	itt	mi
 800707e:	2320      	movmi	r3, #32
 8007080:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8007084:	0711      	lsls	r1, r2, #28
 8007086:	bf44      	itt	mi
 8007088:	232b      	movmi	r3, #43	; 0x2b
 800708a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800708e:	f89a 3000 	ldrb.w	r3, [sl]
 8007092:	2b2a      	cmp	r3, #42	; 0x2a
 8007094:	d015      	beq.n	80070c2 <_svfiprintf_r+0xf6>
 8007096:	9a07      	ldr	r2, [sp, #28]
 8007098:	4654      	mov	r4, sl
 800709a:	2000      	movs	r0, #0
 800709c:	f04f 0c0a 	mov.w	ip, #10
 80070a0:	4621      	mov	r1, r4
 80070a2:	f811 3b01 	ldrb.w	r3, [r1], #1
 80070a6:	3b30      	subs	r3, #48	; 0x30
 80070a8:	2b09      	cmp	r3, #9
 80070aa:	d94e      	bls.n	800714a <_svfiprintf_r+0x17e>
 80070ac:	b1b0      	cbz	r0, 80070dc <_svfiprintf_r+0x110>
 80070ae:	9207      	str	r2, [sp, #28]
 80070b0:	e014      	b.n	80070dc <_svfiprintf_r+0x110>
 80070b2:	eba0 0308 	sub.w	r3, r0, r8
 80070b6:	fa09 f303 	lsl.w	r3, r9, r3
 80070ba:	4313      	orrs	r3, r2
 80070bc:	9304      	str	r3, [sp, #16]
 80070be:	46a2      	mov	sl, r4
 80070c0:	e7d2      	b.n	8007068 <_svfiprintf_r+0x9c>
 80070c2:	9b03      	ldr	r3, [sp, #12]
 80070c4:	1d19      	adds	r1, r3, #4
 80070c6:	681b      	ldr	r3, [r3, #0]
 80070c8:	9103      	str	r1, [sp, #12]
 80070ca:	2b00      	cmp	r3, #0
 80070cc:	bfbb      	ittet	lt
 80070ce:	425b      	neglt	r3, r3
 80070d0:	f042 0202 	orrlt.w	r2, r2, #2
 80070d4:	9307      	strge	r3, [sp, #28]
 80070d6:	9307      	strlt	r3, [sp, #28]
 80070d8:	bfb8      	it	lt
 80070da:	9204      	strlt	r2, [sp, #16]
 80070dc:	7823      	ldrb	r3, [r4, #0]
 80070de:	2b2e      	cmp	r3, #46	; 0x2e
 80070e0:	d10c      	bne.n	80070fc <_svfiprintf_r+0x130>
 80070e2:	7863      	ldrb	r3, [r4, #1]
 80070e4:	2b2a      	cmp	r3, #42	; 0x2a
 80070e6:	d135      	bne.n	8007154 <_svfiprintf_r+0x188>
 80070e8:	9b03      	ldr	r3, [sp, #12]
 80070ea:	1d1a      	adds	r2, r3, #4
 80070ec:	681b      	ldr	r3, [r3, #0]
 80070ee:	9203      	str	r2, [sp, #12]
 80070f0:	2b00      	cmp	r3, #0
 80070f2:	bfb8      	it	lt
 80070f4:	f04f 33ff 	movlt.w	r3, #4294967295
 80070f8:	3402      	adds	r4, #2
 80070fa:	9305      	str	r3, [sp, #20]
 80070fc:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 80071c8 <_svfiprintf_r+0x1fc>
 8007100:	7821      	ldrb	r1, [r4, #0]
 8007102:	2203      	movs	r2, #3
 8007104:	4650      	mov	r0, sl
 8007106:	f7f9 f86b 	bl	80001e0 <memchr>
 800710a:	b140      	cbz	r0, 800711e <_svfiprintf_r+0x152>
 800710c:	2340      	movs	r3, #64	; 0x40
 800710e:	eba0 000a 	sub.w	r0, r0, sl
 8007112:	fa03 f000 	lsl.w	r0, r3, r0
 8007116:	9b04      	ldr	r3, [sp, #16]
 8007118:	4303      	orrs	r3, r0
 800711a:	3401      	adds	r4, #1
 800711c:	9304      	str	r3, [sp, #16]
 800711e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8007122:	4826      	ldr	r0, [pc, #152]	; (80071bc <_svfiprintf_r+0x1f0>)
 8007124:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8007128:	2206      	movs	r2, #6
 800712a:	f7f9 f859 	bl	80001e0 <memchr>
 800712e:	2800      	cmp	r0, #0
 8007130:	d038      	beq.n	80071a4 <_svfiprintf_r+0x1d8>
 8007132:	4b23      	ldr	r3, [pc, #140]	; (80071c0 <_svfiprintf_r+0x1f4>)
 8007134:	bb1b      	cbnz	r3, 800717e <_svfiprintf_r+0x1b2>
 8007136:	9b03      	ldr	r3, [sp, #12]
 8007138:	3307      	adds	r3, #7
 800713a:	f023 0307 	bic.w	r3, r3, #7
 800713e:	3308      	adds	r3, #8
 8007140:	9303      	str	r3, [sp, #12]
 8007142:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007144:	4433      	add	r3, r6
 8007146:	9309      	str	r3, [sp, #36]	; 0x24
 8007148:	e767      	b.n	800701a <_svfiprintf_r+0x4e>
 800714a:	fb0c 3202 	mla	r2, ip, r2, r3
 800714e:	460c      	mov	r4, r1
 8007150:	2001      	movs	r0, #1
 8007152:	e7a5      	b.n	80070a0 <_svfiprintf_r+0xd4>
 8007154:	2300      	movs	r3, #0
 8007156:	3401      	adds	r4, #1
 8007158:	9305      	str	r3, [sp, #20]
 800715a:	4619      	mov	r1, r3
 800715c:	f04f 0c0a 	mov.w	ip, #10
 8007160:	4620      	mov	r0, r4
 8007162:	f810 2b01 	ldrb.w	r2, [r0], #1
 8007166:	3a30      	subs	r2, #48	; 0x30
 8007168:	2a09      	cmp	r2, #9
 800716a:	d903      	bls.n	8007174 <_svfiprintf_r+0x1a8>
 800716c:	2b00      	cmp	r3, #0
 800716e:	d0c5      	beq.n	80070fc <_svfiprintf_r+0x130>
 8007170:	9105      	str	r1, [sp, #20]
 8007172:	e7c3      	b.n	80070fc <_svfiprintf_r+0x130>
 8007174:	fb0c 2101 	mla	r1, ip, r1, r2
 8007178:	4604      	mov	r4, r0
 800717a:	2301      	movs	r3, #1
 800717c:	e7f0      	b.n	8007160 <_svfiprintf_r+0x194>
 800717e:	ab03      	add	r3, sp, #12
 8007180:	9300      	str	r3, [sp, #0]
 8007182:	462a      	mov	r2, r5
 8007184:	4b0f      	ldr	r3, [pc, #60]	; (80071c4 <_svfiprintf_r+0x1f8>)
 8007186:	a904      	add	r1, sp, #16
 8007188:	4638      	mov	r0, r7
 800718a:	f7fd ffc9 	bl	8005120 <_printf_float>
 800718e:	1c42      	adds	r2, r0, #1
 8007190:	4606      	mov	r6, r0
 8007192:	d1d6      	bne.n	8007142 <_svfiprintf_r+0x176>
 8007194:	89ab      	ldrh	r3, [r5, #12]
 8007196:	065b      	lsls	r3, r3, #25
 8007198:	f53f af2c 	bmi.w	8006ff4 <_svfiprintf_r+0x28>
 800719c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800719e:	b01d      	add	sp, #116	; 0x74
 80071a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80071a4:	ab03      	add	r3, sp, #12
 80071a6:	9300      	str	r3, [sp, #0]
 80071a8:	462a      	mov	r2, r5
 80071aa:	4b06      	ldr	r3, [pc, #24]	; (80071c4 <_svfiprintf_r+0x1f8>)
 80071ac:	a904      	add	r1, sp, #16
 80071ae:	4638      	mov	r0, r7
 80071b0:	f7fe fa5a 	bl	8005668 <_printf_i>
 80071b4:	e7eb      	b.n	800718e <_svfiprintf_r+0x1c2>
 80071b6:	bf00      	nop
 80071b8:	080080dc 	.word	0x080080dc
 80071bc:	080080e6 	.word	0x080080e6
 80071c0:	08005121 	.word	0x08005121
 80071c4:	08006f15 	.word	0x08006f15
 80071c8:	080080e2 	.word	0x080080e2

080071cc <_sbrk_r>:
 80071cc:	b538      	push	{r3, r4, r5, lr}
 80071ce:	4d06      	ldr	r5, [pc, #24]	; (80071e8 <_sbrk_r+0x1c>)
 80071d0:	2300      	movs	r3, #0
 80071d2:	4604      	mov	r4, r0
 80071d4:	4608      	mov	r0, r1
 80071d6:	602b      	str	r3, [r5, #0]
 80071d8:	f7fa ff5a 	bl	8002090 <_sbrk>
 80071dc:	1c43      	adds	r3, r0, #1
 80071de:	d102      	bne.n	80071e6 <_sbrk_r+0x1a>
 80071e0:	682b      	ldr	r3, [r5, #0]
 80071e2:	b103      	cbz	r3, 80071e6 <_sbrk_r+0x1a>
 80071e4:	6023      	str	r3, [r4, #0]
 80071e6:	bd38      	pop	{r3, r4, r5, pc}
 80071e8:	2000035c 	.word	0x2000035c

080071ec <__assert_func>:
 80071ec:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80071ee:	4614      	mov	r4, r2
 80071f0:	461a      	mov	r2, r3
 80071f2:	4b09      	ldr	r3, [pc, #36]	; (8007218 <__assert_func+0x2c>)
 80071f4:	681b      	ldr	r3, [r3, #0]
 80071f6:	4605      	mov	r5, r0
 80071f8:	68d8      	ldr	r0, [r3, #12]
 80071fa:	b14c      	cbz	r4, 8007210 <__assert_func+0x24>
 80071fc:	4b07      	ldr	r3, [pc, #28]	; (800721c <__assert_func+0x30>)
 80071fe:	9100      	str	r1, [sp, #0]
 8007200:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8007204:	4906      	ldr	r1, [pc, #24]	; (8007220 <__assert_func+0x34>)
 8007206:	462b      	mov	r3, r5
 8007208:	f000 f80e 	bl	8007228 <fiprintf>
 800720c:	f000 faac 	bl	8007768 <abort>
 8007210:	4b04      	ldr	r3, [pc, #16]	; (8007224 <__assert_func+0x38>)
 8007212:	461c      	mov	r4, r3
 8007214:	e7f3      	b.n	80071fe <__assert_func+0x12>
 8007216:	bf00      	nop
 8007218:	20000010 	.word	0x20000010
 800721c:	080080ed 	.word	0x080080ed
 8007220:	080080fa 	.word	0x080080fa
 8007224:	08008128 	.word	0x08008128

08007228 <fiprintf>:
 8007228:	b40e      	push	{r1, r2, r3}
 800722a:	b503      	push	{r0, r1, lr}
 800722c:	4601      	mov	r1, r0
 800722e:	ab03      	add	r3, sp, #12
 8007230:	4805      	ldr	r0, [pc, #20]	; (8007248 <fiprintf+0x20>)
 8007232:	f853 2b04 	ldr.w	r2, [r3], #4
 8007236:	6800      	ldr	r0, [r0, #0]
 8007238:	9301      	str	r3, [sp, #4]
 800723a:	f000 f897 	bl	800736c <_vfiprintf_r>
 800723e:	b002      	add	sp, #8
 8007240:	f85d eb04 	ldr.w	lr, [sp], #4
 8007244:	b003      	add	sp, #12
 8007246:	4770      	bx	lr
 8007248:	20000010 	.word	0x20000010

0800724c <__ascii_mbtowc>:
 800724c:	b082      	sub	sp, #8
 800724e:	b901      	cbnz	r1, 8007252 <__ascii_mbtowc+0x6>
 8007250:	a901      	add	r1, sp, #4
 8007252:	b142      	cbz	r2, 8007266 <__ascii_mbtowc+0x1a>
 8007254:	b14b      	cbz	r3, 800726a <__ascii_mbtowc+0x1e>
 8007256:	7813      	ldrb	r3, [r2, #0]
 8007258:	600b      	str	r3, [r1, #0]
 800725a:	7812      	ldrb	r2, [r2, #0]
 800725c:	1e10      	subs	r0, r2, #0
 800725e:	bf18      	it	ne
 8007260:	2001      	movne	r0, #1
 8007262:	b002      	add	sp, #8
 8007264:	4770      	bx	lr
 8007266:	4610      	mov	r0, r2
 8007268:	e7fb      	b.n	8007262 <__ascii_mbtowc+0x16>
 800726a:	f06f 0001 	mvn.w	r0, #1
 800726e:	e7f8      	b.n	8007262 <__ascii_mbtowc+0x16>

08007270 <memmove>:
 8007270:	4288      	cmp	r0, r1
 8007272:	b510      	push	{r4, lr}
 8007274:	eb01 0402 	add.w	r4, r1, r2
 8007278:	d902      	bls.n	8007280 <memmove+0x10>
 800727a:	4284      	cmp	r4, r0
 800727c:	4623      	mov	r3, r4
 800727e:	d807      	bhi.n	8007290 <memmove+0x20>
 8007280:	1e43      	subs	r3, r0, #1
 8007282:	42a1      	cmp	r1, r4
 8007284:	d008      	beq.n	8007298 <memmove+0x28>
 8007286:	f811 2b01 	ldrb.w	r2, [r1], #1
 800728a:	f803 2f01 	strb.w	r2, [r3, #1]!
 800728e:	e7f8      	b.n	8007282 <memmove+0x12>
 8007290:	4402      	add	r2, r0
 8007292:	4601      	mov	r1, r0
 8007294:	428a      	cmp	r2, r1
 8007296:	d100      	bne.n	800729a <memmove+0x2a>
 8007298:	bd10      	pop	{r4, pc}
 800729a:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800729e:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80072a2:	e7f7      	b.n	8007294 <memmove+0x24>

080072a4 <__malloc_lock>:
 80072a4:	4801      	ldr	r0, [pc, #4]	; (80072ac <__malloc_lock+0x8>)
 80072a6:	f000 bc1f 	b.w	8007ae8 <__retarget_lock_acquire_recursive>
 80072aa:	bf00      	nop
 80072ac:	20000360 	.word	0x20000360

080072b0 <__malloc_unlock>:
 80072b0:	4801      	ldr	r0, [pc, #4]	; (80072b8 <__malloc_unlock+0x8>)
 80072b2:	f000 bc1a 	b.w	8007aea <__retarget_lock_release_recursive>
 80072b6:	bf00      	nop
 80072b8:	20000360 	.word	0x20000360

080072bc <_realloc_r>:
 80072bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80072c0:	4680      	mov	r8, r0
 80072c2:	4614      	mov	r4, r2
 80072c4:	460e      	mov	r6, r1
 80072c6:	b921      	cbnz	r1, 80072d2 <_realloc_r+0x16>
 80072c8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80072cc:	4611      	mov	r1, r2
 80072ce:	f7ff bdad 	b.w	8006e2c <_malloc_r>
 80072d2:	b92a      	cbnz	r2, 80072e0 <_realloc_r+0x24>
 80072d4:	f7ff fd3e 	bl	8006d54 <_free_r>
 80072d8:	4625      	mov	r5, r4
 80072da:	4628      	mov	r0, r5
 80072dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80072e0:	f000 fc6a 	bl	8007bb8 <_malloc_usable_size_r>
 80072e4:	4284      	cmp	r4, r0
 80072e6:	4607      	mov	r7, r0
 80072e8:	d802      	bhi.n	80072f0 <_realloc_r+0x34>
 80072ea:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 80072ee:	d812      	bhi.n	8007316 <_realloc_r+0x5a>
 80072f0:	4621      	mov	r1, r4
 80072f2:	4640      	mov	r0, r8
 80072f4:	f7ff fd9a 	bl	8006e2c <_malloc_r>
 80072f8:	4605      	mov	r5, r0
 80072fa:	2800      	cmp	r0, #0
 80072fc:	d0ed      	beq.n	80072da <_realloc_r+0x1e>
 80072fe:	42bc      	cmp	r4, r7
 8007300:	4622      	mov	r2, r4
 8007302:	4631      	mov	r1, r6
 8007304:	bf28      	it	cs
 8007306:	463a      	movcs	r2, r7
 8007308:	f7ff f97c 	bl	8006604 <memcpy>
 800730c:	4631      	mov	r1, r6
 800730e:	4640      	mov	r0, r8
 8007310:	f7ff fd20 	bl	8006d54 <_free_r>
 8007314:	e7e1      	b.n	80072da <_realloc_r+0x1e>
 8007316:	4635      	mov	r5, r6
 8007318:	e7df      	b.n	80072da <_realloc_r+0x1e>

0800731a <__sfputc_r>:
 800731a:	6893      	ldr	r3, [r2, #8]
 800731c:	3b01      	subs	r3, #1
 800731e:	2b00      	cmp	r3, #0
 8007320:	b410      	push	{r4}
 8007322:	6093      	str	r3, [r2, #8]
 8007324:	da08      	bge.n	8007338 <__sfputc_r+0x1e>
 8007326:	6994      	ldr	r4, [r2, #24]
 8007328:	42a3      	cmp	r3, r4
 800732a:	db01      	blt.n	8007330 <__sfputc_r+0x16>
 800732c:	290a      	cmp	r1, #10
 800732e:	d103      	bne.n	8007338 <__sfputc_r+0x1e>
 8007330:	f85d 4b04 	ldr.w	r4, [sp], #4
 8007334:	f000 b94a 	b.w	80075cc <__swbuf_r>
 8007338:	6813      	ldr	r3, [r2, #0]
 800733a:	1c58      	adds	r0, r3, #1
 800733c:	6010      	str	r0, [r2, #0]
 800733e:	7019      	strb	r1, [r3, #0]
 8007340:	4608      	mov	r0, r1
 8007342:	f85d 4b04 	ldr.w	r4, [sp], #4
 8007346:	4770      	bx	lr

08007348 <__sfputs_r>:
 8007348:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800734a:	4606      	mov	r6, r0
 800734c:	460f      	mov	r7, r1
 800734e:	4614      	mov	r4, r2
 8007350:	18d5      	adds	r5, r2, r3
 8007352:	42ac      	cmp	r4, r5
 8007354:	d101      	bne.n	800735a <__sfputs_r+0x12>
 8007356:	2000      	movs	r0, #0
 8007358:	e007      	b.n	800736a <__sfputs_r+0x22>
 800735a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800735e:	463a      	mov	r2, r7
 8007360:	4630      	mov	r0, r6
 8007362:	f7ff ffda 	bl	800731a <__sfputc_r>
 8007366:	1c43      	adds	r3, r0, #1
 8007368:	d1f3      	bne.n	8007352 <__sfputs_r+0xa>
 800736a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800736c <_vfiprintf_r>:
 800736c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007370:	460d      	mov	r5, r1
 8007372:	b09d      	sub	sp, #116	; 0x74
 8007374:	4614      	mov	r4, r2
 8007376:	4698      	mov	r8, r3
 8007378:	4606      	mov	r6, r0
 800737a:	b118      	cbz	r0, 8007384 <_vfiprintf_r+0x18>
 800737c:	6983      	ldr	r3, [r0, #24]
 800737e:	b90b      	cbnz	r3, 8007384 <_vfiprintf_r+0x18>
 8007380:	f000 fb14 	bl	80079ac <__sinit>
 8007384:	4b89      	ldr	r3, [pc, #548]	; (80075ac <_vfiprintf_r+0x240>)
 8007386:	429d      	cmp	r5, r3
 8007388:	d11b      	bne.n	80073c2 <_vfiprintf_r+0x56>
 800738a:	6875      	ldr	r5, [r6, #4]
 800738c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800738e:	07d9      	lsls	r1, r3, #31
 8007390:	d405      	bmi.n	800739e <_vfiprintf_r+0x32>
 8007392:	89ab      	ldrh	r3, [r5, #12]
 8007394:	059a      	lsls	r2, r3, #22
 8007396:	d402      	bmi.n	800739e <_vfiprintf_r+0x32>
 8007398:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800739a:	f000 fba5 	bl	8007ae8 <__retarget_lock_acquire_recursive>
 800739e:	89ab      	ldrh	r3, [r5, #12]
 80073a0:	071b      	lsls	r3, r3, #28
 80073a2:	d501      	bpl.n	80073a8 <_vfiprintf_r+0x3c>
 80073a4:	692b      	ldr	r3, [r5, #16]
 80073a6:	b9eb      	cbnz	r3, 80073e4 <_vfiprintf_r+0x78>
 80073a8:	4629      	mov	r1, r5
 80073aa:	4630      	mov	r0, r6
 80073ac:	f000 f96e 	bl	800768c <__swsetup_r>
 80073b0:	b1c0      	cbz	r0, 80073e4 <_vfiprintf_r+0x78>
 80073b2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80073b4:	07dc      	lsls	r4, r3, #31
 80073b6:	d50e      	bpl.n	80073d6 <_vfiprintf_r+0x6a>
 80073b8:	f04f 30ff 	mov.w	r0, #4294967295
 80073bc:	b01d      	add	sp, #116	; 0x74
 80073be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80073c2:	4b7b      	ldr	r3, [pc, #492]	; (80075b0 <_vfiprintf_r+0x244>)
 80073c4:	429d      	cmp	r5, r3
 80073c6:	d101      	bne.n	80073cc <_vfiprintf_r+0x60>
 80073c8:	68b5      	ldr	r5, [r6, #8]
 80073ca:	e7df      	b.n	800738c <_vfiprintf_r+0x20>
 80073cc:	4b79      	ldr	r3, [pc, #484]	; (80075b4 <_vfiprintf_r+0x248>)
 80073ce:	429d      	cmp	r5, r3
 80073d0:	bf08      	it	eq
 80073d2:	68f5      	ldreq	r5, [r6, #12]
 80073d4:	e7da      	b.n	800738c <_vfiprintf_r+0x20>
 80073d6:	89ab      	ldrh	r3, [r5, #12]
 80073d8:	0598      	lsls	r0, r3, #22
 80073da:	d4ed      	bmi.n	80073b8 <_vfiprintf_r+0x4c>
 80073dc:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80073de:	f000 fb84 	bl	8007aea <__retarget_lock_release_recursive>
 80073e2:	e7e9      	b.n	80073b8 <_vfiprintf_r+0x4c>
 80073e4:	2300      	movs	r3, #0
 80073e6:	9309      	str	r3, [sp, #36]	; 0x24
 80073e8:	2320      	movs	r3, #32
 80073ea:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80073ee:	f8cd 800c 	str.w	r8, [sp, #12]
 80073f2:	2330      	movs	r3, #48	; 0x30
 80073f4:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 80075b8 <_vfiprintf_r+0x24c>
 80073f8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80073fc:	f04f 0901 	mov.w	r9, #1
 8007400:	4623      	mov	r3, r4
 8007402:	469a      	mov	sl, r3
 8007404:	f813 2b01 	ldrb.w	r2, [r3], #1
 8007408:	b10a      	cbz	r2, 800740e <_vfiprintf_r+0xa2>
 800740a:	2a25      	cmp	r2, #37	; 0x25
 800740c:	d1f9      	bne.n	8007402 <_vfiprintf_r+0x96>
 800740e:	ebba 0b04 	subs.w	fp, sl, r4
 8007412:	d00b      	beq.n	800742c <_vfiprintf_r+0xc0>
 8007414:	465b      	mov	r3, fp
 8007416:	4622      	mov	r2, r4
 8007418:	4629      	mov	r1, r5
 800741a:	4630      	mov	r0, r6
 800741c:	f7ff ff94 	bl	8007348 <__sfputs_r>
 8007420:	3001      	adds	r0, #1
 8007422:	f000 80aa 	beq.w	800757a <_vfiprintf_r+0x20e>
 8007426:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8007428:	445a      	add	r2, fp
 800742a:	9209      	str	r2, [sp, #36]	; 0x24
 800742c:	f89a 3000 	ldrb.w	r3, [sl]
 8007430:	2b00      	cmp	r3, #0
 8007432:	f000 80a2 	beq.w	800757a <_vfiprintf_r+0x20e>
 8007436:	2300      	movs	r3, #0
 8007438:	f04f 32ff 	mov.w	r2, #4294967295
 800743c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8007440:	f10a 0a01 	add.w	sl, sl, #1
 8007444:	9304      	str	r3, [sp, #16]
 8007446:	9307      	str	r3, [sp, #28]
 8007448:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800744c:	931a      	str	r3, [sp, #104]	; 0x68
 800744e:	4654      	mov	r4, sl
 8007450:	2205      	movs	r2, #5
 8007452:	f814 1b01 	ldrb.w	r1, [r4], #1
 8007456:	4858      	ldr	r0, [pc, #352]	; (80075b8 <_vfiprintf_r+0x24c>)
 8007458:	f7f8 fec2 	bl	80001e0 <memchr>
 800745c:	9a04      	ldr	r2, [sp, #16]
 800745e:	b9d8      	cbnz	r0, 8007498 <_vfiprintf_r+0x12c>
 8007460:	06d1      	lsls	r1, r2, #27
 8007462:	bf44      	itt	mi
 8007464:	2320      	movmi	r3, #32
 8007466:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800746a:	0713      	lsls	r3, r2, #28
 800746c:	bf44      	itt	mi
 800746e:	232b      	movmi	r3, #43	; 0x2b
 8007470:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8007474:	f89a 3000 	ldrb.w	r3, [sl]
 8007478:	2b2a      	cmp	r3, #42	; 0x2a
 800747a:	d015      	beq.n	80074a8 <_vfiprintf_r+0x13c>
 800747c:	9a07      	ldr	r2, [sp, #28]
 800747e:	4654      	mov	r4, sl
 8007480:	2000      	movs	r0, #0
 8007482:	f04f 0c0a 	mov.w	ip, #10
 8007486:	4621      	mov	r1, r4
 8007488:	f811 3b01 	ldrb.w	r3, [r1], #1
 800748c:	3b30      	subs	r3, #48	; 0x30
 800748e:	2b09      	cmp	r3, #9
 8007490:	d94e      	bls.n	8007530 <_vfiprintf_r+0x1c4>
 8007492:	b1b0      	cbz	r0, 80074c2 <_vfiprintf_r+0x156>
 8007494:	9207      	str	r2, [sp, #28]
 8007496:	e014      	b.n	80074c2 <_vfiprintf_r+0x156>
 8007498:	eba0 0308 	sub.w	r3, r0, r8
 800749c:	fa09 f303 	lsl.w	r3, r9, r3
 80074a0:	4313      	orrs	r3, r2
 80074a2:	9304      	str	r3, [sp, #16]
 80074a4:	46a2      	mov	sl, r4
 80074a6:	e7d2      	b.n	800744e <_vfiprintf_r+0xe2>
 80074a8:	9b03      	ldr	r3, [sp, #12]
 80074aa:	1d19      	adds	r1, r3, #4
 80074ac:	681b      	ldr	r3, [r3, #0]
 80074ae:	9103      	str	r1, [sp, #12]
 80074b0:	2b00      	cmp	r3, #0
 80074b2:	bfbb      	ittet	lt
 80074b4:	425b      	neglt	r3, r3
 80074b6:	f042 0202 	orrlt.w	r2, r2, #2
 80074ba:	9307      	strge	r3, [sp, #28]
 80074bc:	9307      	strlt	r3, [sp, #28]
 80074be:	bfb8      	it	lt
 80074c0:	9204      	strlt	r2, [sp, #16]
 80074c2:	7823      	ldrb	r3, [r4, #0]
 80074c4:	2b2e      	cmp	r3, #46	; 0x2e
 80074c6:	d10c      	bne.n	80074e2 <_vfiprintf_r+0x176>
 80074c8:	7863      	ldrb	r3, [r4, #1]
 80074ca:	2b2a      	cmp	r3, #42	; 0x2a
 80074cc:	d135      	bne.n	800753a <_vfiprintf_r+0x1ce>
 80074ce:	9b03      	ldr	r3, [sp, #12]
 80074d0:	1d1a      	adds	r2, r3, #4
 80074d2:	681b      	ldr	r3, [r3, #0]
 80074d4:	9203      	str	r2, [sp, #12]
 80074d6:	2b00      	cmp	r3, #0
 80074d8:	bfb8      	it	lt
 80074da:	f04f 33ff 	movlt.w	r3, #4294967295
 80074de:	3402      	adds	r4, #2
 80074e0:	9305      	str	r3, [sp, #20]
 80074e2:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 80075c8 <_vfiprintf_r+0x25c>
 80074e6:	7821      	ldrb	r1, [r4, #0]
 80074e8:	2203      	movs	r2, #3
 80074ea:	4650      	mov	r0, sl
 80074ec:	f7f8 fe78 	bl	80001e0 <memchr>
 80074f0:	b140      	cbz	r0, 8007504 <_vfiprintf_r+0x198>
 80074f2:	2340      	movs	r3, #64	; 0x40
 80074f4:	eba0 000a 	sub.w	r0, r0, sl
 80074f8:	fa03 f000 	lsl.w	r0, r3, r0
 80074fc:	9b04      	ldr	r3, [sp, #16]
 80074fe:	4303      	orrs	r3, r0
 8007500:	3401      	adds	r4, #1
 8007502:	9304      	str	r3, [sp, #16]
 8007504:	f814 1b01 	ldrb.w	r1, [r4], #1
 8007508:	482c      	ldr	r0, [pc, #176]	; (80075bc <_vfiprintf_r+0x250>)
 800750a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800750e:	2206      	movs	r2, #6
 8007510:	f7f8 fe66 	bl	80001e0 <memchr>
 8007514:	2800      	cmp	r0, #0
 8007516:	d03f      	beq.n	8007598 <_vfiprintf_r+0x22c>
 8007518:	4b29      	ldr	r3, [pc, #164]	; (80075c0 <_vfiprintf_r+0x254>)
 800751a:	bb1b      	cbnz	r3, 8007564 <_vfiprintf_r+0x1f8>
 800751c:	9b03      	ldr	r3, [sp, #12]
 800751e:	3307      	adds	r3, #7
 8007520:	f023 0307 	bic.w	r3, r3, #7
 8007524:	3308      	adds	r3, #8
 8007526:	9303      	str	r3, [sp, #12]
 8007528:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800752a:	443b      	add	r3, r7
 800752c:	9309      	str	r3, [sp, #36]	; 0x24
 800752e:	e767      	b.n	8007400 <_vfiprintf_r+0x94>
 8007530:	fb0c 3202 	mla	r2, ip, r2, r3
 8007534:	460c      	mov	r4, r1
 8007536:	2001      	movs	r0, #1
 8007538:	e7a5      	b.n	8007486 <_vfiprintf_r+0x11a>
 800753a:	2300      	movs	r3, #0
 800753c:	3401      	adds	r4, #1
 800753e:	9305      	str	r3, [sp, #20]
 8007540:	4619      	mov	r1, r3
 8007542:	f04f 0c0a 	mov.w	ip, #10
 8007546:	4620      	mov	r0, r4
 8007548:	f810 2b01 	ldrb.w	r2, [r0], #1
 800754c:	3a30      	subs	r2, #48	; 0x30
 800754e:	2a09      	cmp	r2, #9
 8007550:	d903      	bls.n	800755a <_vfiprintf_r+0x1ee>
 8007552:	2b00      	cmp	r3, #0
 8007554:	d0c5      	beq.n	80074e2 <_vfiprintf_r+0x176>
 8007556:	9105      	str	r1, [sp, #20]
 8007558:	e7c3      	b.n	80074e2 <_vfiprintf_r+0x176>
 800755a:	fb0c 2101 	mla	r1, ip, r1, r2
 800755e:	4604      	mov	r4, r0
 8007560:	2301      	movs	r3, #1
 8007562:	e7f0      	b.n	8007546 <_vfiprintf_r+0x1da>
 8007564:	ab03      	add	r3, sp, #12
 8007566:	9300      	str	r3, [sp, #0]
 8007568:	462a      	mov	r2, r5
 800756a:	4b16      	ldr	r3, [pc, #88]	; (80075c4 <_vfiprintf_r+0x258>)
 800756c:	a904      	add	r1, sp, #16
 800756e:	4630      	mov	r0, r6
 8007570:	f7fd fdd6 	bl	8005120 <_printf_float>
 8007574:	4607      	mov	r7, r0
 8007576:	1c78      	adds	r0, r7, #1
 8007578:	d1d6      	bne.n	8007528 <_vfiprintf_r+0x1bc>
 800757a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800757c:	07d9      	lsls	r1, r3, #31
 800757e:	d405      	bmi.n	800758c <_vfiprintf_r+0x220>
 8007580:	89ab      	ldrh	r3, [r5, #12]
 8007582:	059a      	lsls	r2, r3, #22
 8007584:	d402      	bmi.n	800758c <_vfiprintf_r+0x220>
 8007586:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8007588:	f000 faaf 	bl	8007aea <__retarget_lock_release_recursive>
 800758c:	89ab      	ldrh	r3, [r5, #12]
 800758e:	065b      	lsls	r3, r3, #25
 8007590:	f53f af12 	bmi.w	80073b8 <_vfiprintf_r+0x4c>
 8007594:	9809      	ldr	r0, [sp, #36]	; 0x24
 8007596:	e711      	b.n	80073bc <_vfiprintf_r+0x50>
 8007598:	ab03      	add	r3, sp, #12
 800759a:	9300      	str	r3, [sp, #0]
 800759c:	462a      	mov	r2, r5
 800759e:	4b09      	ldr	r3, [pc, #36]	; (80075c4 <_vfiprintf_r+0x258>)
 80075a0:	a904      	add	r1, sp, #16
 80075a2:	4630      	mov	r0, r6
 80075a4:	f7fe f860 	bl	8005668 <_printf_i>
 80075a8:	e7e4      	b.n	8007574 <_vfiprintf_r+0x208>
 80075aa:	bf00      	nop
 80075ac:	08008254 	.word	0x08008254
 80075b0:	08008274 	.word	0x08008274
 80075b4:	08008234 	.word	0x08008234
 80075b8:	080080dc 	.word	0x080080dc
 80075bc:	080080e6 	.word	0x080080e6
 80075c0:	08005121 	.word	0x08005121
 80075c4:	08007349 	.word	0x08007349
 80075c8:	080080e2 	.word	0x080080e2

080075cc <__swbuf_r>:
 80075cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80075ce:	460e      	mov	r6, r1
 80075d0:	4614      	mov	r4, r2
 80075d2:	4605      	mov	r5, r0
 80075d4:	b118      	cbz	r0, 80075de <__swbuf_r+0x12>
 80075d6:	6983      	ldr	r3, [r0, #24]
 80075d8:	b90b      	cbnz	r3, 80075de <__swbuf_r+0x12>
 80075da:	f000 f9e7 	bl	80079ac <__sinit>
 80075de:	4b21      	ldr	r3, [pc, #132]	; (8007664 <__swbuf_r+0x98>)
 80075e0:	429c      	cmp	r4, r3
 80075e2:	d12b      	bne.n	800763c <__swbuf_r+0x70>
 80075e4:	686c      	ldr	r4, [r5, #4]
 80075e6:	69a3      	ldr	r3, [r4, #24]
 80075e8:	60a3      	str	r3, [r4, #8]
 80075ea:	89a3      	ldrh	r3, [r4, #12]
 80075ec:	071a      	lsls	r2, r3, #28
 80075ee:	d52f      	bpl.n	8007650 <__swbuf_r+0x84>
 80075f0:	6923      	ldr	r3, [r4, #16]
 80075f2:	b36b      	cbz	r3, 8007650 <__swbuf_r+0x84>
 80075f4:	6923      	ldr	r3, [r4, #16]
 80075f6:	6820      	ldr	r0, [r4, #0]
 80075f8:	1ac0      	subs	r0, r0, r3
 80075fa:	6963      	ldr	r3, [r4, #20]
 80075fc:	b2f6      	uxtb	r6, r6
 80075fe:	4283      	cmp	r3, r0
 8007600:	4637      	mov	r7, r6
 8007602:	dc04      	bgt.n	800760e <__swbuf_r+0x42>
 8007604:	4621      	mov	r1, r4
 8007606:	4628      	mov	r0, r5
 8007608:	f000 f93c 	bl	8007884 <_fflush_r>
 800760c:	bb30      	cbnz	r0, 800765c <__swbuf_r+0x90>
 800760e:	68a3      	ldr	r3, [r4, #8]
 8007610:	3b01      	subs	r3, #1
 8007612:	60a3      	str	r3, [r4, #8]
 8007614:	6823      	ldr	r3, [r4, #0]
 8007616:	1c5a      	adds	r2, r3, #1
 8007618:	6022      	str	r2, [r4, #0]
 800761a:	701e      	strb	r6, [r3, #0]
 800761c:	6963      	ldr	r3, [r4, #20]
 800761e:	3001      	adds	r0, #1
 8007620:	4283      	cmp	r3, r0
 8007622:	d004      	beq.n	800762e <__swbuf_r+0x62>
 8007624:	89a3      	ldrh	r3, [r4, #12]
 8007626:	07db      	lsls	r3, r3, #31
 8007628:	d506      	bpl.n	8007638 <__swbuf_r+0x6c>
 800762a:	2e0a      	cmp	r6, #10
 800762c:	d104      	bne.n	8007638 <__swbuf_r+0x6c>
 800762e:	4621      	mov	r1, r4
 8007630:	4628      	mov	r0, r5
 8007632:	f000 f927 	bl	8007884 <_fflush_r>
 8007636:	b988      	cbnz	r0, 800765c <__swbuf_r+0x90>
 8007638:	4638      	mov	r0, r7
 800763a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800763c:	4b0a      	ldr	r3, [pc, #40]	; (8007668 <__swbuf_r+0x9c>)
 800763e:	429c      	cmp	r4, r3
 8007640:	d101      	bne.n	8007646 <__swbuf_r+0x7a>
 8007642:	68ac      	ldr	r4, [r5, #8]
 8007644:	e7cf      	b.n	80075e6 <__swbuf_r+0x1a>
 8007646:	4b09      	ldr	r3, [pc, #36]	; (800766c <__swbuf_r+0xa0>)
 8007648:	429c      	cmp	r4, r3
 800764a:	bf08      	it	eq
 800764c:	68ec      	ldreq	r4, [r5, #12]
 800764e:	e7ca      	b.n	80075e6 <__swbuf_r+0x1a>
 8007650:	4621      	mov	r1, r4
 8007652:	4628      	mov	r0, r5
 8007654:	f000 f81a 	bl	800768c <__swsetup_r>
 8007658:	2800      	cmp	r0, #0
 800765a:	d0cb      	beq.n	80075f4 <__swbuf_r+0x28>
 800765c:	f04f 37ff 	mov.w	r7, #4294967295
 8007660:	e7ea      	b.n	8007638 <__swbuf_r+0x6c>
 8007662:	bf00      	nop
 8007664:	08008254 	.word	0x08008254
 8007668:	08008274 	.word	0x08008274
 800766c:	08008234 	.word	0x08008234

08007670 <__ascii_wctomb>:
 8007670:	b149      	cbz	r1, 8007686 <__ascii_wctomb+0x16>
 8007672:	2aff      	cmp	r2, #255	; 0xff
 8007674:	bf85      	ittet	hi
 8007676:	238a      	movhi	r3, #138	; 0x8a
 8007678:	6003      	strhi	r3, [r0, #0]
 800767a:	700a      	strbls	r2, [r1, #0]
 800767c:	f04f 30ff 	movhi.w	r0, #4294967295
 8007680:	bf98      	it	ls
 8007682:	2001      	movls	r0, #1
 8007684:	4770      	bx	lr
 8007686:	4608      	mov	r0, r1
 8007688:	4770      	bx	lr
	...

0800768c <__swsetup_r>:
 800768c:	4b32      	ldr	r3, [pc, #200]	; (8007758 <__swsetup_r+0xcc>)
 800768e:	b570      	push	{r4, r5, r6, lr}
 8007690:	681d      	ldr	r5, [r3, #0]
 8007692:	4606      	mov	r6, r0
 8007694:	460c      	mov	r4, r1
 8007696:	b125      	cbz	r5, 80076a2 <__swsetup_r+0x16>
 8007698:	69ab      	ldr	r3, [r5, #24]
 800769a:	b913      	cbnz	r3, 80076a2 <__swsetup_r+0x16>
 800769c:	4628      	mov	r0, r5
 800769e:	f000 f985 	bl	80079ac <__sinit>
 80076a2:	4b2e      	ldr	r3, [pc, #184]	; (800775c <__swsetup_r+0xd0>)
 80076a4:	429c      	cmp	r4, r3
 80076a6:	d10f      	bne.n	80076c8 <__swsetup_r+0x3c>
 80076a8:	686c      	ldr	r4, [r5, #4]
 80076aa:	89a3      	ldrh	r3, [r4, #12]
 80076ac:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80076b0:	0719      	lsls	r1, r3, #28
 80076b2:	d42c      	bmi.n	800770e <__swsetup_r+0x82>
 80076b4:	06dd      	lsls	r5, r3, #27
 80076b6:	d411      	bmi.n	80076dc <__swsetup_r+0x50>
 80076b8:	2309      	movs	r3, #9
 80076ba:	6033      	str	r3, [r6, #0]
 80076bc:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80076c0:	81a3      	strh	r3, [r4, #12]
 80076c2:	f04f 30ff 	mov.w	r0, #4294967295
 80076c6:	e03e      	b.n	8007746 <__swsetup_r+0xba>
 80076c8:	4b25      	ldr	r3, [pc, #148]	; (8007760 <__swsetup_r+0xd4>)
 80076ca:	429c      	cmp	r4, r3
 80076cc:	d101      	bne.n	80076d2 <__swsetup_r+0x46>
 80076ce:	68ac      	ldr	r4, [r5, #8]
 80076d0:	e7eb      	b.n	80076aa <__swsetup_r+0x1e>
 80076d2:	4b24      	ldr	r3, [pc, #144]	; (8007764 <__swsetup_r+0xd8>)
 80076d4:	429c      	cmp	r4, r3
 80076d6:	bf08      	it	eq
 80076d8:	68ec      	ldreq	r4, [r5, #12]
 80076da:	e7e6      	b.n	80076aa <__swsetup_r+0x1e>
 80076dc:	0758      	lsls	r0, r3, #29
 80076de:	d512      	bpl.n	8007706 <__swsetup_r+0x7a>
 80076e0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80076e2:	b141      	cbz	r1, 80076f6 <__swsetup_r+0x6a>
 80076e4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80076e8:	4299      	cmp	r1, r3
 80076ea:	d002      	beq.n	80076f2 <__swsetup_r+0x66>
 80076ec:	4630      	mov	r0, r6
 80076ee:	f7ff fb31 	bl	8006d54 <_free_r>
 80076f2:	2300      	movs	r3, #0
 80076f4:	6363      	str	r3, [r4, #52]	; 0x34
 80076f6:	89a3      	ldrh	r3, [r4, #12]
 80076f8:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80076fc:	81a3      	strh	r3, [r4, #12]
 80076fe:	2300      	movs	r3, #0
 8007700:	6063      	str	r3, [r4, #4]
 8007702:	6923      	ldr	r3, [r4, #16]
 8007704:	6023      	str	r3, [r4, #0]
 8007706:	89a3      	ldrh	r3, [r4, #12]
 8007708:	f043 0308 	orr.w	r3, r3, #8
 800770c:	81a3      	strh	r3, [r4, #12]
 800770e:	6923      	ldr	r3, [r4, #16]
 8007710:	b94b      	cbnz	r3, 8007726 <__swsetup_r+0x9a>
 8007712:	89a3      	ldrh	r3, [r4, #12]
 8007714:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8007718:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800771c:	d003      	beq.n	8007726 <__swsetup_r+0x9a>
 800771e:	4621      	mov	r1, r4
 8007720:	4630      	mov	r0, r6
 8007722:	f000 fa09 	bl	8007b38 <__smakebuf_r>
 8007726:	89a0      	ldrh	r0, [r4, #12]
 8007728:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800772c:	f010 0301 	ands.w	r3, r0, #1
 8007730:	d00a      	beq.n	8007748 <__swsetup_r+0xbc>
 8007732:	2300      	movs	r3, #0
 8007734:	60a3      	str	r3, [r4, #8]
 8007736:	6963      	ldr	r3, [r4, #20]
 8007738:	425b      	negs	r3, r3
 800773a:	61a3      	str	r3, [r4, #24]
 800773c:	6923      	ldr	r3, [r4, #16]
 800773e:	b943      	cbnz	r3, 8007752 <__swsetup_r+0xc6>
 8007740:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8007744:	d1ba      	bne.n	80076bc <__swsetup_r+0x30>
 8007746:	bd70      	pop	{r4, r5, r6, pc}
 8007748:	0781      	lsls	r1, r0, #30
 800774a:	bf58      	it	pl
 800774c:	6963      	ldrpl	r3, [r4, #20]
 800774e:	60a3      	str	r3, [r4, #8]
 8007750:	e7f4      	b.n	800773c <__swsetup_r+0xb0>
 8007752:	2000      	movs	r0, #0
 8007754:	e7f7      	b.n	8007746 <__swsetup_r+0xba>
 8007756:	bf00      	nop
 8007758:	20000010 	.word	0x20000010
 800775c:	08008254 	.word	0x08008254
 8007760:	08008274 	.word	0x08008274
 8007764:	08008234 	.word	0x08008234

08007768 <abort>:
 8007768:	b508      	push	{r3, lr}
 800776a:	2006      	movs	r0, #6
 800776c:	f000 fa54 	bl	8007c18 <raise>
 8007770:	2001      	movs	r0, #1
 8007772:	f7fa fc15 	bl	8001fa0 <_exit>
	...

08007778 <__sflush_r>:
 8007778:	898a      	ldrh	r2, [r1, #12]
 800777a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800777e:	4605      	mov	r5, r0
 8007780:	0710      	lsls	r0, r2, #28
 8007782:	460c      	mov	r4, r1
 8007784:	d458      	bmi.n	8007838 <__sflush_r+0xc0>
 8007786:	684b      	ldr	r3, [r1, #4]
 8007788:	2b00      	cmp	r3, #0
 800778a:	dc05      	bgt.n	8007798 <__sflush_r+0x20>
 800778c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800778e:	2b00      	cmp	r3, #0
 8007790:	dc02      	bgt.n	8007798 <__sflush_r+0x20>
 8007792:	2000      	movs	r0, #0
 8007794:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007798:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800779a:	2e00      	cmp	r6, #0
 800779c:	d0f9      	beq.n	8007792 <__sflush_r+0x1a>
 800779e:	2300      	movs	r3, #0
 80077a0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80077a4:	682f      	ldr	r7, [r5, #0]
 80077a6:	602b      	str	r3, [r5, #0]
 80077a8:	d032      	beq.n	8007810 <__sflush_r+0x98>
 80077aa:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80077ac:	89a3      	ldrh	r3, [r4, #12]
 80077ae:	075a      	lsls	r2, r3, #29
 80077b0:	d505      	bpl.n	80077be <__sflush_r+0x46>
 80077b2:	6863      	ldr	r3, [r4, #4]
 80077b4:	1ac0      	subs	r0, r0, r3
 80077b6:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80077b8:	b10b      	cbz	r3, 80077be <__sflush_r+0x46>
 80077ba:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80077bc:	1ac0      	subs	r0, r0, r3
 80077be:	2300      	movs	r3, #0
 80077c0:	4602      	mov	r2, r0
 80077c2:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80077c4:	6a21      	ldr	r1, [r4, #32]
 80077c6:	4628      	mov	r0, r5
 80077c8:	47b0      	blx	r6
 80077ca:	1c43      	adds	r3, r0, #1
 80077cc:	89a3      	ldrh	r3, [r4, #12]
 80077ce:	d106      	bne.n	80077de <__sflush_r+0x66>
 80077d0:	6829      	ldr	r1, [r5, #0]
 80077d2:	291d      	cmp	r1, #29
 80077d4:	d82c      	bhi.n	8007830 <__sflush_r+0xb8>
 80077d6:	4a2a      	ldr	r2, [pc, #168]	; (8007880 <__sflush_r+0x108>)
 80077d8:	40ca      	lsrs	r2, r1
 80077da:	07d6      	lsls	r6, r2, #31
 80077dc:	d528      	bpl.n	8007830 <__sflush_r+0xb8>
 80077de:	2200      	movs	r2, #0
 80077e0:	6062      	str	r2, [r4, #4]
 80077e2:	04d9      	lsls	r1, r3, #19
 80077e4:	6922      	ldr	r2, [r4, #16]
 80077e6:	6022      	str	r2, [r4, #0]
 80077e8:	d504      	bpl.n	80077f4 <__sflush_r+0x7c>
 80077ea:	1c42      	adds	r2, r0, #1
 80077ec:	d101      	bne.n	80077f2 <__sflush_r+0x7a>
 80077ee:	682b      	ldr	r3, [r5, #0]
 80077f0:	b903      	cbnz	r3, 80077f4 <__sflush_r+0x7c>
 80077f2:	6560      	str	r0, [r4, #84]	; 0x54
 80077f4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80077f6:	602f      	str	r7, [r5, #0]
 80077f8:	2900      	cmp	r1, #0
 80077fa:	d0ca      	beq.n	8007792 <__sflush_r+0x1a>
 80077fc:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8007800:	4299      	cmp	r1, r3
 8007802:	d002      	beq.n	800780a <__sflush_r+0x92>
 8007804:	4628      	mov	r0, r5
 8007806:	f7ff faa5 	bl	8006d54 <_free_r>
 800780a:	2000      	movs	r0, #0
 800780c:	6360      	str	r0, [r4, #52]	; 0x34
 800780e:	e7c1      	b.n	8007794 <__sflush_r+0x1c>
 8007810:	6a21      	ldr	r1, [r4, #32]
 8007812:	2301      	movs	r3, #1
 8007814:	4628      	mov	r0, r5
 8007816:	47b0      	blx	r6
 8007818:	1c41      	adds	r1, r0, #1
 800781a:	d1c7      	bne.n	80077ac <__sflush_r+0x34>
 800781c:	682b      	ldr	r3, [r5, #0]
 800781e:	2b00      	cmp	r3, #0
 8007820:	d0c4      	beq.n	80077ac <__sflush_r+0x34>
 8007822:	2b1d      	cmp	r3, #29
 8007824:	d001      	beq.n	800782a <__sflush_r+0xb2>
 8007826:	2b16      	cmp	r3, #22
 8007828:	d101      	bne.n	800782e <__sflush_r+0xb6>
 800782a:	602f      	str	r7, [r5, #0]
 800782c:	e7b1      	b.n	8007792 <__sflush_r+0x1a>
 800782e:	89a3      	ldrh	r3, [r4, #12]
 8007830:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8007834:	81a3      	strh	r3, [r4, #12]
 8007836:	e7ad      	b.n	8007794 <__sflush_r+0x1c>
 8007838:	690f      	ldr	r7, [r1, #16]
 800783a:	2f00      	cmp	r7, #0
 800783c:	d0a9      	beq.n	8007792 <__sflush_r+0x1a>
 800783e:	0793      	lsls	r3, r2, #30
 8007840:	680e      	ldr	r6, [r1, #0]
 8007842:	bf08      	it	eq
 8007844:	694b      	ldreq	r3, [r1, #20]
 8007846:	600f      	str	r7, [r1, #0]
 8007848:	bf18      	it	ne
 800784a:	2300      	movne	r3, #0
 800784c:	eba6 0807 	sub.w	r8, r6, r7
 8007850:	608b      	str	r3, [r1, #8]
 8007852:	f1b8 0f00 	cmp.w	r8, #0
 8007856:	dd9c      	ble.n	8007792 <__sflush_r+0x1a>
 8007858:	6a21      	ldr	r1, [r4, #32]
 800785a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800785c:	4643      	mov	r3, r8
 800785e:	463a      	mov	r2, r7
 8007860:	4628      	mov	r0, r5
 8007862:	47b0      	blx	r6
 8007864:	2800      	cmp	r0, #0
 8007866:	dc06      	bgt.n	8007876 <__sflush_r+0xfe>
 8007868:	89a3      	ldrh	r3, [r4, #12]
 800786a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800786e:	81a3      	strh	r3, [r4, #12]
 8007870:	f04f 30ff 	mov.w	r0, #4294967295
 8007874:	e78e      	b.n	8007794 <__sflush_r+0x1c>
 8007876:	4407      	add	r7, r0
 8007878:	eba8 0800 	sub.w	r8, r8, r0
 800787c:	e7e9      	b.n	8007852 <__sflush_r+0xda>
 800787e:	bf00      	nop
 8007880:	20400001 	.word	0x20400001

08007884 <_fflush_r>:
 8007884:	b538      	push	{r3, r4, r5, lr}
 8007886:	690b      	ldr	r3, [r1, #16]
 8007888:	4605      	mov	r5, r0
 800788a:	460c      	mov	r4, r1
 800788c:	b913      	cbnz	r3, 8007894 <_fflush_r+0x10>
 800788e:	2500      	movs	r5, #0
 8007890:	4628      	mov	r0, r5
 8007892:	bd38      	pop	{r3, r4, r5, pc}
 8007894:	b118      	cbz	r0, 800789e <_fflush_r+0x1a>
 8007896:	6983      	ldr	r3, [r0, #24]
 8007898:	b90b      	cbnz	r3, 800789e <_fflush_r+0x1a>
 800789a:	f000 f887 	bl	80079ac <__sinit>
 800789e:	4b14      	ldr	r3, [pc, #80]	; (80078f0 <_fflush_r+0x6c>)
 80078a0:	429c      	cmp	r4, r3
 80078a2:	d11b      	bne.n	80078dc <_fflush_r+0x58>
 80078a4:	686c      	ldr	r4, [r5, #4]
 80078a6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80078aa:	2b00      	cmp	r3, #0
 80078ac:	d0ef      	beq.n	800788e <_fflush_r+0xa>
 80078ae:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80078b0:	07d0      	lsls	r0, r2, #31
 80078b2:	d404      	bmi.n	80078be <_fflush_r+0x3a>
 80078b4:	0599      	lsls	r1, r3, #22
 80078b6:	d402      	bmi.n	80078be <_fflush_r+0x3a>
 80078b8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80078ba:	f000 f915 	bl	8007ae8 <__retarget_lock_acquire_recursive>
 80078be:	4628      	mov	r0, r5
 80078c0:	4621      	mov	r1, r4
 80078c2:	f7ff ff59 	bl	8007778 <__sflush_r>
 80078c6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80078c8:	07da      	lsls	r2, r3, #31
 80078ca:	4605      	mov	r5, r0
 80078cc:	d4e0      	bmi.n	8007890 <_fflush_r+0xc>
 80078ce:	89a3      	ldrh	r3, [r4, #12]
 80078d0:	059b      	lsls	r3, r3, #22
 80078d2:	d4dd      	bmi.n	8007890 <_fflush_r+0xc>
 80078d4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80078d6:	f000 f908 	bl	8007aea <__retarget_lock_release_recursive>
 80078da:	e7d9      	b.n	8007890 <_fflush_r+0xc>
 80078dc:	4b05      	ldr	r3, [pc, #20]	; (80078f4 <_fflush_r+0x70>)
 80078de:	429c      	cmp	r4, r3
 80078e0:	d101      	bne.n	80078e6 <_fflush_r+0x62>
 80078e2:	68ac      	ldr	r4, [r5, #8]
 80078e4:	e7df      	b.n	80078a6 <_fflush_r+0x22>
 80078e6:	4b04      	ldr	r3, [pc, #16]	; (80078f8 <_fflush_r+0x74>)
 80078e8:	429c      	cmp	r4, r3
 80078ea:	bf08      	it	eq
 80078ec:	68ec      	ldreq	r4, [r5, #12]
 80078ee:	e7da      	b.n	80078a6 <_fflush_r+0x22>
 80078f0:	08008254 	.word	0x08008254
 80078f4:	08008274 	.word	0x08008274
 80078f8:	08008234 	.word	0x08008234

080078fc <std>:
 80078fc:	2300      	movs	r3, #0
 80078fe:	b510      	push	{r4, lr}
 8007900:	4604      	mov	r4, r0
 8007902:	e9c0 3300 	strd	r3, r3, [r0]
 8007906:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800790a:	6083      	str	r3, [r0, #8]
 800790c:	8181      	strh	r1, [r0, #12]
 800790e:	6643      	str	r3, [r0, #100]	; 0x64
 8007910:	81c2      	strh	r2, [r0, #14]
 8007912:	6183      	str	r3, [r0, #24]
 8007914:	4619      	mov	r1, r3
 8007916:	2208      	movs	r2, #8
 8007918:	305c      	adds	r0, #92	; 0x5c
 800791a:	f7fd fb59 	bl	8004fd0 <memset>
 800791e:	4b05      	ldr	r3, [pc, #20]	; (8007934 <std+0x38>)
 8007920:	6263      	str	r3, [r4, #36]	; 0x24
 8007922:	4b05      	ldr	r3, [pc, #20]	; (8007938 <std+0x3c>)
 8007924:	62a3      	str	r3, [r4, #40]	; 0x28
 8007926:	4b05      	ldr	r3, [pc, #20]	; (800793c <std+0x40>)
 8007928:	62e3      	str	r3, [r4, #44]	; 0x2c
 800792a:	4b05      	ldr	r3, [pc, #20]	; (8007940 <std+0x44>)
 800792c:	6224      	str	r4, [r4, #32]
 800792e:	6323      	str	r3, [r4, #48]	; 0x30
 8007930:	bd10      	pop	{r4, pc}
 8007932:	bf00      	nop
 8007934:	08007c51 	.word	0x08007c51
 8007938:	08007c73 	.word	0x08007c73
 800793c:	08007cab 	.word	0x08007cab
 8007940:	08007ccf 	.word	0x08007ccf

08007944 <_cleanup_r>:
 8007944:	4901      	ldr	r1, [pc, #4]	; (800794c <_cleanup_r+0x8>)
 8007946:	f000 b8af 	b.w	8007aa8 <_fwalk_reent>
 800794a:	bf00      	nop
 800794c:	08007885 	.word	0x08007885

08007950 <__sfmoreglue>:
 8007950:	b570      	push	{r4, r5, r6, lr}
 8007952:	2268      	movs	r2, #104	; 0x68
 8007954:	1e4d      	subs	r5, r1, #1
 8007956:	4355      	muls	r5, r2
 8007958:	460e      	mov	r6, r1
 800795a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800795e:	f7ff fa65 	bl	8006e2c <_malloc_r>
 8007962:	4604      	mov	r4, r0
 8007964:	b140      	cbz	r0, 8007978 <__sfmoreglue+0x28>
 8007966:	2100      	movs	r1, #0
 8007968:	e9c0 1600 	strd	r1, r6, [r0]
 800796c:	300c      	adds	r0, #12
 800796e:	60a0      	str	r0, [r4, #8]
 8007970:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8007974:	f7fd fb2c 	bl	8004fd0 <memset>
 8007978:	4620      	mov	r0, r4
 800797a:	bd70      	pop	{r4, r5, r6, pc}

0800797c <__sfp_lock_acquire>:
 800797c:	4801      	ldr	r0, [pc, #4]	; (8007984 <__sfp_lock_acquire+0x8>)
 800797e:	f000 b8b3 	b.w	8007ae8 <__retarget_lock_acquire_recursive>
 8007982:	bf00      	nop
 8007984:	20000361 	.word	0x20000361

08007988 <__sfp_lock_release>:
 8007988:	4801      	ldr	r0, [pc, #4]	; (8007990 <__sfp_lock_release+0x8>)
 800798a:	f000 b8ae 	b.w	8007aea <__retarget_lock_release_recursive>
 800798e:	bf00      	nop
 8007990:	20000361 	.word	0x20000361

08007994 <__sinit_lock_acquire>:
 8007994:	4801      	ldr	r0, [pc, #4]	; (800799c <__sinit_lock_acquire+0x8>)
 8007996:	f000 b8a7 	b.w	8007ae8 <__retarget_lock_acquire_recursive>
 800799a:	bf00      	nop
 800799c:	20000362 	.word	0x20000362

080079a0 <__sinit_lock_release>:
 80079a0:	4801      	ldr	r0, [pc, #4]	; (80079a8 <__sinit_lock_release+0x8>)
 80079a2:	f000 b8a2 	b.w	8007aea <__retarget_lock_release_recursive>
 80079a6:	bf00      	nop
 80079a8:	20000362 	.word	0x20000362

080079ac <__sinit>:
 80079ac:	b510      	push	{r4, lr}
 80079ae:	4604      	mov	r4, r0
 80079b0:	f7ff fff0 	bl	8007994 <__sinit_lock_acquire>
 80079b4:	69a3      	ldr	r3, [r4, #24]
 80079b6:	b11b      	cbz	r3, 80079c0 <__sinit+0x14>
 80079b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80079bc:	f7ff bff0 	b.w	80079a0 <__sinit_lock_release>
 80079c0:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80079c4:	6523      	str	r3, [r4, #80]	; 0x50
 80079c6:	4b13      	ldr	r3, [pc, #76]	; (8007a14 <__sinit+0x68>)
 80079c8:	4a13      	ldr	r2, [pc, #76]	; (8007a18 <__sinit+0x6c>)
 80079ca:	681b      	ldr	r3, [r3, #0]
 80079cc:	62a2      	str	r2, [r4, #40]	; 0x28
 80079ce:	42a3      	cmp	r3, r4
 80079d0:	bf04      	itt	eq
 80079d2:	2301      	moveq	r3, #1
 80079d4:	61a3      	streq	r3, [r4, #24]
 80079d6:	4620      	mov	r0, r4
 80079d8:	f000 f820 	bl	8007a1c <__sfp>
 80079dc:	6060      	str	r0, [r4, #4]
 80079de:	4620      	mov	r0, r4
 80079e0:	f000 f81c 	bl	8007a1c <__sfp>
 80079e4:	60a0      	str	r0, [r4, #8]
 80079e6:	4620      	mov	r0, r4
 80079e8:	f000 f818 	bl	8007a1c <__sfp>
 80079ec:	2200      	movs	r2, #0
 80079ee:	60e0      	str	r0, [r4, #12]
 80079f0:	2104      	movs	r1, #4
 80079f2:	6860      	ldr	r0, [r4, #4]
 80079f4:	f7ff ff82 	bl	80078fc <std>
 80079f8:	68a0      	ldr	r0, [r4, #8]
 80079fa:	2201      	movs	r2, #1
 80079fc:	2109      	movs	r1, #9
 80079fe:	f7ff ff7d 	bl	80078fc <std>
 8007a02:	68e0      	ldr	r0, [r4, #12]
 8007a04:	2202      	movs	r2, #2
 8007a06:	2112      	movs	r1, #18
 8007a08:	f7ff ff78 	bl	80078fc <std>
 8007a0c:	2301      	movs	r3, #1
 8007a0e:	61a3      	str	r3, [r4, #24]
 8007a10:	e7d2      	b.n	80079b8 <__sinit+0xc>
 8007a12:	bf00      	nop
 8007a14:	08007ebc 	.word	0x08007ebc
 8007a18:	08007945 	.word	0x08007945

08007a1c <__sfp>:
 8007a1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007a1e:	4607      	mov	r7, r0
 8007a20:	f7ff ffac 	bl	800797c <__sfp_lock_acquire>
 8007a24:	4b1e      	ldr	r3, [pc, #120]	; (8007aa0 <__sfp+0x84>)
 8007a26:	681e      	ldr	r6, [r3, #0]
 8007a28:	69b3      	ldr	r3, [r6, #24]
 8007a2a:	b913      	cbnz	r3, 8007a32 <__sfp+0x16>
 8007a2c:	4630      	mov	r0, r6
 8007a2e:	f7ff ffbd 	bl	80079ac <__sinit>
 8007a32:	3648      	adds	r6, #72	; 0x48
 8007a34:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8007a38:	3b01      	subs	r3, #1
 8007a3a:	d503      	bpl.n	8007a44 <__sfp+0x28>
 8007a3c:	6833      	ldr	r3, [r6, #0]
 8007a3e:	b30b      	cbz	r3, 8007a84 <__sfp+0x68>
 8007a40:	6836      	ldr	r6, [r6, #0]
 8007a42:	e7f7      	b.n	8007a34 <__sfp+0x18>
 8007a44:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8007a48:	b9d5      	cbnz	r5, 8007a80 <__sfp+0x64>
 8007a4a:	4b16      	ldr	r3, [pc, #88]	; (8007aa4 <__sfp+0x88>)
 8007a4c:	60e3      	str	r3, [r4, #12]
 8007a4e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8007a52:	6665      	str	r5, [r4, #100]	; 0x64
 8007a54:	f000 f847 	bl	8007ae6 <__retarget_lock_init_recursive>
 8007a58:	f7ff ff96 	bl	8007988 <__sfp_lock_release>
 8007a5c:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8007a60:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8007a64:	6025      	str	r5, [r4, #0]
 8007a66:	61a5      	str	r5, [r4, #24]
 8007a68:	2208      	movs	r2, #8
 8007a6a:	4629      	mov	r1, r5
 8007a6c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8007a70:	f7fd faae 	bl	8004fd0 <memset>
 8007a74:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8007a78:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8007a7c:	4620      	mov	r0, r4
 8007a7e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007a80:	3468      	adds	r4, #104	; 0x68
 8007a82:	e7d9      	b.n	8007a38 <__sfp+0x1c>
 8007a84:	2104      	movs	r1, #4
 8007a86:	4638      	mov	r0, r7
 8007a88:	f7ff ff62 	bl	8007950 <__sfmoreglue>
 8007a8c:	4604      	mov	r4, r0
 8007a8e:	6030      	str	r0, [r6, #0]
 8007a90:	2800      	cmp	r0, #0
 8007a92:	d1d5      	bne.n	8007a40 <__sfp+0x24>
 8007a94:	f7ff ff78 	bl	8007988 <__sfp_lock_release>
 8007a98:	230c      	movs	r3, #12
 8007a9a:	603b      	str	r3, [r7, #0]
 8007a9c:	e7ee      	b.n	8007a7c <__sfp+0x60>
 8007a9e:	bf00      	nop
 8007aa0:	08007ebc 	.word	0x08007ebc
 8007aa4:	ffff0001 	.word	0xffff0001

08007aa8 <_fwalk_reent>:
 8007aa8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007aac:	4606      	mov	r6, r0
 8007aae:	4688      	mov	r8, r1
 8007ab0:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8007ab4:	2700      	movs	r7, #0
 8007ab6:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8007aba:	f1b9 0901 	subs.w	r9, r9, #1
 8007abe:	d505      	bpl.n	8007acc <_fwalk_reent+0x24>
 8007ac0:	6824      	ldr	r4, [r4, #0]
 8007ac2:	2c00      	cmp	r4, #0
 8007ac4:	d1f7      	bne.n	8007ab6 <_fwalk_reent+0xe>
 8007ac6:	4638      	mov	r0, r7
 8007ac8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8007acc:	89ab      	ldrh	r3, [r5, #12]
 8007ace:	2b01      	cmp	r3, #1
 8007ad0:	d907      	bls.n	8007ae2 <_fwalk_reent+0x3a>
 8007ad2:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8007ad6:	3301      	adds	r3, #1
 8007ad8:	d003      	beq.n	8007ae2 <_fwalk_reent+0x3a>
 8007ada:	4629      	mov	r1, r5
 8007adc:	4630      	mov	r0, r6
 8007ade:	47c0      	blx	r8
 8007ae0:	4307      	orrs	r7, r0
 8007ae2:	3568      	adds	r5, #104	; 0x68
 8007ae4:	e7e9      	b.n	8007aba <_fwalk_reent+0x12>

08007ae6 <__retarget_lock_init_recursive>:
 8007ae6:	4770      	bx	lr

08007ae8 <__retarget_lock_acquire_recursive>:
 8007ae8:	4770      	bx	lr

08007aea <__retarget_lock_release_recursive>:
 8007aea:	4770      	bx	lr

08007aec <__swhatbuf_r>:
 8007aec:	b570      	push	{r4, r5, r6, lr}
 8007aee:	460e      	mov	r6, r1
 8007af0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007af4:	2900      	cmp	r1, #0
 8007af6:	b096      	sub	sp, #88	; 0x58
 8007af8:	4614      	mov	r4, r2
 8007afa:	461d      	mov	r5, r3
 8007afc:	da08      	bge.n	8007b10 <__swhatbuf_r+0x24>
 8007afe:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8007b02:	2200      	movs	r2, #0
 8007b04:	602a      	str	r2, [r5, #0]
 8007b06:	061a      	lsls	r2, r3, #24
 8007b08:	d410      	bmi.n	8007b2c <__swhatbuf_r+0x40>
 8007b0a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8007b0e:	e00e      	b.n	8007b2e <__swhatbuf_r+0x42>
 8007b10:	466a      	mov	r2, sp
 8007b12:	f000 f903 	bl	8007d1c <_fstat_r>
 8007b16:	2800      	cmp	r0, #0
 8007b18:	dbf1      	blt.n	8007afe <__swhatbuf_r+0x12>
 8007b1a:	9a01      	ldr	r2, [sp, #4]
 8007b1c:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8007b20:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8007b24:	425a      	negs	r2, r3
 8007b26:	415a      	adcs	r2, r3
 8007b28:	602a      	str	r2, [r5, #0]
 8007b2a:	e7ee      	b.n	8007b0a <__swhatbuf_r+0x1e>
 8007b2c:	2340      	movs	r3, #64	; 0x40
 8007b2e:	2000      	movs	r0, #0
 8007b30:	6023      	str	r3, [r4, #0]
 8007b32:	b016      	add	sp, #88	; 0x58
 8007b34:	bd70      	pop	{r4, r5, r6, pc}
	...

08007b38 <__smakebuf_r>:
 8007b38:	898b      	ldrh	r3, [r1, #12]
 8007b3a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007b3c:	079d      	lsls	r5, r3, #30
 8007b3e:	4606      	mov	r6, r0
 8007b40:	460c      	mov	r4, r1
 8007b42:	d507      	bpl.n	8007b54 <__smakebuf_r+0x1c>
 8007b44:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8007b48:	6023      	str	r3, [r4, #0]
 8007b4a:	6123      	str	r3, [r4, #16]
 8007b4c:	2301      	movs	r3, #1
 8007b4e:	6163      	str	r3, [r4, #20]
 8007b50:	b002      	add	sp, #8
 8007b52:	bd70      	pop	{r4, r5, r6, pc}
 8007b54:	ab01      	add	r3, sp, #4
 8007b56:	466a      	mov	r2, sp
 8007b58:	f7ff ffc8 	bl	8007aec <__swhatbuf_r>
 8007b5c:	9900      	ldr	r1, [sp, #0]
 8007b5e:	4605      	mov	r5, r0
 8007b60:	4630      	mov	r0, r6
 8007b62:	f7ff f963 	bl	8006e2c <_malloc_r>
 8007b66:	b948      	cbnz	r0, 8007b7c <__smakebuf_r+0x44>
 8007b68:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8007b6c:	059a      	lsls	r2, r3, #22
 8007b6e:	d4ef      	bmi.n	8007b50 <__smakebuf_r+0x18>
 8007b70:	f023 0303 	bic.w	r3, r3, #3
 8007b74:	f043 0302 	orr.w	r3, r3, #2
 8007b78:	81a3      	strh	r3, [r4, #12]
 8007b7a:	e7e3      	b.n	8007b44 <__smakebuf_r+0xc>
 8007b7c:	4b0d      	ldr	r3, [pc, #52]	; (8007bb4 <__smakebuf_r+0x7c>)
 8007b7e:	62b3      	str	r3, [r6, #40]	; 0x28
 8007b80:	89a3      	ldrh	r3, [r4, #12]
 8007b82:	6020      	str	r0, [r4, #0]
 8007b84:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8007b88:	81a3      	strh	r3, [r4, #12]
 8007b8a:	9b00      	ldr	r3, [sp, #0]
 8007b8c:	6163      	str	r3, [r4, #20]
 8007b8e:	9b01      	ldr	r3, [sp, #4]
 8007b90:	6120      	str	r0, [r4, #16]
 8007b92:	b15b      	cbz	r3, 8007bac <__smakebuf_r+0x74>
 8007b94:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8007b98:	4630      	mov	r0, r6
 8007b9a:	f000 f8d1 	bl	8007d40 <_isatty_r>
 8007b9e:	b128      	cbz	r0, 8007bac <__smakebuf_r+0x74>
 8007ba0:	89a3      	ldrh	r3, [r4, #12]
 8007ba2:	f023 0303 	bic.w	r3, r3, #3
 8007ba6:	f043 0301 	orr.w	r3, r3, #1
 8007baa:	81a3      	strh	r3, [r4, #12]
 8007bac:	89a0      	ldrh	r0, [r4, #12]
 8007bae:	4305      	orrs	r5, r0
 8007bb0:	81a5      	strh	r5, [r4, #12]
 8007bb2:	e7cd      	b.n	8007b50 <__smakebuf_r+0x18>
 8007bb4:	08007945 	.word	0x08007945

08007bb8 <_malloc_usable_size_r>:
 8007bb8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8007bbc:	1f18      	subs	r0, r3, #4
 8007bbe:	2b00      	cmp	r3, #0
 8007bc0:	bfbc      	itt	lt
 8007bc2:	580b      	ldrlt	r3, [r1, r0]
 8007bc4:	18c0      	addlt	r0, r0, r3
 8007bc6:	4770      	bx	lr

08007bc8 <_raise_r>:
 8007bc8:	291f      	cmp	r1, #31
 8007bca:	b538      	push	{r3, r4, r5, lr}
 8007bcc:	4604      	mov	r4, r0
 8007bce:	460d      	mov	r5, r1
 8007bd0:	d904      	bls.n	8007bdc <_raise_r+0x14>
 8007bd2:	2316      	movs	r3, #22
 8007bd4:	6003      	str	r3, [r0, #0]
 8007bd6:	f04f 30ff 	mov.w	r0, #4294967295
 8007bda:	bd38      	pop	{r3, r4, r5, pc}
 8007bdc:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8007bde:	b112      	cbz	r2, 8007be6 <_raise_r+0x1e>
 8007be0:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8007be4:	b94b      	cbnz	r3, 8007bfa <_raise_r+0x32>
 8007be6:	4620      	mov	r0, r4
 8007be8:	f000 f830 	bl	8007c4c <_getpid_r>
 8007bec:	462a      	mov	r2, r5
 8007bee:	4601      	mov	r1, r0
 8007bf0:	4620      	mov	r0, r4
 8007bf2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8007bf6:	f000 b817 	b.w	8007c28 <_kill_r>
 8007bfa:	2b01      	cmp	r3, #1
 8007bfc:	d00a      	beq.n	8007c14 <_raise_r+0x4c>
 8007bfe:	1c59      	adds	r1, r3, #1
 8007c00:	d103      	bne.n	8007c0a <_raise_r+0x42>
 8007c02:	2316      	movs	r3, #22
 8007c04:	6003      	str	r3, [r0, #0]
 8007c06:	2001      	movs	r0, #1
 8007c08:	e7e7      	b.n	8007bda <_raise_r+0x12>
 8007c0a:	2400      	movs	r4, #0
 8007c0c:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8007c10:	4628      	mov	r0, r5
 8007c12:	4798      	blx	r3
 8007c14:	2000      	movs	r0, #0
 8007c16:	e7e0      	b.n	8007bda <_raise_r+0x12>

08007c18 <raise>:
 8007c18:	4b02      	ldr	r3, [pc, #8]	; (8007c24 <raise+0xc>)
 8007c1a:	4601      	mov	r1, r0
 8007c1c:	6818      	ldr	r0, [r3, #0]
 8007c1e:	f7ff bfd3 	b.w	8007bc8 <_raise_r>
 8007c22:	bf00      	nop
 8007c24:	20000010 	.word	0x20000010

08007c28 <_kill_r>:
 8007c28:	b538      	push	{r3, r4, r5, lr}
 8007c2a:	4d07      	ldr	r5, [pc, #28]	; (8007c48 <_kill_r+0x20>)
 8007c2c:	2300      	movs	r3, #0
 8007c2e:	4604      	mov	r4, r0
 8007c30:	4608      	mov	r0, r1
 8007c32:	4611      	mov	r1, r2
 8007c34:	602b      	str	r3, [r5, #0]
 8007c36:	f7fa f9a3 	bl	8001f80 <_kill>
 8007c3a:	1c43      	adds	r3, r0, #1
 8007c3c:	d102      	bne.n	8007c44 <_kill_r+0x1c>
 8007c3e:	682b      	ldr	r3, [r5, #0]
 8007c40:	b103      	cbz	r3, 8007c44 <_kill_r+0x1c>
 8007c42:	6023      	str	r3, [r4, #0]
 8007c44:	bd38      	pop	{r3, r4, r5, pc}
 8007c46:	bf00      	nop
 8007c48:	2000035c 	.word	0x2000035c

08007c4c <_getpid_r>:
 8007c4c:	f7fa b990 	b.w	8001f70 <_getpid>

08007c50 <__sread>:
 8007c50:	b510      	push	{r4, lr}
 8007c52:	460c      	mov	r4, r1
 8007c54:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007c58:	f000 f894 	bl	8007d84 <_read_r>
 8007c5c:	2800      	cmp	r0, #0
 8007c5e:	bfab      	itete	ge
 8007c60:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8007c62:	89a3      	ldrhlt	r3, [r4, #12]
 8007c64:	181b      	addge	r3, r3, r0
 8007c66:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8007c6a:	bfac      	ite	ge
 8007c6c:	6563      	strge	r3, [r4, #84]	; 0x54
 8007c6e:	81a3      	strhlt	r3, [r4, #12]
 8007c70:	bd10      	pop	{r4, pc}

08007c72 <__swrite>:
 8007c72:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007c76:	461f      	mov	r7, r3
 8007c78:	898b      	ldrh	r3, [r1, #12]
 8007c7a:	05db      	lsls	r3, r3, #23
 8007c7c:	4605      	mov	r5, r0
 8007c7e:	460c      	mov	r4, r1
 8007c80:	4616      	mov	r6, r2
 8007c82:	d505      	bpl.n	8007c90 <__swrite+0x1e>
 8007c84:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007c88:	2302      	movs	r3, #2
 8007c8a:	2200      	movs	r2, #0
 8007c8c:	f000 f868 	bl	8007d60 <_lseek_r>
 8007c90:	89a3      	ldrh	r3, [r4, #12]
 8007c92:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8007c96:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8007c9a:	81a3      	strh	r3, [r4, #12]
 8007c9c:	4632      	mov	r2, r6
 8007c9e:	463b      	mov	r3, r7
 8007ca0:	4628      	mov	r0, r5
 8007ca2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8007ca6:	f000 b817 	b.w	8007cd8 <_write_r>

08007caa <__sseek>:
 8007caa:	b510      	push	{r4, lr}
 8007cac:	460c      	mov	r4, r1
 8007cae:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007cb2:	f000 f855 	bl	8007d60 <_lseek_r>
 8007cb6:	1c43      	adds	r3, r0, #1
 8007cb8:	89a3      	ldrh	r3, [r4, #12]
 8007cba:	bf15      	itete	ne
 8007cbc:	6560      	strne	r0, [r4, #84]	; 0x54
 8007cbe:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8007cc2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8007cc6:	81a3      	strheq	r3, [r4, #12]
 8007cc8:	bf18      	it	ne
 8007cca:	81a3      	strhne	r3, [r4, #12]
 8007ccc:	bd10      	pop	{r4, pc}

08007cce <__sclose>:
 8007cce:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007cd2:	f000 b813 	b.w	8007cfc <_close_r>
	...

08007cd8 <_write_r>:
 8007cd8:	b538      	push	{r3, r4, r5, lr}
 8007cda:	4d07      	ldr	r5, [pc, #28]	; (8007cf8 <_write_r+0x20>)
 8007cdc:	4604      	mov	r4, r0
 8007cde:	4608      	mov	r0, r1
 8007ce0:	4611      	mov	r1, r2
 8007ce2:	2200      	movs	r2, #0
 8007ce4:	602a      	str	r2, [r5, #0]
 8007ce6:	461a      	mov	r2, r3
 8007ce8:	f7fa f981 	bl	8001fee <_write>
 8007cec:	1c43      	adds	r3, r0, #1
 8007cee:	d102      	bne.n	8007cf6 <_write_r+0x1e>
 8007cf0:	682b      	ldr	r3, [r5, #0]
 8007cf2:	b103      	cbz	r3, 8007cf6 <_write_r+0x1e>
 8007cf4:	6023      	str	r3, [r4, #0]
 8007cf6:	bd38      	pop	{r3, r4, r5, pc}
 8007cf8:	2000035c 	.word	0x2000035c

08007cfc <_close_r>:
 8007cfc:	b538      	push	{r3, r4, r5, lr}
 8007cfe:	4d06      	ldr	r5, [pc, #24]	; (8007d18 <_close_r+0x1c>)
 8007d00:	2300      	movs	r3, #0
 8007d02:	4604      	mov	r4, r0
 8007d04:	4608      	mov	r0, r1
 8007d06:	602b      	str	r3, [r5, #0]
 8007d08:	f7fa f98d 	bl	8002026 <_close>
 8007d0c:	1c43      	adds	r3, r0, #1
 8007d0e:	d102      	bne.n	8007d16 <_close_r+0x1a>
 8007d10:	682b      	ldr	r3, [r5, #0]
 8007d12:	b103      	cbz	r3, 8007d16 <_close_r+0x1a>
 8007d14:	6023      	str	r3, [r4, #0]
 8007d16:	bd38      	pop	{r3, r4, r5, pc}
 8007d18:	2000035c 	.word	0x2000035c

08007d1c <_fstat_r>:
 8007d1c:	b538      	push	{r3, r4, r5, lr}
 8007d1e:	4d07      	ldr	r5, [pc, #28]	; (8007d3c <_fstat_r+0x20>)
 8007d20:	2300      	movs	r3, #0
 8007d22:	4604      	mov	r4, r0
 8007d24:	4608      	mov	r0, r1
 8007d26:	4611      	mov	r1, r2
 8007d28:	602b      	str	r3, [r5, #0]
 8007d2a:	f7fa f988 	bl	800203e <_fstat>
 8007d2e:	1c43      	adds	r3, r0, #1
 8007d30:	d102      	bne.n	8007d38 <_fstat_r+0x1c>
 8007d32:	682b      	ldr	r3, [r5, #0]
 8007d34:	b103      	cbz	r3, 8007d38 <_fstat_r+0x1c>
 8007d36:	6023      	str	r3, [r4, #0]
 8007d38:	bd38      	pop	{r3, r4, r5, pc}
 8007d3a:	bf00      	nop
 8007d3c:	2000035c 	.word	0x2000035c

08007d40 <_isatty_r>:
 8007d40:	b538      	push	{r3, r4, r5, lr}
 8007d42:	4d06      	ldr	r5, [pc, #24]	; (8007d5c <_isatty_r+0x1c>)
 8007d44:	2300      	movs	r3, #0
 8007d46:	4604      	mov	r4, r0
 8007d48:	4608      	mov	r0, r1
 8007d4a:	602b      	str	r3, [r5, #0]
 8007d4c:	f7fa f987 	bl	800205e <_isatty>
 8007d50:	1c43      	adds	r3, r0, #1
 8007d52:	d102      	bne.n	8007d5a <_isatty_r+0x1a>
 8007d54:	682b      	ldr	r3, [r5, #0]
 8007d56:	b103      	cbz	r3, 8007d5a <_isatty_r+0x1a>
 8007d58:	6023      	str	r3, [r4, #0]
 8007d5a:	bd38      	pop	{r3, r4, r5, pc}
 8007d5c:	2000035c 	.word	0x2000035c

08007d60 <_lseek_r>:
 8007d60:	b538      	push	{r3, r4, r5, lr}
 8007d62:	4d07      	ldr	r5, [pc, #28]	; (8007d80 <_lseek_r+0x20>)
 8007d64:	4604      	mov	r4, r0
 8007d66:	4608      	mov	r0, r1
 8007d68:	4611      	mov	r1, r2
 8007d6a:	2200      	movs	r2, #0
 8007d6c:	602a      	str	r2, [r5, #0]
 8007d6e:	461a      	mov	r2, r3
 8007d70:	f7fa f980 	bl	8002074 <_lseek>
 8007d74:	1c43      	adds	r3, r0, #1
 8007d76:	d102      	bne.n	8007d7e <_lseek_r+0x1e>
 8007d78:	682b      	ldr	r3, [r5, #0]
 8007d7a:	b103      	cbz	r3, 8007d7e <_lseek_r+0x1e>
 8007d7c:	6023      	str	r3, [r4, #0]
 8007d7e:	bd38      	pop	{r3, r4, r5, pc}
 8007d80:	2000035c 	.word	0x2000035c

08007d84 <_read_r>:
 8007d84:	b538      	push	{r3, r4, r5, lr}
 8007d86:	4d07      	ldr	r5, [pc, #28]	; (8007da4 <_read_r+0x20>)
 8007d88:	4604      	mov	r4, r0
 8007d8a:	4608      	mov	r0, r1
 8007d8c:	4611      	mov	r1, r2
 8007d8e:	2200      	movs	r2, #0
 8007d90:	602a      	str	r2, [r5, #0]
 8007d92:	461a      	mov	r2, r3
 8007d94:	f7fa f90e 	bl	8001fb4 <_read>
 8007d98:	1c43      	adds	r3, r0, #1
 8007d9a:	d102      	bne.n	8007da2 <_read_r+0x1e>
 8007d9c:	682b      	ldr	r3, [r5, #0]
 8007d9e:	b103      	cbz	r3, 8007da2 <_read_r+0x1e>
 8007da0:	6023      	str	r3, [r4, #0]
 8007da2:	bd38      	pop	{r3, r4, r5, pc}
 8007da4:	2000035c 	.word	0x2000035c

08007da8 <_init>:
 8007da8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007daa:	bf00      	nop
 8007dac:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007dae:	bc08      	pop	{r3}
 8007db0:	469e      	mov	lr, r3
 8007db2:	4770      	bx	lr

08007db4 <_fini>:
 8007db4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007db6:	bf00      	nop
 8007db8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007dba:	bc08      	pop	{r3}
 8007dbc:	469e      	mov	lr, r3
 8007dbe:	4770      	bx	lr
